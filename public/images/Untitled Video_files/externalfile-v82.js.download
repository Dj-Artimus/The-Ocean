// Get Cookie fun
var planValues = ["free", "starter","growth","startup","personal", "pro","biz", "enterprise","basic","voice pro","slides pro"]
var listenr_status=0;
var transplansdata
var successcallback
var toteamid
var entpaymentMode
var retrycharge1=0
fetch('https://static.animaker.com/plans_languageV8.json')
  .then(response => response.json()).then(data => transplansdata=data);

  var allowedemails = '';
  fetch('https://static.animaker.com/email_domains.txt')
  .then(response => response.text()).then(data => allowedemails=data.split('\n'));


function getCookie(name) {
    var cookieValue = null;
    if (document.cookie && document.cookie !== '') {
          var cookies = document.cookie.split(';');
          for (var i = 0; i < cookies.length; i++) {
                var cookie = cookies[i].trim();
                // Does this cookie string begin with the name we want?
                if (cookie.substring(0, name.length + 1) === (name + '=')) {
                      cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                      break;
                }
          }
    }
    return cookieValue;
}
var csrftoken = getCookie('csrftoken');
var language_code = getCookie('django_language');
if(language_code == null ){
      language_code = "en"
}
var params_src = ''
var redirecturlserver = location.protocol + '//' + location.host;

// FB Export

// Load the SDK asynchronously
(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = 'https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v20.0&appId=599579906810762&autoLogAppEvents=1';
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));


window.fbAsyncInit = function() {
FB.init({
  appId   : '599579906810762',
  oauth   : true,
  status  : true, // check login status
  cookie  : true, // enable cookies to allow the server to access the session
  xfbml   : true ,// parse XFBML
  version : 'v20.0'

});

};


uploadApiUrl  = "https://api.animaker.com"

var teamDetails

function removediscount(e,monthCost,type){

      e.parentNode.parentNode.style.display = "none";
      document.getElementById("total_membersCost_splitUp").childNodes[1].style.visibility = "hidden"
      if(type == "amount"){
            discountPriceVal = document.getElementById("totalCostAmountPay").innerText.slice(1)
            totalAmount = parseFloat(discountPriceVal)+parseFloat(teamDetails['discountAmount'])
            document.getElementById("totalCostAmountPay").innerHTML = "$"+parseFloat(totalAmount).toFixed(2)
      }
      else{
            document.getElementById("totalCostAmountPay").innerHTML = "$"+monthCost
      }


}

function changeUserCardDetails(e ,brand,cc){
      if( e.classList[1] == "change"){
            document.getElementsByClassName("card-contents")[0].style.display = "block"
            document.getElementsByClassName("note_payment_card_details")[0].firstChild.innerHTML = pgettext('paymentsUpgradePlans','This will replace')+" "+ brand + " **** " + cc +". "

            e.innerHTML = pgettext("paymentsUpgradePlans","Cancel")
            e.classList.remove("change");
            e.classList.add("cancel");

      }
      else{
            document.getElementById("displaycarderrors").innerHTML = ""
            document.getElementsByClassName("card-contents")[0].style.display = "none"
            document.getElementsByClassName("note_payment_card_details")[0].firstChild.innerHTML = pgettext('paymentsUpgradePlans','Pay with')+" "+ brand + " **** " + cc +". "

            e.innerHTML = pgettext("paymentsUpgradePlans","Change")
            e.classList.remove("cancel");
            e.classList.add("change");
      }
}

function cycleChangeClicked(e) {

    document.getElementsByClassName("onselecting-plan")[0].classList.remove("selected-plan");
    document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");

    var id = e.getAttribute('id');

    e.classList.add("selected-plan");

    proration = teamDetails['proration'];
    teamSize = teamDetails['teamSize'];
    planName = teamDetails['plan'];

    document.getElementById("displaycarderrors").innerHTML = ""

    if(document.getElementsByClassName("discount_coupen_show")[0].style.display != ""){

      var pricing_url = new URLSearchParams(window.location.search.replaceAll("&amp;","&"));

      if(pricing_url.get("type") == "CP"){
            if(pricing_url.get("p").split("_").length == 1){
                  plantype = pricing_url.get("p")
                  discountType = "percentage"
            }
            else{
                  plantype = pricing_url.get("p").split("_")[1]
                  discountType = "amount"
            }
            discountAmount = teamDetails['discountAmount']

      }
      else{

            discountType = teamDetails['discountType']

            if(id=="SelectedMonthlyPricingPlan"){
                  plantype = "monthly"
                  teamDetails['temp'] = teamDetails['monthlyamount']
            }
            else if(id=="SelectedYearlyPricingPlan"){
                  plantype = "yearly"
                  teamDetails['temp'] = teamDetails['discountAmount']
            }

            discountAmount = teamDetails['temp']

            // else if(id== "SelectedHalfYearlyPricingPlan"){
            //       plantype = "half-yearly"
            // }
      }


      var amountval

      document.getElementsByClassName("discount_coupen_show")[0].style.display = "none"

      if(id=="SelectedMonthlyPricingPlan" && planName=="starter" && proration == false){
            amountval = 35
            document.getElementById("total_membersCost_splitUp").innerHTML= "$"+amountval+" x "+teamSize+ pgettext('paymentsUpgradePlans',' Team members')
            monthCost=35*teamSize
            document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
            document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")
      }
      else if(id=="SelectedYearlyPricingPlan" && planName=="starter" && proration == false){
            amountval = 228
            document.getElementById("total_membersCost_splitUp").innerHTML= "$"+amountval+" x "+teamSize+ pgettext('paymentsUpgradePlans',' Team members')
            monthCost=228*teamSize
            document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
            document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
      }
      else if(id=="SelectedMonthlyPricingPlan" && planName=="pro" && proration == false){
            amountval = 79
            document.getElementById("total_membersCost_splitUp").innerHTML= "$"+amountval+" x "+teamSize+ pgettext('paymentsUpgradePlans',' Team members')
            monthCost=79*teamSize
            document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
            document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

      }
      else if(id=="SelectedYearlyPricingPlan" && planName=="pro" && proration == false){
            amountval = PRO_Y_Y
            document.getElementById("total_membersCost_splitUp").innerHTML= "$"+amountval+" x "+teamSize+ pgettext('paymentsUpgradePlans',' Team members')
            monthCost=PRO_Y_Y*teamSize
            document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
            document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
      }
      else if(id=="SelectedMonthlyPricingPlan" && planName=="basic" && proration == false){
            amountval = 20
            document.getElementById("total_membersCost_splitUp").innerHTML= "$"+amountval+" x "+teamSize+ pgettext('paymentsUpgradePlans',' Team members')
            monthCost=20*teamSize
            document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
            document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

      }
      else if(id=="SelectedYearlyPricingPlan" && planName=="basic" && proration == false){
            amountval = 120
            document.getElementById("total_membersCost_splitUp").innerHTML= "$"+amountval+" x "+teamSize+ pgettext('paymentsUpgradePlans',' Team members')
            monthCost=120*teamSize
            document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
            document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
      }
      else if(proration && id=="SelectedMonthlyPricingPlan"){
            splitUpAmnt=teamDetails['monthCost']
            totalAmount = splitUpAmnt * teamSize
            document.getElementById("total_membersCost_splitUp").innerHTML = "$"+splitUpAmnt+" x "+teamSize+ pgettext('paymentsUpgradePlans',' Team members')
            document.getElementById("totalCostAmountPay").innerHTML="$"+totalAmount+""
            document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")
      }
      else if(proration && id=="SelectedYearlyPricingPlan"){
            splitUpAmnt=teamDetails['yearCost']
            totalAmount = splitUpAmnt * teamSize
            document.getElementById("total_membersCost_splitUp").innerHTML = "$"+splitUpAmnt+" x "+teamSize+ pgettext('paymentsUpgradePlans',' Team members')
            document.getElementById("totalCostAmountPay").innerHTML="$"+totalAmount+""
            document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
      }


      if( id=="SelectedMonthlyPricingPlan" && plantype == "monthly" && proration == false && teamDetails["downgrade"] == false && discountType == "percentage"){
            document.getElementsByClassName("discount_coupen_show")[0].style.display = "block"
            document.getElementById("total_membersCost_splitUp").innerHTML= "$"+amountval+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+parseFloat((amountval/100)*discountAmount).toFixed(2)+" x "+teamSize+" from coupon )</span>"
            monthCost=(amountval*teamSize)- ((amountval/100)*discountAmount)
            document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""

      }
      else if(id=="SelectedYearlyPricingPlan" && plantype == "yearly" && proration == false && teamDetails["downgrade"] == false && discountType == "percentage"){
            document.getElementsByClassName("discount_coupen_show")[0].style.display = "block"
            document.getElementById("total_membersCost_splitUp").innerHTML= "$"+amountval+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+parseFloat((amountval/100)*discountAmount).toFixed(2)+" x "+teamSize+" from coupon )</span>"
            monthCost=(amountval*teamSize)- ((amountval/100)*discountAmount)
            document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""

      }
      else if( id=="SelectedMonthlyPricingPlan" && plantype == "monthly" && proration == false && teamDetails["downgrade"] == false && discountType == "amount"){
            document.getElementsByClassName("discount_coupen_show")[0].style.display = "block"
            document.getElementById("total_membersCost_splitUp").innerHTML= "$"+amountval+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+discountAmount+" from coupon )</span>"
            monthCost=(amountval*teamSize)- discountAmount
            document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""

      }
      else if(id=="SelectedYearlyPricingPlan" && plantype == "yearly" && proration == false && teamDetails["downgrade"] == false && discountType == "amount"){
            document.getElementsByClassName("discount_coupen_show")[0].style.display = "block"
            document.getElementById("total_membersCost_splitUp").innerHTML= "$"+amountval+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+discountAmount+" from coupon )</span>"
            monthCost=(amountval*teamSize)- discountAmount
            document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""

      }
      else if(proration && id=="SelectedMonthlyPricingPlan" && plantype == "monthly"){
            document.getElementsByClassName("discount_coupen_show")[0].style.display = "block"
            splitUpAmnt=teamDetails['monthCost']
            totalAmount = splitUpAmnt * teamSize
            document.getElementById("total_membersCost_splitUp").innerHTML = "$"+splitUpAmnt+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+0+" from coupon )</span>"
            discountvalAmnt= totalAmount
            document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(discountvalAmnt).toFixed(2)+""
            document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")
      }
      else if(proration && id=="SelectedYearlyPricingPlan" && plantype == "yearly"){
            document.getElementsByClassName("discount_coupen_show")[0].style.display = "block"
            splitUpAmnt=teamDetails['yearCost']
            totalAmount = splitUpAmnt * teamSize
            document.getElementById("total_membersCost_splitUp").innerHTML = "$"+splitUpAmnt+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+0+" from coupon )</span>"
            discountvalAmnt= totalAmount
            document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(discountvalAmnt).toFixed(2)+""
            document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
      }

    }
    else{
            if( id=="SelectedMonthlyPricingPlan" && proration == false && planName=="starter"){
                  document.getElementById("total_membersCost_splitUp").innerHTML="$35 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                  monthCost=35*teamSize
                  document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                  document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")
            }
            else if(id=="SelectedYearlyPricingPlan" && proration == false && planName=="starter"){
                  document.getElementById("total_membersCost_splitUp").innerHTML="$228 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                  monthCost=228*teamSize
                  document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                  document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
            }
            else if( id=="SelectedMonthlyPricingPlan" && proration == false && planName=="pro"){
                  document.getElementById("total_membersCost_splitUp").innerHTML="$79 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                  monthCost=79*teamSize
                  document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                  document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")
            }
            else if(id=="SelectedYearlyPricingPlan" && proration == false && planName=="pro"){
                  document.getElementById("total_membersCost_splitUp").innerHTML="$"+PRO_Y_Y+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                  monthCost=PRO_Y_Y*teamSize
                  document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                  document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
            }
            else if( id=="SelectedMonthlyPricingPlan" && proration == false && planName=="biz"){
                  document.getElementById("total_membersCost_splitUp").innerHTML="$59 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                  monthCost=59*teamSize
                  document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                  document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")
            }
            else if(id=="SelectedYearlyPricingPlan" && proration == false && planName=="biz"){
                  document.getElementById("total_membersCost_splitUp").innerHTML="$"+PRO_Y_Y+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                  monthCost=PRO_Y_Y*teamSize
                  document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                  document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
            }
            else if( id=="SelectedMonthlyPricingPlan" && proration == false && planName=="basic"){
                  document.getElementById("total_membersCost_splitUp").innerHTML="$20 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                  monthCost=20*teamSize
                  document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                  document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")
            }
            else if(id=="SelectedYearlyPricingPlan" && proration == false && planName=="basic"){
                  document.getElementById("total_membersCost_splitUp").innerHTML="$120 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                  monthCost=120*teamSize
                  document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                  document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
            }
            else if( id=="SelectedMonthlyPricingPlan" && proration == false && planName=="voice pro"){
                  document.getElementById("total_membersCost_splitUp").innerHTML="$35 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                  monthCost=35*teamSize
                  document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                  document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")
            }
            else if(id=="SelectedYearlyPricingPlan" && proration == false && planName=="voice pro"){
                  document.getElementById("total_membersCost_splitUp").innerHTML="$228 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                  monthCost=228*teamSize
                  document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                  document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
            }
            else if( id=="SelectedMonthlyPricingPlan" && proration == false && planName=="slides pro"){
                  document.getElementById("total_membersCost_splitUp").innerHTML="$20 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                  monthCost=20*teamSize
                  document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                  document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")
            }
            else if(id=="SelectedYearlyPricingPlan" && proration == false && planName=="slides pro"){
                  document.getElementById("total_membersCost_splitUp").innerHTML="$120 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                  monthCost=120*teamSize
                  document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                  document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
            }
            else if(proration && id=="SelectedMonthlyPricingPlan"){

                  splitUpAmnt=teamDetails['monthCost']
                  totalAmount = splitUpAmnt * teamSize
                  document.getElementById("total_membersCost_splitUp").innerHTML = "$"+splitUpAmnt+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')

                  document.getElementById("totalCostAmountPay").innerHTML="$"+totalAmount+""
                  document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")
            }
            else if(proration && id=="SelectedYearlyPricingPlan"){

                  splitUpAmnt=teamDetails['yearCost']
                  totalAmount = splitUpAmnt * teamSize
                  document.getElementById("total_membersCost_splitUp").innerHTML = "$"+splitUpAmnt+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')

                  document.getElementById("totalCostAmountPay").innerHTML="$"+totalAmount+""
                  document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
            }
      }

}

var webPaymentUpgradeHandler
var inAppPaymentUpgrade

var webPaymentDowngradeHandler

var presetPlans

var importzoomvideoslistener

var openpastduepayListener;
var payPastDueNow;
var pastduepayListener;

var paymentmode;
var upgradecounter = 0;
var downgradecounter = 0;

function upgradePlan(teamId,type,plan,ext1,ext2,selPlan,cycle,source,cplantypecycle, cpecd,discountType, trial){

    return new Promise(function(resolve, reject) {
      
      webPaymentUpgradeHandler = function() {
            
            upgradecounter += 1
            // console.log(paymentmode,teamId,selPlan,cycle,source,trial);
            console.log("inside listenr")
            // console.log(this,teamId,selPlan,cycle,source,trial)
            // console.log("event called", this.target)
            // paymentmode = this.target.getAttribute("data-payment");
            // console.log(paymentmode);
            if(upgradecounter < 2) { 
                  if(paymentmode != 'paypal'){
                        // cardPaymentListener(teamId,selPlan,cycle,source,trial);
                        document.getElementsByClassName("upgrade-now-btn")[0].disabled = true;
            
                        url = redirecturlserver +'/p/pcs'
                        idVal = document.getElementsByClassName("selected-plan")[0].getAttribute("id")
                        if(idVal == "SelectedMonthlyPricingPlan"){
                              cycle = "monthly"
                        }
                        else if(idVal == "SelectedYearlyPricingPlan"){
                              cycle = "yearly"
                        }
                        else if(idVal == "SelectedHalfYearlyPricingPlan"){
                              cycle = "half-yearly"
                        }
            
                        var cardNo = document.getElementById("cardNumberPlanUpgrade").value
                        var expiry = document.getElementById("expiryDatePlanUpgrade").value
                        var cvv = document.getElementById("cardCvvPlanUpgrade").value
                        var zipcode = document.getElementById("zip-code-val").value
            
                        if( document.getElementsByClassName("change_credit_card")[0] == undefined || document.getElementsByClassName("change_credit_card")[0].innerHTML == "Cancel" ){
                              if(cardNo.trim() == "" || expiry.trim() == "" || cvv.trim() == "" || zipcode.trim() == ""){
            
                                    document.getElementById("displaycarderrors").innerHTML = pgettext("Validation-Error","Card details cannot be empty");
                                    document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                              }
                              else{
            
                                    data='h='+btoa(teamId)+'&a='+btoa(selPlan)+"&b="+btoa(cycle)+'&c='+btoa(cardNo)+'&d='+btoa(expiry)+"&e="+btoa(cvv)+"&f="+btoa(zipcode)+"&g="+btoa(source)
            
                                    document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                                    fbajaxcall(url,data,null).then(function(result) {
                                          document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                          document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
            
                                          res = JSON.parse(result);
            
                                          if(!res["error"]){
                                                if(res['redirect_url']){
                                                      window.location = res['redirect_url'];
                                                }
                                                resolve(result)
                                                closeUpgradeOverlayListeners()
                                                
                                                
            
                                          }
                                          else{
                                                document.getElementById("displaycarderrors").innerHTML = res["msg"];
                                                document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                                upgradecounter = 0 //resetting the counter
                                          }
            
                                    }, function(error) {
                                          upgradecounter = 0 //resetting the counter
                                          reject(error)
                                          closeUpgradeOverlayListeners()
            
                                    })
                              }
                        }
                        else{
                              data='h='+btoa(teamId)+'&a='+btoa(selPlan)+"&b="+btoa(cycle)+"&g="+btoa(source)
            
                              document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                              fbajaxcall(url,data,null).then(function(result) {
                                    document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                    document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                                    res = JSON.parse(result);
                                    if(!res["error"]){
                                          if(res['redirect_url']){
                                                window.location = res['redirect_url'];
                                          }
                                          resolve(result);
                                          closeUpgradeOverlayListeners()
                                    }
                                    else {
                                          document.getElementById("displaycarderrors").innerHTML = res["msg"];
                                          document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                          upgradecounter = 0; //resetting counter
                                    }
                                    
                              }, function(error) {
                                    upgradecounter = 0 //resetting the counter
                                    reject(error)
                                    closeUpgradeOverlayListeners()
            
                              })
                        }
                        return true;
                  }else if (paymentmode == 'paypal'){
                        // paypalPaymentListener(teamId,selPlan,cycle,source,trial);
                        // console.log(teamId,selPlan,cycle,source,trial);
                        document.getElementsByClassName("upgrade-now-btn")[0].disabled = true;
            
                        url = redirecturlserver +'/payments/p/paypal/subscription/'
                        idVal = document.getElementsByClassName("selected-plan")[0].getAttribute("id")
                        if(idVal == "SelectedMonthlyPricingPlan"){
                              cycle = "monthly"
                        }
                        else if(idVal == "SelectedYearlyPricingPlan"){
                              cycle = "yearly"
                        }
                        else if(idVal == "SelectedHalfYearlyPricingPlan"){
                              cycle = "half-yearly"
                        }
            
            
                        data='h='+btoa(teamId)+'&a='+btoa(selPlan)+"&b="+btoa(cycle)+"&g="+btoa(source)
            
                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                        fbajaxcall(url,data,null).then(function(result) {
                              document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                              document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                              res = JSON.parse(result);
                              if(!res["error"]) {
                                    if(res['redirect_url']){
                                          window.location = res['redirect_url'];
                                    }
                  
                                    resolve(result);
                                    closeUpgradeOverlayListeners()
                              }
                              else {
                                    document.getElementById("displaycarderrors").innerHTML = res["msg"];
                                    document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                    upgradecounter = 0; //resetting counter 
                              }
                              
                        }, function(error) {
                              upgradecounter = 0 //resetting the counter
                              reject(error)
                              closeUpgradeOverlayListeners()
            
                        })
                        
                  }
            }
                  
      }

      webPaymentDowngradeHandler = function(){
            downgradecounter += 1;
            if(downgradecounter < 2) {
                  if(paymentmode != "paypal") {
                        document.getElementsByClassName("upgrade-now-btn")[0].disabled = true;
                        url = redirecturlserver +'/payments/p/bt/cbts/'
                        idVal = document.getElementsByClassName("selected-plan")[0].getAttribute("id")
                        if(idVal == "SelectedMonthlyPricingPlan"){
                              cycle = "monthly"
                        }
                        else if(idVal == "SelectedYearlyPricingPlan"){
                              cycle = "yearly"
                        }
                        else if(idVal == "SelectedHalfYearlyPricingPlan"){
                              cycle = "half-yearly"
                        }
                        nouncetk = ""
                        ce = 1
                        cc = ''
            
                        data='h='+btoa(teamId)+'&a='+btoa(selPlan)+"&b="+btoa(cycle)+"&g="+btoa(source)+"&n=" +btoa(nouncetk)+"&ce="+btoa(ce)+"&cc="+btoa(cc)
                        // data += (ext2 != undefined) ? ('&cc=' +btoa(ext2)) : "";
                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                        fbajaxcall(url,data,null).then(function(result) {
                              document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                              document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                              res = JSON.parse(result);
                              if(!res["error"]) {

                                    if(res['redirect_url']){
                                          window.location = res['redirect_url'];
                                    }
                                    resolve(result);
                                    closeUpgradeOverlayListeners()
                              }
                              else {
                                    document.getElementById("displaycarderrors").innerHTML = res["message"];
                                    document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                    downgradecounter = 0; //resetting counter
                              }
                              
                        }, function(error) {
                              downgradecounter = 0; //resetting counter
                              reject(error)
                              closeUpgradeOverlayListeners()
                        })
                  }
            
                  else {
                        document.getElementsByClassName("upgrade-now-btn")[0].disabled = true;
                        url = redirecturlserver +'/payments/p/paypal/subscription/'
                        idVal = document.getElementsByClassName("selected-plan")[0].getAttribute("id")
                        if(idVal == "SelectedMonthlyPricingPlan"){
                              cycle = "monthly"
                        }
                        else if(idVal == "SelectedYearlyPricingPlan"){
                              cycle = "yearly"
                        }
                        else if(idVal == "SelectedHalfYearlyPricingPlan"){
                              cycle = "half-yearly"
                        }
            
                        data='h='+btoa(teamId)+'&a='+btoa(selPlan)+"&b="+btoa(cycle)+"&g="+btoa(source)+"&cc="+btoa(ext2)
                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                        fbajaxcall(url,data,null).then(function(result) {
                              document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                              document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                              res = JSON.parse(result);
                              if(!res["error"]) {
                                    if(res['redirect_url']){
                                          window.location = res['redirect_url'];
                                    }
                                    resolve(result);
                                    closeUpgradeOverlayListeners()
                              }
                              else {
                                    document.getElementById("displaycarderrors").innerHTML = res["msg"];
                                    document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                    downgradecounter = 0; //resetting counter
                              }
                        }, function(error) {
                              downgradecounter = 0; //resetting counter
                              reject(error)
                              closeUpgradeOverlayListeners()
                        })
                  }
            }
      };
          document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
          document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "block";

          url = redirecturlserver+'/p/pver';

          data='teamId='+teamId+'&action=upgrade'
          fbajaxcall(url,data,null).then(function(result) {
                result = JSON.parse(result)
                if(result["error"]){
                  document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                  document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none";
                  document.getElementById("NotificationbarMessage").innerHTML = result["message"];
                  document.getElementsByClassName("Notification_popupbar")[0].style.display = "block";
                  setTimeout(function(){
                      document.getElementsByClassName("Notification_popupbar")[0].style.display = "none";
                  },3000)
                  return true;
                  
                }

                
                if (result["mobilesubscription"] == true) {
                    document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                    document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none";
                    document.getElementById("mobile-subscription-popup").style.display = "block";
                    return true;
              }

              if (result["enterpriseplan"] == true || result["bundleplan"] == true) {

                  document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                  document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none";
                  $("#NotificationbarMessage").html( 'You are in a custom plan please contact <br> our support team to upgrade.' )
                  $('.Notification_popupbar').fadeIn();
                  return true;
                }

  
                if(result['data'] && result['data']['pastdue'] == true && ext1 != 'brand'){
                  var pastduetype = (source.includes('pricingpage')) ? "changeplan": "upgrade" ;
                  var section = (source.includes('pricingpage')) ? "trynow": ext1 ;
                  pastduepopup(teamId, pastduetype, source, section).then(function(result){

                        resolve(result)

                  }, function(error) {

                        reject(error)
                  })
                }else{

                var displayidblock

                function looptochoosedplan(selplan){

                        document.getElementById(displayidblock).style.display = "none";

                        choosedPlan(teamId,type,selplan,plan,source).then(function(result) {
                              resolve(result)
                        }, function(error) {

                              reject(error)
                        })
                }

                  // if(plan == "pro"){
                  //       plan= "business"
                  // }
                  if(type == "upgradInapp" ){
                        // if(ext2 == 2 || ext2 == undefined ){
                        //       displayidblock = "Upgrade"+type+ext1+"basic"
                        // }

                        if(ext2 == 2 || ext2 == undefined ||ext2 == 3){
                              displayidblock = "Upgrade"+type+ext1+"starter"
                              if(plan == "voice pro" || plan == "slides pro"){
                                    displayidblock = "Upgrade"+type+ext1+"pro"
                              }
                        }
                        else if(ext2 == 4){
                              displayidblock = "Upgrade"+type+ext1+"pro"
                        }
                        else if(ext2 == 5){
                              displayidblock = "Upgrade"+type+ext1+"enterprise"
                        }
                  }
                  else if( type == "deckupgrade" ){
                        if(ext1 == "ccb" && ext2 == undefined){
                              if(plan == planValues[0] || plan == planValues[2] || plan == planValues[8]){
                                    displayidblock = "UpgradeupgradInapp"+ext1+"starter"
                              }
                              else if(plan == planValues[5] || plan == planValues[6] ||  plan == planValues[10]){
                                    displayidblock = "UpgradeupgradInapp"+ext1+"enterprise"
                              }
                              else{
                                    displayidblock = "UpgradeupgradInapp"+ext1+"pro"
                              }
                        }
                        if(ext1 =="download" && ext2 == undefined){
                              if(plan != planValues[5] || plan != planValues[7]){
                                    displayidblock = "UpgradeupgradInapp"+ext1+"pro"
                              }

                        }
                        else{
                              if(ext2 == 2 || ext2 == undefined ||ext2 == 3 ){
                                    displayidblock = "UpgradeupgradInapp"+ext1+"starter"
                                    if(plan == "voice pro"){
                                          displayidblock = "UpgradeupgradInapp"+ext1+"pro"
                                    }
                              }
                              else if(ext2 == 4){
                                    displayidblock = "UpgradeupgradInapp"+ext1+"pro"
                              }
                              else if(ext2 == 5){
                                    displayidblock = "UpgradeupgradInapp"+ext1+"enterprise"
                              }
                        }
                  }
                  else{
                        // if(plan == planValues[0] || plan == planValues[2] ){
                        //       displayidblock = "Upgrade"+type+"basic"
                        // }
                        if(ext1 == 'cbpupgrade'){
                            if(ext2 == 2 || ext2 == undefined ||ext2 == 3 ){
                                displayidblock = "Upgrade" + type + ext1 + "starter"
                                if(plan == "voice pro"){
                                      displayidblock = "Upgrade" + type + ext1 + "pro"
                                }
                            }
                            else{
                                displayidblock = "Upgrade" + type + ext1 + "pro"
                            }
                        }
                        else{
                            if(plan == planValues[0] || plan == planValues[2] || plan == planValues[8]){
                                  displayidblock = "Upgrade"+type+"starter"
                                  if(plan == "voice pro" || plan == "slides pro"){
                                        displayidblock = "Upgrade"+type+"pro"
                                  }
                            }
                            else if(plan == planValues[5] || plan == planValues[6] ){
                                  displayidblock = "Upgrade"+type+"enterprise"
                            }
                            else{
                                  displayidblock = "Upgrade"+type+"pro"
                            }
                        }
                  }

                //  Mismatch in plan check
                if(plan != result['plan']){

                      document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";

                      resolve( JSON.stringify({"error":true,"msg": pgettext("paymentsUpgradePlans-NoticationMessage","Mismatch in plan")}) )
                }
                //  Type Quality
                else if(type == "upgradInapp" && ext1 == "quality"){
                        source = ext1

                        if(ext2 == 2 || ext2 == undefined ||ext2 == 3){
                              displayidblock = "Upgrade"+ext1+"FullHD"
                              if(plan == "voice pro" || plan == "slides pro"){
                                    displayidblock = "Upgrade"+ext1+"2k"
                              }
                        }
                        else if( ext2 == 4){
                              displayidblock = "Upgrade"+ext1+"2k"
                        }
                        else if( ext2 == 5){
                              displayidblock = "Upgrade"+ext1+"4k"
                        }

                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                        document.getElementById(displayidblock).style.display = "block";

                        document.getElementById(displayidblock).addEventListener("click",function growthListener (e){

                              if(e.target.id == "VideoGrowth"){
                                    looptochoosedplan(planValues[1])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "VideoBiz" || e.target.id == "upgradeQualitytoBiz"){
                                    // looptochoosedplan(planValues[5])
                                    looptochoosedplan("pro")
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if( e.target.id == "upgradeQualityFreetoEnterprise" || (e.target.id == "upgradeQualityGrowthtoEnterprise") || e.target.id == "upgradeQualityBiztoEnterprise" ){
                                    looptochoosedplan(planValues[7])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }

                        } , false)
 
                }

                // Type STOCK
                else if(type == "stock"){
                        source = type
                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                        document.getElementById(displayidblock).style.display = "block";

                        document.getElementById(displayidblock).addEventListener("click",function growthListener(e){

                              if(e.target.id == "upgradeStockFreeBasic"){
                                    looptochoosedplan(planValues[8])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "upgradeStockFreeGrowth" || e.target.id == "upgradeStockFreeStarter"){
                                    looptochoosedplan(planValues[1])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if (e.target.id == "upgradeStockFreeBiz" || e.target.id == "upgradeStockGrowthbiz"){
                                    // looptochoosedplan(planValues[5])
                                    looptochoosedplan("pro")
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "upgradeStockFreetoEnterprise" || (e.target.id == "upgradeStockGrowthtoEnterprise") || e.target.id == "upgradeStockBizEnterprise" ){
                                    looptochoosedplan(planValues[7])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }

                        } ,  false)

                }
                 // Type MUSIC
                 else if(type == "music"){
                        source = type
                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                        document.getElementById(displayidblock).style.display = "block";

                        document.getElementById(displayidblock).addEventListener("click",function growthListener(e){

                              if(e.target.id == "upgradeMusicFreeBasic"){
                                    looptochoosedplan(planValues[8])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "upgradeMusicFreeGrowth" || e.target.id == "upgradeMusicFreeStarter"){
                                    looptochoosedplan(planValues[1])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if (e.target.id == "upgradeMusicFreeBiz" || e.target.id == "upgradeMusicGrowthbiz"){
                                    // looptochoosedplan(planValues[5])
                                    looptochoosedplan("pro")
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "upgradeMusicFreetoEnterprise" || (e.target.id == "upgradeMusicGrowthtoEnterprise") || e.target.id == "upgradeMusicBizEnterprise" ){
                                    looptochoosedplan(planValues[7])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }

                        } ,  false)

                  }

                // Type Character builder
                else if(type == "ccb"){

                        if(plan == planValues[10]){
                              displayidblock = "Upgrade"+type+"enterprise"
                        }

                        if(ext1 == 'kids'){

                              if(ext2 == 2 || ext2 == undefined ||ext2 == 3){
                                    displayidblock = "Upgrade"+type+ext1+"starter"
                                    if(plan == "voice pro" || plan == "slides pro"){
                                          displayidblock = "Upgrade"+type+ext1+"pro"
                                    }
                              }

                              source = type + ext1
                        }else{
                              source = type
                        }

                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                        document.getElementById(displayidblock).style.display = "block";

                        document.getElementById(displayidblock).addEventListener("click",function growthListener (e){

                              if(e.target.id == "ccbUpgradeFreetoBasic"){
                                    looptochoosedplan(planValues[8])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "ccbUpgradeFreetoGrowth" || e.target.id == "ccbUpgradeFreetoStarter"){
                                    looptochoosedplan(planValues[1])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "ccbUpgradeFreetobiz" || e.target.id == "ccbUpgradeGrowthtoBusiness" ){
                                    // looptochoosedplan(planValues[5])
                                    looptochoosedplan("pro")
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "ccbUpgradeFreetoEnterprise" || (e.target.id == "ccbUpgradeGrowthtoEnterprise") || e.target.id == "ccbUpgradeBizEnterprise" ){
                                    looptochoosedplan(planValues[7])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }

                        } ,false)

                }

                // Normal Upgrade flow in Sidemenubar and MyTeams
                else if(type == "upgrade"){

                        source = ext1

                      document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                      document.getElementById(displayidblock).style.display = "block";

                      document.getElementById(displayidblock).addEventListener("click",function growthListener (e){

                              if(e.target.id == "detailedUpgradefreetobasic"){
                                    looptochoosedplan(planValues[8])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "detailedUpgradefreetogrowth" || e.target.id == "detailedUpgradefreetostarter"){
                                    looptochoosedplan(planValues[1])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "detailedUpgradefreetobiz" || e.target.id == "detailedUpgradestartertopro"){
                                    // looptochoosedplan(planValues[5])
                                    looptochoosedplan("pro")
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "detailedupgradefreetoenterprise" || e.target.id == "detailedupgradestartertoenterprise" || e.target.id == "detailedupgradeprotoenterprise"){
                                    looptochoosedplan(planValues[7])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }

                      },false)

                }

            //   Watermark
                  else if(type == "upgradInapp" && ext1 == "Watermarkupgrade"){

                        source = ext1

                        if(plan == planValues[0] || plan == planValues[2] || plan == planValues[8]){
                              displayidblock = "Upgrade"+ext1+"starter"
                              if(plan == "voice pro" || plan == "slides pro"){
                                    displayidblock = "Upgrade"+ext1+"pro"
                              }
                        }
                        else if(plan == planValues[5] || plan == planValues[6] ){
                              displayidblock = "Upgrade"+ext1+"enterprise"
                        }
                        else{
                              displayidblock = "Upgrade"+ext1+"pro"
                        }

                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                        document.getElementById(displayidblock).style.display = "block";

                        document.getElementById(displayidblock).addEventListener("click",function growthListener (e){

                                    if(e.target.id == "detailedUpgradefreetobasic"){
                                          looptochoosedplan(planValues[8])
                                          document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                                    }
                                    else if(e.target.id == "detailedUpgradefreetogrowth" || e.target.id == "detailedUpgradefreetostarter"){
                                          looptochoosedplan(planValues[1])
                                          document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                                    }
                                    else if(e.target.id == "detailedUpgradefreetobiz" || e.target.id == "detailedUpgradestartertopro"){
                                          // looptochoosedplan(planValues[5])
                                          looptochoosedplan("pro")
                                          document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                                    }
                                    else if(e.target.id == "detailedupgradefreetoenterprise" || e.target.id == "detailedupgradestartertoenterprise" || e.target.id == "detailedupgradeprotoenterprise"){
                                          looptochoosedplan(planValues[7])
                                          document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                                    }

                        },false)

                  }

                  else if(type == "upgradInapp" && ext1 == "videoformatsupgrade"){

                        source = ext1

                        if(plan == planValues[0] || plan == planValues[2] || plan == planValues[8]){
                              displayidblock = "Upgrade"+ext1+"pro"
                              if(plan == "voice pro" || plan == "slides pro"){
                                    displayidblock = "Upgrade"+ext1+"pro"
                              }
                        }
                        else if(plan == planValues[5] || plan == planValues[6] ){
                              displayidblock = "Upgrade"+ext1+"enterprise"
                        }
                        else{
                              displayidblock = "Upgrade"+ext1+"pro"
                        }

                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                        document.getElementById(displayidblock).style.display = "block";

                        document.getElementById(displayidblock).addEventListener("click",function growthListener (e){

                                    if(e.target.id == "detailedUpgradefreetobasic"){
                                          looptochoosedplan(planValues[8])
                                          document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                                    }
                                    else if(e.target.id == "detailedUpgradefreetogrowth" || e.target.id == "detailedUpgradefreetostarter"){
                                          looptochoosedplan(planValues[1])
                                          document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                                    }
                                    else if(e.target.id == "detailedUpgradefreetobiz" || e.target.id == "detailedUpgradestartertopro"){
                                          // looptochoosedplan(planValues[5])
                                          looptochoosedplan("pro")
                                          document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                                    }
                                    else if(e.target.id == "detailedupgradefreetoenterprise" || e.target.id == "detailedupgradestartertoenterprise" || e.target.id == "detailedupgradeprotoenterprise"){
                                          looptochoosedplan(planValues[7])
                                          document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                                    }

                        },false)

                  }

                else if(type == "upgradInapp" || type == "deckupgrade"){

                        if(ext1 == 'brand'){
                              source = ext1
                              document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                              document.getElementById("upgradInappbrandenterprise").style.display = "block";

                              document.getElementById("upgradInappbrandenterprise").addEventListener("click",function growthListener (e){
                              if(e.target.id == "brandEnterpriseUpgrade"){
                                    displayidblock="upgradInappbrandenterprise"
                                    looptochoosedplan(planValues[7])
                                    document.getElementById("upgradInappbrandenterprise").removeEventListener("click", growthListener, false )
                              }
                              },false)

                        }

                        source = type+ext1


                        if(type == "deckupgrade"){
                              if(ext2!=5 && ext2!=undefined){
                                    document.querySelector("#"+displayidblock+" .see_plans button").setAttribute("onclick","seeDetailedPlanSpecifications('e','deck')")
                              }

                              if(displayidblock.includes("starter")){
                                    document.querySelector("#"+displayidblock+" .growth_price span").innerHTML= "10"
                                    document.querySelector("#"+displayidblock+" .growth_text").innerHTML= "Slides pro"

                                    document.querySelectorAll("#"+displayidblock+" .plansQualityDescription")[0].style.visibility = "hidden"
                                    document.querySelectorAll("#"+displayidblock+" .plansQualityDescription")[0].style.width = 0
                                    document.querySelectorAll("#"+displayidblock+" .plansQualityDescription")[0].style.height = 0

                                    document.querySelectorAll("#"+displayidblock+" .plansQualityDescription")[1].style.visibility = "visible"
                                    document.querySelectorAll("#"+displayidblock+" .plansQualityDescription")[1].style.width = "unset"
                                    document.querySelectorAll("#"+displayidblock+" .plansQualityDescription")[1].style.height = "unset"

                              }
                        }


                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                        document.getElementById(displayidblock).style.display = "block";


                        document.getElementById(displayidblock).addEventListener("click",function growthListener (e){

                              if(e.target.id == "upgradeInappFreetoBasic"){
                                    looptochoosedplan(planValues[8])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "upgradeInappFreetoGrowth"){
                                    if(type == "deckupgrade" & displayidblock.includes("starter")){
                                          looptochoosedplan(planValues[10])
                                    }else{
                                          looptochoosedplan(planValues[1])
                                    }

                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "upgradeInappFreetobiz" || e.target.id == "upgradeInappGrowthtoBusiness"){
                                    // looptochoosedplan(planValues[5])
                                    looptochoosedplan("pro")
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "upgradeInappFreetoEnterprise" || e.target.id == "upgradeInappGrowthtoEnterprise" || e.target.id == "upgradeInappBizEnterprise"){
                                    looptochoosedplan(planValues[7])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }

                        },false)

                }
                else if(type == "voiceapp" || (type == "upgradInapp" && ext1 == "voiceupgrade")){

                        source = ext1

                        if(type == "upgradInapp" && ext1 == "voiceupgrade"){
                              source = type+ext1
                              type = "voiceapp"
                        }

                        if(plan == planValues[5] || plan == planValues[6] || plan == planValues[9] ){
                              displayidblock = "Upgrade"+type+"enterprise"
                        }
                        else if(plan != planValues[7] ){
                              displayidblock = "Upgrade"+type+"pro"
                        }
                        else{
                              resolve(JSON.stringify({"error":true,"msg": pgettext("paymentsUpgradePlans-NoticationMessage","Your Download count has exceeded.For more downloads contact support team.")}) )
                        }

                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                        document.getElementById(displayidblock).style.display = "block";

                        document.getElementById(displayidblock).addEventListener("click",function growthListener (e){

                              if(e.target.id == "detailedUpgradefreetovoicepro"){
                                    looptochoosedplan(planValues[9])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "detailedUpgradefreetoanimakerpro"){
                                    looptochoosedplan(planValues[5])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "detailedupgradevoicefreetoenterprise" || e.target.id == "detailedupgradevoiceprotoenterprise" ){
                                    looptochoosedplan(planValues[7])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }

                        },false)

                  }
                else if(type == "deckapp"){

                        source = type+ext1

                        if(plan == planValues[5] || plan == planValues[6] || plan == planValues[10]){//pro,biz,slides pro
                              displayidblock = "Upgrade"+type+"enterprise"
                        }
                        else if(plan == planValues[0] || plan == planValues[2] || plan == planValues[8]){ //free ,growth ,basic
                              displayidblock = "Upgrade"+type+"slidespro"
                        }
                        else{
                              displayidblock = "Upgrade"+type+"pro"
                        }

                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                        document.getElementById(displayidblock).style.display = "block";


                        document.getElementById(displayidblock).addEventListener("click",function growthListener (e){

                              if(e.target.id == "detailedUpgradefreetoslidespro"){
                                    looptochoosedplan(planValues[10])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "detailedUpgradefreetoanimakerpro" || e.target.id == "detailedUpgradeslidesprotoanimakerpro"){
                                    looptochoosedplan(planValues[5])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }
                              else if(e.target.id == "detailedupgradeslidesfreetoenterprise"  || e.target.id == "detailedupgradeslidesprotoenterprise" || e.target.id == "detailedupgradeprotoenterprise"){
                                    looptochoosedplan(planValues[7])
                                    document.getElementById(displayidblock).removeEventListener("click", growthListener, false )
                              }

                      },false)

                }
                //  My plans upgrade and downgrade flow
                else if (type == "planUpgrade"){

                        if( selPlan == "free" || ext2 || plan == "free" ){
                              proration = false;
                        }
                        else {
                              proration = true;
                        }

                        if(plan == planValues[9] && (selPlan == planValues[1] || selPlan == planValues[2] || selPlan == planValues[8]) ){
                              document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                              resolve(JSON.stringify({"error":true,"msg": pgettext("paymentsUpgradePlans-NoticationMessage","You cannot switch to "+selPlan+" because you are currently in voice plan.Contact support For more information.")}) )
                        }
                        else if(plan == planValues[10] && (selPlan == planValues[8] ) ){
                              document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                              resolve(JSON.stringify({"error":true,"msg": pgettext("paymentsUpgradePlans-NoticationMessage","You cannot switch to "+selPlan+" because you are currently in slides plan.Contact support For more information.")}) )
                        }
                        else{
                              url = redirecturlserver +'/p/pcc'
                              data='a='+btoa(teamId)+'&c='+btoa(proration)+'&d='+btoa(selPlan)+'&cycleval='+btoa("yearly")+'&pname='+btoa(selPlan)

                              fbajaxcall(url,data,null).then(function(result) {

                              
                              result = JSON.parse(result)
                              if (!result["error"]) {
                              teamSize = atob(result['c'])
                              trial_subscription = atob(result['trial'])
                              paymentmode = atob(result["paymentmode"]);
                              addPaymentMode(paymentmode);

                              removepaymentlisteners();
                              downgradecounter = 0;
                              upgradecounter = 0;

                              // Upgrade to higher plan
                              if(!ext2){

                                          teamDetails = {'teamSize':teamSize,'proration':proration,'plan':selPlan,'monthCost':atob(result['e']),'yearCost': atob(result['f']),'teamId':teamId,"discountType":result['l'],"discountAmount":atob(result['i']),"monthlyamount":result['m'] }

                                          splitUpCost = atob(result['f']) //Year cost

                                          if(cycle == "half-yearly"){
                                                splitUpCost = atob(result['j']) //Year cost
                                          }

                                          monthCost = parseInt(splitUpCost*teamSize*100)/100

                                          if(proration){

                                                // if Upgrading within the same plan, i.e, from Monthly to yearly
                                                if(selPlan == plan){

                                                      document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                                                      document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                                                      document.getElementsByClassName("onselecting-plan")[0].classList.remove("selected-plan");
                                                      document.getElementsByClassName("onselecting-plan")[1].classList.add("selected-plan");

                                                }

                                                document.getElementById("total_membersCost_splitUp").innerHTML= "$"+splitUpCost+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                                          }

                                          if(selPlan == "starter"){
                                                document.getElementById("upgradePaymentPlanHeader").innerHTML = pgettext('paymentsUpgradePlans',"Upgrade to Starter Plan")

                                                document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$35</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                                document.getElementsByClassName("yearly_plan")[0].innerHTML="<p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$19</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $228 yearly')+")</sub></span></p>"

                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                                if(!proration){
                                                      document.getElementById("total_membersCost_splitUp").innerHTML="$228 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                      monthCost=228*teamSize
                                                      document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                                                }

                                                document.getElementsByClassName("yearly_offer_details")[0].childNodes[1].innerHTML = pgettext('paymentsUpgradePlans','Save')+" 45.7%"

                                                if(atob(result['h']) > 35){
                                                      document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                                                      document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                                                }
                                          }
                                          else if(selPlan == "basic"){
                                                document.getElementById("upgradePaymentPlanHeader").innerHTML = pgettext('paymentsUpgradePlans',"Upgrade to Basic Plan")

                                                document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$20</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                                document.getElementsByClassName("yearly_plan")[0].innerHTML="<p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$10</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $120 yearly')+")</sub></span></p>"

                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                                if(!proration){
                                                      document.getElementById("total_membersCost_splitUp").innerHTML="$120 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                      monthCost=120*teamSize
                                                      document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                                                }

                                                document.getElementsByClassName("yearly_offer_details")[0].childNodes[1].innerHTML = pgettext('paymentsUpgradePlans','Save')+" 50%"

                                                if(atob(result['h']) > 20){
                                                      document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                                                      document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                                                }

                                          }
                                          else if(selPlan == "pro"){

                                                document.getElementById("upgradePaymentPlanHeader").innerHTML = pgettext('paymentsUpgradePlans',"Upgrade to Pro Plan")

                                                if(cycle != "half-yearly"){
                                                      document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$79</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                                      document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$" + PRO_Y_M  + "</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay') + " $" + PRO_Y_Y + " " + pgettext('paymentsUpgradePlans','yearly')+")</sub></span></p>"

                                                      document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                                      if(!proration){
                                                            document.getElementById("total_membersCost_splitUp").innerHTML="$"+PRO_Y_Y+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                            monthCost=PRO_Y_Y*teamSize
                                                            document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                                                      }
                                                }
                                                else{
                                                      document.getElementsByClassName("monthly-details")[0].style.display = "none";
                                                      document.getElementsByClassName("yearly-details")[0].setAttribute("id","SelectedHalfYearlyPricingPlan")
                                                      document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Half Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$" + PRO_Y_M  + "</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay') +" $"+ PRO_Y_HY + " " +  pgettext('paymentsUpgradePlans','half yearly')+")</sub></span></p>"

                                                      document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every 6 months. You can unsubscribe anytime via My Plan.")

                                                      if(!proration){
                                                            document.getElementById("total_membersCost_splitUp").innerHTML="$"+ PRO_Y_HY  + " x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                            monthCost=PRO_Y_HY*teamSize
                                                            document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                                                      }
                                                }

                                                document.getElementsByClassName("yearly_offer_details")[0].childNodes[1].innerHTML = pgettext('paymentsUpgradePlans','Save')+ " " +  calculate_saved_percent(PRO_M_Y, PRO_Y_Y)+" %"

                                                if(atob(result['h']) > 79){
                                                      document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                                                      document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                                                }

                                          }

                                          else if(selPlan == "biz"){

                                                document.getElementById("upgradePaymentPlanHeader").innerHTML = pgettext('paymentsUpgradePlans',"Upgrade to biz Plan")

                                                document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$59</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                                document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$" + PRO_Y_M  + "</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay') + " $" + PRO_Y_Y + " " + pgettext('paymentsUpgradePlans','yearly')+")</sub></span></p>"

                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                                if(!proration){
                                                      document.getElementById("total_membersCost_splitUp").innerHTML="$"+PRO_Y_Y+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                      monthCost=PRO_Y_Y*teamSize
                                                      document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                                                }
                                                document.getElementsByClassName("yearly_offer_details")[0].childNodes[1].innerHTML = pgettext('paymentsUpgradePlans','Save')+" 34%"

                                          }
                                          else if(selPlan == "voice pro"){

                                                document.getElementById("upgradePaymentPlanHeader").innerHTML = pgettext('paymentsUpgradePlans',"Upgrade to Voice Pro Plan")

                                                document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$35</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                                document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$19</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $228 yearly')+")</sub></span></p>"

                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                                if(!proration){
                                                      document.getElementById("total_membersCost_splitUp").innerHTML="$228 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                      monthCost=228*teamSize
                                                      document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                                                }
                                                document.getElementsByClassName("yearly_offer_details")[0].childNodes[1].innerHTML = pgettext('paymentsUpgradePlans','Save')+" 45.7%"

                                                if(atob(result['h']) > 35){
                                                      document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                                                      document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                                                }
                                          }
                                          else if(selPlan == "slides pro"){

                                                document.getElementById("upgradePaymentPlanHeader").innerHTML = pgettext('paymentsUpgradePlans',"Upgrade to Slides Pro Plan")

                                                document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$20</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                                document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$10</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $120 yearly')+")</sub></span></p>"

                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                                if(!proration){
                                                      document.getElementById("total_membersCost_splitUp").innerHTML="$120 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                      monthCost=120*teamSize
                                                      document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                                                }
                                                document.getElementsByClassName("yearly_offer_details")[0].childNodes[1].innerHTML = pgettext('paymentsUpgradePlans','Save')+" 50%"

                                                if(atob(result['h']) > 20){
                                                      document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                                                      document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                                                }
                                          }
                                          else if(selPlan == "growth"){

                                                document.getElementById("upgradePaymentPlanHeader").innerHTML = pgettext('paymentsUpgradePlans',"Upgrade to Growth Plan")

                                                document.getElementsByClassName("monthly-details")[0].style.display = "none";
                                                // document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$1</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                                document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$12</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $12 yearly')+")</sub></span></p>"

                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                                if(!proration){
                                                      document.getElementById("total_membersCost_splitUp").innerHTML="$12 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                      monthCost=12*teamSize
                                                      document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                                                }

                                                document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                                                document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                                                document.getElementsByClassName("onselecting-plan")[0].classList.remove("selected-plan");
                                                document.getElementsByClassName("onselecting-plan")[1].classList.add("selected-plan");

                                                document.getElementsByClassName("yearly_offer")[0].style.display = "none"

                                          }

                                          if(atob(result["paymentmode"]) != "paypal"){
                                          //  If brand is none display card inputs else fetch card details.
                                                if(atob(result['b']) != "none"){
                                                      document.getElementsByClassName("card-contents")[0].style.display = "none"
                                                      document.getElementsByClassName("note_payment_card_details")[0].innerHTML="<span> "+pgettext('paymentsUpgradePlans','Pay with')+" "+atob(result['b'])+" **** "+atob(result['a'])+". </span>"+"<span class='change_credit_card change' onclick=changeUserCardDetails(" +"this"+ ',' +'"' +atob(result['b'])+ '"'+ ',' +atob(result['a'])+ ")>"+pgettext('paymentsUpgradePlans','Change')+"</span>"
                                                }
                                                else{
                                                      document.getElementsByClassName("card-contents")[0].style.display = "block"
                                                }
                                          }
                                          else {
                                                document.getElementsByClassName("card-contents")[0].style.display = "none" 
                                          }

                                          // webPaymentUpgradeHandler = function(){
                                          //       document.getElementsByClassName("upgrade-now-btn")[0].disabled = true;

                                          //       url = redirecturlserver +'/p/pcs'
                                          //       idVal = document.getElementsByClassName("selected-plan")[0].getAttribute("id")
                                          //       if(idVal == "SelectedMonthlyPricingPlan"){
                                          //             cycle = "monthly"
                                          //       }
                                          //       else if(idVal == "SelectedYearlyPricingPlan"){
                                          //             cycle = "yearly"
                                          //       }
                                          //       else if(idVal == "SelectedHalfYearlyPricingPlan"){
                                          //             cycle = "half-yearly"
                                          //       }

                                          //       var cardNo = document.getElementById("cardNumberPlanUpgrade").value
                                          //       var expiry = document.getElementById("expiryDatePlanUpgrade").value
                                          //       var cvv = document.getElementById("cardCvvPlanUpgrade").value
                                          //       var zipcode = document.getElementById("zip-code-val").value

                                          //       if( document.getElementsByClassName("change_credit_card")[0] == undefined || document.getElementsByClassName("change_credit_card")[0].innerHTML == "Cancel" ){
                                          //             if(cardNo.trim() == "" || expiry.trim() == "" || cvv.trim() == "" || zipcode.trim() == ""){

                                          //                   document.getElementById("displaycarderrors").innerHTML = pgettext("Validation-Error","Card details cannot be empty");
                                          //                   document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                          //             }
                                          //             else{

                                          //                   data='h='+btoa(teamId)+'&a='+btoa(selPlan)+"&b="+btoa(cycle)+'&c='+btoa(cardNo)+'&d='+btoa(expiry)+"&e="+btoa(cvv)+"&f="+btoa(zipcode)+"&g="+btoa(source)+"&i="+btoa(trial)

                                          //                   document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                                          //                   fbajaxcall(url,data,null).then(function(result) {
                                          //                         document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                          //                         document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";

                                          //                         res = JSON.parse(result);

                                          //                         if(!res["error"]){
                                          //                               if(res['redirect_url']){
                                          //                                     window.location = res['redirect_url'];
                                          //                               }
                                          //                               resolve(result)
                                          //                               closeUpgradeOverlayListeners()

                                          //                         }
                                          //                         else{
                                          //                               document.getElementById("displaycarderrors").innerHTML = res["msg"];
                                          //                               document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                          //                         }

                                          //                   }, function(error) {

                                          //                         reject(error)
                                          //                         closeUpgradeOverlayListeners()

                                          //                   })
                                          //             }
                                          //       }
                                          //       else{
                                          //             data='h='+btoa(teamId)+'&a='+btoa(selPlan)+"&b="+btoa(cycle)+"&g="+btoa(source)

                                          //             document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                                          //             fbajaxcall(url,data,null).then(function(result) {
                                          //                   document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                          //                   document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                                          //                   res = JSON.parse(result);
                                          //                   if(res['redirect_url']){
                                          //                         window.location = res['redirect_url'];
                                          //                   }
                                          //                   resolve(result)
                                          //                   closeUpgradeOverlayListeners()
                                          //             }, function(error) {

                                          //                   reject(error)
                                          //                   closeUpgradeOverlayListeners()

                                          //             })
                                          //       }
                                          // }

                                          // Show discount offer
                                          if(plan == "free" && ( atob(result['i']) != 0 || result['m'] != 0) ){

                                                teamDetails["downgrade"] = false
                                                showdiscount(result,selPlan,discountAmount = atob(result['i']),teamSize = atob(result['c']),plan,teamId,source).then(function(result){
                                                      resolve(result)
                                                })
                                                document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                                                document.getElementById("upgrade_model").style.display = "block";
                                          }
                                          else{
                                                document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                                                if (trial=="true") {
                                                    var trialpopup = document.getElementById("trialpopup")
                                                    trialpopup.style.opacity =1;
                                                    trialpopup.style.visibility = "visible";
                                                    var trialcontent = document.getElementById("freetrial_model");
                                                    trialcontent.style.display = "block";
                                                }
                                                else {

                                                document.getElementById("upgrade_model").style.display = "block";
                                                }
                                                       
                                                document.getElementById("updradePlanNow").addEventListener("click",webPaymentUpgradeHandler, false)
                                          }


                              }
                              // Downgrade case
                              else if(ext2){

                                          if(selPlan == "growth"){
                                                document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";

                                                result = { }
                                                result["error"] = false
                                                result["msg"] = pgettext('paymentsUpgradePlans','We are not able to move you to the Growth plan. Please contact the support team for more information.')
                                                result = JSON.stringify(result)
                                                resolve(result)
                                          }
                                          else{

                                          teamDetails = {'teamSize':teamSize,'proration':proration,'plan':selPlan ,'teamId':teamId}
                                          var headerPlanName = selPlan.includes("starter")?"starter": selPlan.includes("basic")?"basic":selPlan.includes("voice pro")?"voice pro":selPlan.includes("slides pro")?"slides pro":"pro"
                                          document.getElementById("upgradePaymentPlanHeader").innerHTML= pgettext('paymentsUpgradePlans','Downgrade to ')+capitalizeFirstLetter (transplansdata['plans_'+language_code][headerPlanName] )+" Plan"
                                          document.getElementsByClassName("yearly_offer_details")[0].childNodes[1].innerHTML = pgettext('paymentsUpgradePlans','Save')+" 45.7%"
                                          if(atob(result['g'])=='monthly' && atob(result['paymentmode'])=='braintree'){
                                                
                                                document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                                                document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                                                document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");
                                                document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");
                                                
                                          }
                                          else{
                                                document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                                                document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                                                document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");
                                                document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");

                                          }
                                          if(selPlan == "basic"){
                                                document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$20</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                                document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$10</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $120 yearly')+")</sub></span></p>"
                                                if(atob(result['g'])=='monthly'){
                                                      document.getElementById("total_membersCost_splitUp").innerHTML="$20 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                      monthCost = 20*teamSize
                                                }
                                                else{
                                                      document.getElementById("total_membersCost_splitUp").innerHTML="$120 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                      monthCost = 120*teamSize
                                                }
                                                
                                                document.getElementsByClassName("yearly_offer_details")[0].childNodes[1].innerHTML = pgettext('paymentsUpgradePlans','Save')+" 50%"
                                          }
                                          else if(selPlan == "voice pro"){
                                                document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$35</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                                document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$19</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $228 yearly')+")</sub></span></p>"
                                                if(atob(result['g'])=='monthly'){
                                                      document.getElementById("total_membersCost_splitUp").innerHTML="$35 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                      monthCost = 35*teamSize
                                                }
                                                else{
                                                      document.getElementById("total_membersCost_splitUp").innerHTML="$228 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                      monthCost = 228*teamSize
                                                }
                                          }
                                          else if(selPlan == "slides pro"){
                                                document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$20</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                                document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$10</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $120 yearly')+")</sub></span></p>"
                                                if(atob(result['g'])=='monthly'){
                                                      document.getElementById("total_membersCost_splitUp").innerHTML="$20 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                      monthCost = 20*teamSize
                                                }
                                                else{
                                                      document.getElementById("total_membersCost_splitUp").innerHTML="$120 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                      monthCost = 120*teamSize
                                                }
                                                
                                                document.getElementsByClassName("yearly_offer_details")[0].childNodes[1].innerHTML = pgettext('paymentsUpgradePlans','Save')+" 50%"
                                          }
                                          else{
                                                document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$35</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                                document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$19</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $228 yearly')+")</sub></span></p>"
                                                if(atob(result['g'])=='monthly'){
                                                      document.getElementById("total_membersCost_splitUp").innerHTML="$35 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                      monthCost = 35*teamSize
                                                }
                                                else{
                                                      document.getElementById("total_membersCost_splitUp").innerHTML="$228 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                      monthCost = 228*teamSize
                                                }
                                          }
                                          if(atob(result['g'])=='monthly'){
                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")
                                          }
                                          else{
                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
                                          }

                                          

                                          // if downgrading within the same plan, i.e, from yearly to monthly

                                          if(selPlan == plan){
                                                      if(selPlan == "starter"){
                                                            document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$35</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                                            document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$19</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $228 yearly')+")</sub></span></p>"
                                                            document.getElementById("total_membersCost_splitUp").innerHTML="$35 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                            monthCost = 35*teamSize
                                                      }
                                                      else if(selPlan == "basic"){
                                                            document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$20</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                                            document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$10</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $120 yearly')+")</sub></span></p>"
                                                            document.getElementById("total_membersCost_splitUp").innerHTML="$20 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                            monthCost = 20*teamSize
                                                      }
                                                      else if(selPlan == "biz"){
                                                            document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$59</span><span class='cost_per_month'><sub>/ month.</sub></span></p>"
                                                            document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$" + PRO_Y_M  + "</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay') + " $" + PRO_Y_Y + " " + pgettext('paymentsUpgradePlans','yearly')+")</sub></span></p>"
                                                            document.getElementById("total_membersCost_splitUp").innerHTML="$59 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                            monthCost=59*teamSize
                                                      }
                                                      else if(selPlan == "pro"){

                                                            // if(cycle != "half-yearly"){
                                                                  document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$79</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                                                  document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$" + PRO_Y_M  + "</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay') + " $" + PRO_Y_Y + " " + pgettext('paymentsUpgradePlans','yearly')+")</sub></span></p>"
                                                                  document.getElementById("total_membersCost_splitUp").innerHTML="$79 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                                  monthCost=79*teamSize
                                                            // }
                                                            // else{
                                                            //       document.getElementsByClassName("monthly-details")[0].style.display = "none";
                                                            //       document.getElementsByClassName("yearly-details")[0].setAttribute("id","SelectedHalfYearlyPricingPlan")
                                                            //       document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Half Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$39</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $234 half yearly')+")</sub></span></p>"

                                                            //       // document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every 6 months. You can unsubscribe anytime via My Plan.")
                                                            //       document.getElementById("total_membersCost_splitUp").innerHTML="$234 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                            //       monthCost=234*teamSize
                                                            // }
                                                      }
                                                      else if(selPlan == "voice pro"){
                                                            document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$35</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                                            document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$19</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $228 yearly')+")</sub></span></p>"
                                                            document.getElementById("total_membersCost_splitUp").innerHTML="$35 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                            monthCost=35*teamSize
                                                      }
                                                      else if(selPlan == "slides pro"){
                                                            document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$20</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                                            document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$10</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $120 yearly')+")</sub></span></p>"
                                                            document.getElementById("total_membersCost_splitUp").innerHTML="$20 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                                                            monthCost=20*teamSize
                                                      }

                                                      document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                                                      document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                                                      document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");
                                                      document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");

                                                      document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

                                                      document.getElementsByClassName("yearly_offer")[0].style.display = "none"
                                          }

                                          document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                                          if(trial_subscription== "True"){
                                            document.getElementById("downgradePlaninMyPlans").innerHTML="<p style='margin:0;font-size:13px;'>"+pgettext('paymentsUpgradePlans','You will be downgrading to ')+selPlan+pgettext('paymentsUpgradePlans',' plan. Please note that you will be losing some premium features.')
                                        }
                                        else{
                                          document.getElementById("downgradePlaninMyPlans").innerHTML="<p style='margin:0;font-size:13px;'>"+pgettext('paymentsUpgradePlans','You will be downgrading to ')+selPlan+pgettext('paymentsUpgradePlans',' plan. Please note that you will be losing some premium features.')+"</p><br><p style='margin:0;font-size:13px;'>"+pgettext('paymentsUpgradePlans','Note: You will be moved to ')+selPlan+pgettext('paymentsUpgradePlans',' on ')+ext1+pgettext('paymentsUpgradePlans','. Click Confirm to continue.')
                                        }

                                          document.getElementsByClassName("card-contents")[0].style.display = "none"
                                          document.getElementById("updradePlanNow").innerHTML = pgettext('paymentsUpgradePlans','Confirm')

                                          document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                                          document.getElementById("upgrade_model").style.display = "block";

                                          // webPaymentDowngradeHandler = function(){
                                          //       document.getElementsByClassName("upgrade-now-btn")[0].disabled = true;
                                          //       url = redirecturlserver +'/p/pcs'
                                          //       idVal = document.getElementsByClassName("selected-plan")[0].getAttribute("id")
                                          //       if(idVal == "SelectedMonthlyPricingPlan"){
                                          //             cycle = "monthly"
                                          //       }
                                          //       else if(idVal == "SelectedYearlyPricingPlan"){
                                          //             cycle = "yearly"
                                          //       }
                                          //       else if(idVal == "SelectedHalfYearlyPricingPlan"){
                                          //             cycle = "half-yearly"
                                          //       }

                                          //       data='h='+btoa(teamId)+'&a='+btoa(selPlan)+"&b="+btoa(cycle)+"&g="+btoa(source)
                                          //       document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                                          //       fbajaxcall(url,data,null).then(function(result) {
                                          //             document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                                          //             document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                          //             res = JSON.parse(result);
                                          //             if(res['redirect_url']){
                                          //                   window.location = res['redirect_url'];
                                          //             }
                                          //             resolve(result)
                                          //             closeUpgradeOverlayListeners()
                                          //       }, function(error) {

                                          //             reject(error)
                                          //             closeUpgradeOverlayListeners()
                                          //       })
                                          // };

                                          document.getElementById("updradePlanNow").addEventListener("click", webPaymentDowngradeHandler, true)
                                          // document.getElementById("updradePlanNow").addEventListener("click",function(e) {
                                          //       webPaymentDowngradeHandler(atob(result["paymentmode"]),teamId,selPlan,cycle,source,trial);}, false)

                              }
                              }
                           }
                           else{
                              closeUpgradeOverlayListeners()
                              document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none";
                              document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                              document.getElementById("upgrade_model").innerHTML = result["errormsg"]
                              document.getElementsByClassName("success_div")[0].style.padding = "15px 25px"
                              document.getElementsByClassName("Notification_popupbar")[0].style.display = "block";
                              result = JSON.stringify(result)
                              resolve(result)
                              //successfade();
                        }

                        })
                  }

                }

                else if (type == "coupenUpgrade"){

                  var checkplan = {
                        "freefree" : 0,
                        "growthmonthly" : 1,
                        "growthyearly" : 2,
                        "personalmonthly" : 3,
                        "basicmonthly": 4,
                        "basicyearly": 5,
                        "slides promonthly" : 6,
                        "slides proyearly" : 7,
                        "personalyearly" : 8,
                        "startupmonthly" : 9,
                        "startupyearly" : 10,
                        "startermonthly" : 11,
                        "starteryearly" : 12,
                        "voice promonthly" : 13,
                        "voice proyearly" : 14,
                        "bizmonthly" : 15,
                        "bizyearly" : 16,
                        "promonthly" : 17,
                        "prohalf-yearly": 18,
                        "proyearly" : 19,
                        "enterpriseenterprise" : 20
                  }
                  var downgrade = false;
                  var  proration = false;

                  if(plan != "free" ){
                        proration = true
                  }

                  if(checkplan[plan+cplantypecycle] > checkplan[selPlan+cycle]){
                        downgrade = true;
                        proration = false

                  }
                  if(plan == selPlan){
                        if(cplantypecycle.includes("yearly")){
                              downgrade = true;
                              proration = false
                        }
                  }

                  url = redirecturlserver +'/p/pcc'
                  data='a='+btoa(teamId)+'&c='+btoa(proration)+'&d='+btoa(selPlan)+'&cc='+btoa(ext2)+'&cycleval='+btoa(cycle)+'&pname='+btoa(selPlan)+'&type='+btoa(discountType)


                  fbajaxcall(url,data,null).then(function(result) {

                        result = JSON.parse(result)
                        if (!result["error"]) {
                        teamSize = atob(result['c'])
                        discountAmount = atob(result['i'])
                        paymentmode = atob(result["paymentmode"])
                        teamDetails = {'teamSize':teamSize,'proration':proration,'plan':selPlan,'monthCost':atob(result['e']),'yearCost': atob(result['f']),'teamId':teamId, 'discountAmount':discountAmount,"downgrade":downgrade }
                        document.getElementsByClassName("yearly_offer")[0].style.display = "none"
                        removepaymentlisteners();
                        downgradecounter = 0;
                        upgradecounter = 0;
                        trial_subscription = atob(result['trial'])

                        // Downgrade case
                        if(downgrade){

                              // If selected same plan
                              if(selPlan == plan && cycle == cplantypecycle){
                                    document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";

                                    result = { }
                                    result["error"] = false
                                    result["msg"] = pgettext('paymentsUpgradePlans','You are currently in same plan.Discount cannot be applied when you are in same plan.')
                                    result = JSON.stringify(result)
                                    resolve(result)
                              }

                              if(selPlan == "growth"){
                                    document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";

                                    result = { }
                                    result["error"] = false
                                    result["msg"] = pgettext('paymentsUpgradePlans','We are not able to move you to the Growth plan. Please contact the support team for more information.')
                                    result = JSON.stringify(result)
                                    resolve(result)
                              }
                              else{
                                    var headerPlanName = selPlan.includes("starter")?"starter": (selPlan.includes("basic")?"basic":"pro")
                                    document.getElementById("upgradePaymentPlanHeader").innerHTML= pgettext('paymentsUpgradePlans','Downgrade to ')+capitalizeFirstLetter (transplansdata['plans_'+language_code][headerPlanName] )+" Plan"

                                    if(selPlan == "basic"){

                                          document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$20</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                          document.getElementsByClassName("yearly_plan")[0].innerHTML="<p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$10</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $120 yearly')+")</sub></span></p>"

                                          document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                          if(cycle == "yearly" ){
                                                document.getElementById("total_membersCost_splitUp").innerHTML="$120 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+0+" from coupon )</span>"
                                                monthCost=(120*teamSize)
                                                document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                          }
                                          else{
                                                document.getElementById("total_membersCost_splitUp").innerHTML="$20 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+0+" from coupon )</span>"
                                                monthCost=(20*teamSize)
                                                document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

                                                document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");
                                                document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");
                                          }

                                    }
                                    else if(selPlan == "starter"){

                                          document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$35</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                          document.getElementsByClassName("yearly_plan")[0].innerHTML="<p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$19</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $228 yearly')+")</sub></span></p>"

                                          document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                          if(cycle == "yearly" ){
                                                document.getElementById("total_membersCost_splitUp").innerHTML="$228 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+0+" from coupon )</span>"
                                                monthCost=(228*teamSize)
                                                document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                          }
                                          else{
                                                document.getElementById("total_membersCost_splitUp").innerHTML="$35 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+0+" from coupon )</span>"
                                                monthCost=(35*teamSize)
                                                document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

                                                document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");
                                                document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");
                                          }

                                    }
                                    else{
                                          document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$79</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                          document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$" + PRO_Y_M  + "</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay') + " $" + PRO_Y_Y + " " + pgettext('paymentsUpgradePlans','yearly')+")</sub></span></p>"

                                          document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                          if(cycle == "yearly" ){
                                                document.getElementById("total_membersCost_splitUp").innerHTML="$"+PRO_Y_Y+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+0+" from coupon )</span>"
                                                monthCost=(PRO_Y_Y*teamSize)
                                                document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
                                          }
                                          else{
                                                document.getElementById("total_membersCost_splitUp").innerHTML="$79 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+0+" from coupon )</span>"
                                                monthCost=(79*teamSize)
                                                document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

                                                document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");
                                                document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");
                                          }

                                    }
                                    if(trial_subscription== "True"){
                                        document.getElementById("downgradePlaninMyPlans").innerHTML="<p style='margin:0;font-size:13px;'>"+pgettext('paymentsUpgradePlans','You will be downgrading to ')+selPlan+pgettext('paymentsUpgradePlans',' plan. Please note that you will be losing some premium features.')
                                    }
                                    else {
                                    document.getElementById("downgradePlaninMyPlans").innerHTML="<p style='margin:0;font-size:13px;'>"+pgettext('paymentsUpgradePlans','You will be downgrading to ')+selPlan+pgettext('paymentsUpgradePlans',' plan. Please note that you will be losing some premium features.')+"</p><br><p style='margin:0;font-size:13px;'>"+pgettext('paymentsUpgradePlans','Note: You will be moved to ')+selPlan+pgettext('paymentsUpgradePlans',' on ')+cpecd+pgettext('paymentsUpgradePlans','. Click Confirm to continue.')
                                    }

                                    document.getElementsByClassName("card-contents")[0].style.display = "none"
                                    document.getElementById("updradePlanNow").innerHTML = pgettext('paymentsUpgradePlans','Confirm')


                                    // webPaymentDowngradeHandler = function(){
                                    //       document.getElementsByClassName("upgrade-now-btn")[0].disabled = true;
                                    //       url = redirecturlserver +'/p/pcs'
                                    //       idVal = document.getElementsByClassName("selected-plan")[0].getAttribute("id")
                                    //       if(idVal == "SelectedMonthlyPricingPlan"){
                                    //             cycle = "monthly"
                                    //       }
                                    //       else if(idVal == "SelectedYearlyPricingPlan"){
                                    //             cycle = "yearly"
                                    //       }

                                    //       data='h='+btoa(teamId)+'&a='+btoa(selPlan)+"&b="+btoa(cycle)+"&g="+btoa(source)+"&cc="+ext2
                                    //       document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                                    //       fbajaxcall(url,data,null).then(function(result) {
                                    //             document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                                    //             document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                    //             res = JSON.parse(result);
                                    //             if(res['redirect_url']){
                                    //                   window.location = res['redirect_url'];
                                    //             }
                                    //             resolve(result)
                                    //             closeUpgradeOverlayListeners()
                                    //       }, function(error) {

                                    //             reject(error)
                                    //             closeUpgradeOverlayListeners()
                                    //       })
                                    // };

                                    document.getElementById("updradePlanNow").addEventListener("click", webPaymentDowngradeHandler, true)
                                    // document.getElementById("updradePlanNow").addEventListener("click",function(e) {
                                    //       webPaymentDowngradeHandler(atob(result["paymentmode"]),teamId,selPlan,cycle,source,trial);}, false)

                              }
                        }
                        // Percentage off logic
                        else if(discountType == "percentage"){
                              var headerPlanName = selPlan
                              document.getElementById("upgradePaymentPlanHeader").innerHTML= pgettext('paymentsUpgradePlans','Upgrade to ')+capitalizeFirstLetter (transplansdata['plans_'+language_code][headerPlanName] )+" Plan"

                              if(selPlan == "basic"){

                                    document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$20</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                    document.getElementsByClassName("yearly_plan")[0].innerHTML="<p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$10</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $120 yearly')+")</sub></span></p>"

                                    document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                    if(cycle == "monthly" ){
                                          document.getElementById("total_membersCost_splitUp").innerHTML="$20 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+parseFloat((20/100)*discountAmount).toFixed(2)+" x "+teamSize+" from coupon )</span>"
                                          orginalcost = 20*teamSize
                                          monthCost=(20*teamSize) - ((20*teamSize/100)*discountAmount)
                                          document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                          document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

                                          document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");
                                          document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");
                                    }
                                    else if(cycle == "yearly" ){
                                          document.getElementById("total_membersCost_splitUp").innerHTML="$120 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+parseFloat((120/100)*discountAmount).toFixed(2)+" x "+teamSize+" from coupon )</span>"
                                          orginalcost = 120*teamSize
                                          monthCost=(120*teamSize) - ((120*teamSize/100)*discountAmount)
                                          document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                          document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
                                    }
                                    else{
                                          document.getElementById("total_membersCost_splitUp").innerHTML="$120 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'></span>"
                                          orginalcost = 120*teamSize
                                          monthCost=orginalcost
                                          document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                          document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
                                    }

                                    if(atob(result['h']) > 20){
                                          document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                                          document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                                    }

                              }
                              else if(selPlan == "starter"){

                                    document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$35</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                    document.getElementsByClassName("yearly_plan")[0].innerHTML="<p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$19</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $228 yearly')+")</sub></span></p>"

                                    document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                    if(cycle == "monthly" ){
                                          document.getElementById("total_membersCost_splitUp").innerHTML= "$35 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+parseFloat((35/100)*discountAmount).toFixed(2)+" x "+teamSize+" from coupon )</span>"
                                          orginalcost = 35*teamSize
                                          monthCost=(35*teamSize) - ((35*teamSize/100)*discountAmount)
                                          document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                          document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

                                          document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");
                                          document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");

                                    }
                                    else if(cycle == "yearly" ){
                                          document.getElementById("total_membersCost_splitUp").innerHTML="$228 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+parseFloat((228/100)*discountAmount).toFixed(2)+" x "+teamSize+" from coupon )</span>"
                                          orginalcost = 228*teamSize
                                          monthCost=(228*teamSize) - ((228*teamSize/100)*discountAmount)
                                          document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                          document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                    }
                                    else{
                                          document.getElementById("total_membersCost_splitUp").innerHTML="$228 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'></span>"
                                          orginalcost = 228*teamSize
                                          monthCost=orginalcost
                                          document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                          document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
                                    }


                                    if(atob(result['h']) > 35){
                                          document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                                          document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                                    }

                              }
                              else{

                                    document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$79</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                    document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$" + PRO_Y_M  + "</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay') + " $" + PRO_Y_Y + " " + pgettext('paymentsUpgradePlans','yearly')+")</sub></span></p>"

                                    document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                    if(cycle != "half-yearly"){
                                          if(cycle == "yearly" ){
                                                document.getElementById("total_membersCost_splitUp").innerHTML="$"+PRO_Y_Y+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+parseFloat((PRO_Y_Y/100)*discountAmount).toFixed(2)+" x "+teamSize+" from coupon )</span>"
                                                orginalcost = PRO_Y_Y*teamSize
                                                monthCost=(PRO_Y_Y*teamSize)- ((PRO_Y_Y*teamSize/100)*discountAmount)
                                                document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
                                          }
                                          else{
                                                document.getElementById("total_membersCost_splitUp").innerHTML="$79 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+parseFloat((79/100)*discountAmount).toFixed(2)+" x "+teamSize+" from coupon )</span>"
                                                orginalcost = 79*teamSize
                                                monthCost=(79*teamSize) - ((79*teamSize/100)*discountAmount)
                                                document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

                                                document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");
                                                document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");
                                          }
                                    }
                                    else{
                                          document.getElementsByClassName("monthly-details")[0].style.display = "none";
                                          document.getElementsByClassName("yearly-details")[0].setAttribute("id","SelectedHalfYearlyPricingPlan")
                                          document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Half Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$" + PRO_Y_M  + "</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay') +" $"+ PRO_Y_HY + " " +  pgettext('paymentsUpgradePlans','half yearly')+")</sub></span></p>"

                                          document.getElementById("total_membersCost_splitUp").innerHTML="$"+ PRO_Y_HY  + " x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+parseFloat((PRO_Y_HY/100)*discountAmount).toFixed(2)+" x "+teamSize+" from coupon )</span>"
                                          orginalcost = PRO_Y_HY*teamSize
                                          monthCost=(PRO_Y_HY*teamSize) - ((PRO_Y_HY*teamSize/100)*discountAmount)
                                          document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                          document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every 6 months. You can unsubscribe anytime via My Plan.")

                                    }

                                    if(atob(result['h']) > 79){
                                          document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                                          document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                                    }

                              }

                              document.getElementById("total_membersCost_splitUp").style.fontWeight = "unset"
                              document.getElementById("totalCostAmountPay").style.fontSize = "16px"


                              if(atob(result["paymentmode"]) != "paypal"){
                                    //  If brand is none display card inputs else fetch card details.
                                          if(atob(result['b']) != "none"){
                                                document.getElementsByClassName("card-contents")[0].style.display = "none"
                                                document.getElementsByClassName("note_payment_card_details")[0].innerHTML="<span> "+pgettext('paymentsUpgradePlans','Pay with')+" "+atob(result['b'])+" **** "+atob(result['a'])+". </span>"+"<span class='change_credit_card change' onclick=changeUserCardDetails(" +"this"+ ',' +'"' +atob(result['b'])+ '"'+ ',' +atob(result['a'])+ ")>"+pgettext('paymentsUpgradePlans','Change')+"</span>"
                                          }
                                          else{
                                                document.getElementsByClassName("card-contents")[0].style.display = "block"
                                          }
                                    }
                              else {
                                    document.getElementsByClassName("card-contents")[0].style.display = "none" 
                              }

                              // webPaymentUpgradeHandler = function(){
                              //       document.getElementsByClassName("upgrade-now-btn")[0].disabled = true;

                              //       url = redirecturlserver +'/p/pcs'
                              //       idVal = document.getElementsByClassName("selected-plan")[0].getAttribute("id")
                              //       if(idVal == "SelectedMonthlyPricingPlan"){
                              //             cycle = "monthly"
                              //       }
                              //       else if(idVal == "SelectedYearlyPricingPlan"){
                              //             cycle = "yearly"
                              //       }
                              //       else if(idVal == "SelectedHalfYearlyPricingPlan"){
                              //             cycle = "half-yearly"
                              //       }


                              //       if(document.getElementsByClassName("discount_coupen_show")[0].style.display == "none"){
                              //             ext2=""
                              //       }

                              //       var cardNo = document.getElementById("cardNumberPlanUpgrade").value
                              //       var expiry = document.getElementById("expiryDatePlanUpgrade").value
                              //       var cvv = document.getElementById("cardCvvPlanUpgrade").value
                              //       var zipcode = document.getElementById("zip-code-val").value

                              //       var gspkCheck = new URLSearchParams(window.location.search);

                              //       if( document.getElementsByClassName("change_credit_card")[0] == undefined || document.getElementsByClassName("change_credit_card")[0].innerHTML == "Cancel" ){
                              //             if(cardNo.trim() == "" || expiry.trim() == "" || cvv.trim() == "" || zipcode.trim() == ""){

                              //                   document.getElementById("displaycarderrors").innerHTML = pgettext("Validation-Error","Card details cannot be empty");
                              //                   document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                              //             }
                              //             else{

                              //                   data='h='+btoa(teamId)+'&a='+btoa(selPlan)+"&b="+btoa(cycle)+'&c='+btoa(cardNo)+'&d='+btoa(expiry)+"&e="+btoa(cvv)+"&f="+btoa(zipcode)+"&g="+btoa(source)+"&cc="+ext2+"&type="+discountType
                              //                   if(gspkCheck.get("gspk") != null){
                              //                         data  += "&partnerc="+gspkCheck.get("gspk")
                              //                   }
                              //                   document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                              //                   fbajaxcall(url,data,null).then(function(result) {
                              //                         document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                              //                         document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";

                              //                         res = JSON.parse(result);

                              //                         if(!res["error"]){
                              //                               if(res['redirect_url']){
                              //                                     window.location = res['redirect_url'];
                              //                               }
                              //                               resolve(result)
                              //                               closeUpgradeOverlayListeners()

                              //                         }
                              //                         else{
                              //                               document.getElementById("displaycarderrors").innerHTML = res["msg"];
                              //                               document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                              //                         }

                              //                   }, function(error) {

                              //                         reject(error)
                              //                         closeUpgradeOverlayListeners()

                              //                   })
                              //             }
                              //       }
                              //       else{
                              //             data='h='+btoa(teamId)+'&a='+btoa(selPlan)+"&b="+btoa(cycle)+"&g="+btoa(source)
                              //             if(gspkCheck.get("gspk") != null){
                              //                   data  += "&partnerc="+gspkCheck.get("gspk")
                              //             }
                              //             document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                              //             fbajaxcall(url,data,null).then(function(result) {
                              //                   document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                              //                   document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                              //                   res = JSON.parse(result);
                              //                   if(res['redirect_url']){
                              //                         window.location = res['redirect_url'];
                              //                   }
                              //                   resolve(result)
                              //                   closeUpgradeOverlayListeners()
                              //             }, function(error) {

                              //                   reject(error)
                              //                   closeUpgradeOverlayListeners()

                              //             })
                              //       }
                              // }

                              if(plan != "free"){
                                    if(cycle == "monthly" ){
                                          splitUpCost = atob(result['e']) //Month cost
                                          orginalcost = splitUpCost*teamSize
                                    }
                                    else if(cycle == "half-yearly" && selPlan == "pro"){
                                          splitUpCost = atob(result['j']) //Half Year cost
                                          orginalcost = splitUpCost*teamSize
                                    }
                                    else{
                                          splitUpCost = atob(result['f']) //Year cost
                                          orginalcost = splitUpCost*teamSize
                                    }

                                    document.getElementById("total_membersCost_splitUp").innerHTML= "$"+splitUpCost+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+0+" from coupon )</span>"
                                    // totalCost = orginalcost - ((orginalcost/100)*discountAmount)
                                    totalCost = orginalcost
                                    document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(totalCost).toFixed(2)+""
                              }
                              
                              document.getElementById("updradePlanNow").addEventListener("click",webPaymentUpgradeHandler, false)
                        }
                        // Amount off logic
                        else{
                              var headerPlanName = selPlan
                              document.getElementById("upgradePaymentPlanHeader").innerHTML= pgettext('paymentsUpgradePlans','Upgrade to ')+capitalizeFirstLetter (transplansdata['plans_'+language_code][headerPlanName] )+" Plan"

                              if(selPlan == "basic"){

                                    document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$20</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                    document.getElementsByClassName("yearly_plan")[0].innerHTML="<p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$10</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $120 yearly')+")</sub></span></p>"

                                    document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                    if(cycle == "monthly" ){
                                          document.getElementById("total_membersCost_splitUp").innerHTML="$20 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+discountAmount+" from coupon )</span>"
                                          orginalcost = 20*teamSize
                                          monthCost=(20*teamSize) - discountAmount
                                          document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                          document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

                                          document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");
                                          document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");
                                    }
                                    else if(cycle == "yearly" ){
                                          document.getElementById("total_membersCost_splitUp").innerHTML="$120 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+discountAmount+" from coupon )</span>"
                                          orginalcost = 120*teamSize
                                          monthCost=(120*teamSize) - discountAmount
                                          document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                          document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                    }
                                    else{
                                          document.getElementById("total_membersCost_splitUp").innerHTML="$120 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'></span>"
                                          orginalcost = 120*teamSize
                                          monthCost=orginalcost
                                          document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                          document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
                                    }


                                    if(atob(result['h']) > 20){
                                          document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                                          document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                                    }

                              }
                              else if(selPlan == "starter"){

                                    document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$35</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                    document.getElementsByClassName("yearly_plan")[0].innerHTML="<p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$19</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $228 yearly')+")</sub></span></p>"

                                    document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                    if(cycle == "monthly" ){
                                          document.getElementById("total_membersCost_splitUp").innerHTML= "$35 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+discountAmount+" from coupon )</span>"
                                          orginalcost = 35*teamSize
                                          monthCost=(35*teamSize) - discountAmount
                                          document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                          document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

                                          document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");
                                          document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");

                                    }
                                    else if(cycle == "yearly" ){
                                          document.getElementById("total_membersCost_splitUp").innerHTML="$228 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+discountAmount+" from coupon )</span>"
                                          orginalcost = 228*teamSize
                                          monthCost=(228*teamSize) - discountAmount
                                          document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                          document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                    }
                                    else{
                                          document.getElementById("total_membersCost_splitUp").innerHTML="$228 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'></span>"
                                          orginalcost = 228*teamSize
                                          monthCost=orginalcost
                                          document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                          document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
                                    }

                                    if(atob(result['h']) > 35){
                                          document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                                          document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                                    }

                              }
                              else{

                                    document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$79</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                                    document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$" + PRO_Y_M  + "</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay') + " $" + PRO_Y_Y + " " + pgettext('paymentsUpgradePlans','yearly')+")</sub></span></p>"

                                    document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                                    if(cycle != "half-yearly"){
                                          if(cycle == "yearly" ){
                                                document.getElementById("total_membersCost_splitUp").innerHTML="$"+PRO_Y_Y+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+discountAmount+" from coupon )</span>"
                                                orginalcost = PRO_Y_Y*teamSize
                                                monthCost=(PRO_Y_Y*teamSize)- discountAmount
                                                document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
                                          }
                                          else{
                                                document.getElementById("total_membersCost_splitUp").innerHTML="$79 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+discountAmount+" from coupon )</span>"
                                                orginalcost = 79*teamSize
                                                monthCost=(79*teamSize) - discountAmount
                                                document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                                document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

                                                document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");
                                                document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");
                                          }
                                    }
                                    else{
                                          document.getElementsByClassName("monthly-details")[0].style.display = "none";
                                          document.getElementsByClassName("yearly-details")[0].setAttribute("id","SelectedHalfYearlyPricingPlan")
                                          document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Half Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$" + PRO_Y_M  + "</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay') +" $"+ PRO_Y_HY + " " +  pgettext('paymentsUpgradePlans','half yearly')+")</sub></span></p>"

                                          document.getElementById("total_membersCost_splitUp").innerHTML="$"+ PRO_Y_HY  + " x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+discountAmount+" from coupon )</span>"
                                          orginalcost = PRO_Y_HY*teamSize
                                          monthCost=(PRO_Y_HY*teamSize) - discountAmount
                                          document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                          document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every 6 months. You can unsubscribe anytime via My Plan.")
                                    }

                                    if(atob(result['h']) > 79){
                                          document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                                          document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                                    }

                              }

                              document.getElementById("total_membersCost_splitUp").style.fontWeight = "unset"
                              document.getElementById("totalCostAmountPay").style.fontSize = "16px"


                              if(atob(result["paymentmode"]) != "paypal"){
                                    //  If brand is none display card inputs else fetch card details.
                                    if(atob(result['b']) != "none"){
                                          document.getElementsByClassName("card-contents")[0].style.display = "none"
                                          document.getElementsByClassName("note_payment_card_details")[0].innerHTML="<span> "+pgettext('paymentsUpgradePlans','Pay with')+" "+atob(result['b'])+" **** "+atob(result['a'])+". </span>"+"<span class='change_credit_card change' onclick=changeUserCardDetails(" +"this"+ ',' +'"' +atob(result['b'])+ '"'+ ',' +atob(result['a'])+ ")>"+pgettext('paymentsUpgradePlans','Change')+"</span>"
                                    }
                                    else{
                                          document.getElementsByClassName("card-contents")[0].style.display = "block"
                                    }
                              }
                              else {
                                    document.getElementsByClassName("card-contents")[0].style.display = "none" 
                              }

                              // webPaymentUpgradeHandler = function(){
                              //       document.getElementsByClassName("upgrade-now-btn")[0].disabled = true;

                              //       url = redirecturlserver +'/p/pcs'
                              //       idVal = document.getElementsByClassName("selected-plan")[0].getAttribute("id")
                              //       if(idVal == "SelectedMonthlyPricingPlan"){
                              //             cycle = "monthly"
                              //       }
                              //       else if(idVal == "SelectedYearlyPricingPlan"){
                              //             cycle = "yearly"
                              //       }
                              //       else if(idVal == "SelectedHalfYearlyPricingPlan"){
                              //             cycle = "half-yearly"
                              //       }


                              //       if(document.getElementsByClassName("discount_coupen_show")[0].style.display == "none"){
                              //             ext2=""
                              //       }

                              //       var cardNo = document.getElementById("cardNumberPlanUpgrade").value
                              //       var expiry = document.getElementById("expiryDatePlanUpgrade").value
                              //       var cvv = document.getElementById("cardCvvPlanUpgrade").value
                              //       var zipcode = document.getElementById("zip-code-val").value

                              //       var gspkCheck = new URLSearchParams(window.location.search);

                              //       if( document.getElementsByClassName("change_credit_card")[0] == undefined || document.getElementsByClassName("change_credit_card")[0].innerHTML == "Cancel" ){
                              //             if(cardNo.trim() == "" || expiry.trim() == "" || cvv.trim() == "" || zipcode.trim() == ""){

                              //                   document.getElementById("displaycarderrors").innerHTML = pgettext("Validation-Error","Card details cannot be empty");
                              //                   document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                              //             }
                              //             else{

                              //                   data='h='+btoa(teamId)+'&a='+btoa(selPlan)+"&b="+btoa(cycle)+'&c='+btoa(cardNo)+'&d='+btoa(expiry)+"&e="+btoa(cvv)+"&f="+btoa(zipcode)+"&g="+btoa(source)+"&cc="+ext2+"&type="+discountType

                              //                   if(gspkCheck.get("gspk") != null){
                              //                         data  += "&partnerc="+gspkCheck.get("gspk")
                              //                   }

                              //                   document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                              //                   fbajaxcall(url,data,null).then(function(result) {
                              //                         document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                              //                         document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";

                              //                         res = JSON.parse(result);

                              //                         if(!res["error"]){
                              //                               if(res['redirect_url']){
                              //                                     window.location = res['redirect_url'];
                              //                               }
                              //                               resolve(result)
                              //                               closeUpgradeOverlayListeners()

                              //                         }
                              //                         else{
                              //                               document.getElementById("displaycarderrors").innerHTML = res["msg"];
                              //                               document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                              //                         }

                              //                   }, function(error) {

                              //                         reject(error)
                              //                         closeUpgradeOverlayListeners()

                              //                   })
                              //             }
                              //       }
                              //       else{
                              //             data='h='+btoa(teamId)+'&a='+btoa(selPlan)+"&b="+btoa(cycle)+"&g="+btoa(source)

                              //             if(gspkCheck.get("gspk") != null){
                              //                   data  += "&partnerc="+gspkCheck.get("gspk")
                              //             }

                              //             document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                              //             fbajaxcall(url,data,null).then(function(result) {
                              //                   document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                              //                   document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                              //                   res = JSON.parse(result);
                              //                   if(res['redirect_url']){
                              //                         window.location = res['redirect_url'];
                              //                   }
                              //                   resolve(result)
                              //                   closeUpgradeOverlayListeners()
                              //             }, function(error) {

                              //                   reject(error)
                              //                   closeUpgradeOverlayListeners()

                              //             })
                              //       }
                              // }

                              if(plan != "free"){
                                    if(cycle == "monthly" ){
                                          splitUpCost = atob(result['e']) //Month cost
                                          orginalcost = splitUpCost*teamSize
                                    }
                                    else if(cycle == "half-yearly" && selPlan == "pro"){
                                          splitUpCost = atob(result['j']) //Half Year cost
                                          orginalcost = splitUpCost*teamSize
                                    }
                                    else{
                                          splitUpCost = atob(result['f']) //Year cost
                                          orginalcost = splitUpCost*teamSize
                                    }

                                    document.getElementById("total_membersCost_splitUp").innerHTML= "$"+splitUpCost+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+0+" from coupon )</span>"
                                    // totalCost = orginalcost - ((orginalcost/100)*discountAmount)
                                    totalCost = orginalcost
                                    document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(totalCost).toFixed(2)+""
                              }
                              
                              document.getElementById("updradePlanNow").addEventListener("click",webPaymentUpgradeHandler, false)
                        }


                        if(discountAmount != 0 && proration == false && downgrade == false){
                              document.getElementsByClassName("discount_coupen_show")[0].style.display = "block"
                              document.getElementsByClassName("coupen_code_val_input")[0].innerHTML = ext2+"<span style='color:#BF4711;margin-left: auto;cursor:pointer;position:absolute;right:10px;' onclick='removediscount(this,"+parseFloat(orginalcost).toFixed(2)+","+'"'+discountType+'"'+")'>Remove</span>"
                        }

                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                        document.getElementById("upgrade_model").style.display = "block";
                  }
                  else{
                        closeUpgradeOverlayListeners()
                        document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none";
                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                        document.getElementById("upgrade_model").innerHTML = result["errormsg"]
                        document.getElementsByClassName("success_div")[0].style.padding = "15px 25px"
                        document.getElementsByClassName("Notification_popupbar")[0].style.display = "block";
                        result = JSON.stringify(result)
                        resolve(result)
                        //successfade();
                  }


                  })





                  }

                  } // if not pastdue
                  params_src = source
          }, function(error) {
            document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
            document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none";
            reject(error)
    })


    })
}


function choosedPlan(teamId,type,selectedplan,plan ,source){
    callcountry()
    getipapidata()


  return new Promise(function(resolve, reject) {

      if(selectedplan == planValues[7]){
            // document.getElementById("enterpriceLicense").value = "10 to 50"
            document.getElementById("enterprise_modal").style.display = "block";
            document.querySelector("#enterpriseDataSubmit").disabled = false

            document.getElementById("enterpriseDataSubmit").onclick = function(){

                  document.querySelector("#enterpriseDataSubmit").disabled = true

                  var epname = document.getElementById("enterpriceUsername")
                  var epcname = document.getElementById("enterpricecompanyname")
                  var epmail = document.getElementById("enterpriceCompanyEmail")
                  var epmobno = document.getElementById("enterpricePhoneNo")
                  var eplicense = document.getElementById("enterpriceLicense")
                  var epeemployee = document.getElementById("enterpriceEmployee").getAttribute('data-val')
                  var epcountry = document.getElementById("enterpricecountry")
                  var epcity = document.getElementById("enterpricecity")
                  var epdepartment = document.getElementById("enterpriceDepartment").getAttribute('data-val')
                  var epcountryValidate = epcountryValidate(epcountry);
                  var epcityValidate = epcityValidate(epcity)


                  var epnameValidate  = epnameValidate();
                  var epcompanyValidate  = epcompanyValidate();
                  var epmailValidate = epmailValidate();
                  var epmobnoValidate = epmobnoValidate();
                  var eplicensevalidate  = eplicenseValidate()

                  var getJSON = function(url,callback) {

                        var xhr = new XMLHttpRequest();
                        xhr.open('GET', url, true);
                        xhr.responseType = 'json';
                        xhr.onload = function() {
                              var status = xhr.status;
                              if (status === 200) {
                                    callback(null, xhr.response);
                              }else if (xhr.status == 512){
          
                                    resultjson = JSON.parse(xhr.responseText)
                                    if (resultjson.message ==  "Oauth Authentication Required"){
                                          // window.location.href = siteurl + "/logout"; 
                                          sessionExpired();
                                    }
                        
                              }else if(xhr.status == 513){
                                    // OLD LOGOUT FLOW
                                    window.location.href = siteurl+"/logout"; 
                              }
                        }
                        xhr.send();
                  }

                  //getJSON('https://ipapi.co/json/',function(err, data) {

                        if(epnameValidate == 0 || epcompanyValidate==0  || epmailValidate == 0 || epmobnoValidate == 0 || eplicensevalidate == 0){
                              return false;
                        }
                        else{
                            grecaptcha.ready(function() {
                                grecaptcha.execute('6Lf_oWAUAAAAACZ05oUmZpYozdYF7o0Oy4Iy8wnz', {action: 'submit'}).then(function(token) {
                                document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";

                                url = redirecturlserver +'/p/pes'
                                data='a='+btoa(epname.value)+"&b="+btoa(epmail.value)+'&c='+btoa(epmobno.value)+'&d='+btoa(eplicense.getAttribute("data-val"))+'&f='+btoa(epcountry.value)+'&e='+btoa('Upgrade')+'&g='+window.btoa(unescape(encodeURIComponent(epcity.value)))+'&h='+btoa(epcname.value)+'&i='+window.btoa(unescape(encodeURIComponent(epcity.value)))+'&j='+btoa(epeemployee)+'&k='+btoa(epdepartment)+'&token='+token
                                fbajaxcall(url,data,null).then(function(result) {
                                        document.querySelector("#enterpriseDataSubmit").disabled = false
                                        res = JSON.parse(result);
                                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                                        document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none";
                                        document.getElementById("enterprise_modal").style.display = "none";
                                        document.getElementsByClassName("payment-popup-bg")[0].style.display = "none";
                                        if(!res["error"]){
                                          setTimeout(() => {window.location.href = res['link']}, 3000);
                                        }
                                        resolve(result)
                                        if (window.location.href.includes('myteam')) {
                                            errorMsg=res['msg']
                                            $("#NotificationbarMessage").html(errorMsg);
                                            $('.Notification_popupbar').fadeIn();
                                          }
  
                                        document.getElementById("enterpriceUsername").value= ""
                                        document.getElementById("enterpriceCompanyEmail").value =""
                                        document.getElementById("enterpricePhoneNo").value =""

                                        Array.from(document.getElementsByClassName("enterpriseform_error")).map((key,val)=>{ key.innerHTML=""; })
                                }, function(error) {

                                        reject(error)
                                })
                            });
                        });
                        }


                  //})


                  function epnameValidate(){
                        if(epname.value.trim() == ""){
                              epname.style.border = "1px solid #ff0000"
                              document.getElementsByClassName("enterpriseform_error")[0].innerHTML = pgettext("Username-Validation","Please enter your full name.")
                              return 0;
                        }
                        else if(epname.value.trim().length < 2){
                              epname.style.border = "1px solid #ff0000"
                              document.getElementsByClassName("enterpriseform_error")[0].innerHTML = pgettext("Username-Validation","Name must contain 2 characters.")
                              return 0;
                        }
                        else if(!isNameValid(epname.value.trim())){
                              epname.style.border = "1px solid #ff0000"
                              document.getElementsByClassName("enterpriseform_error")[0].innerHTML = pgettext("Username-Validation","Please enter valid name.")
                              return 0;
                          }
                  }

                  function isNameValid(string){
                        return !/[\!\"\'\#\$\%\&\(\)\*\+\,\/\:\;\<\=\>\?\@\[\\\]\^\`\{\|\}\~]/g.test(string);
                    }
                  function epcompanyValidate(){
                        if(epcname.value.trim() == ""){
                            epcname.style.border = "1px solid #ff0000"
                            document.getElementsByClassName("enterpriseform_error")[2].innerHTML = pgettext("Companyname-Validation","Please enter your company name.")
                            return 0;
                        }
                  }
                  function epmailValidate(){
                        var regemail =  /^\w+([\.+-]?\w+)*@\w+([\.-]?\w+)*(\.\w{1,100})+$/;
                        if(epmail.value.trim() == ""){
                              epmail.style.border = "1px solid #ff0000"
                              document.getElementsByClassName("enterpriseform_error")[1].innerHTML = pgettext("Email-Validation","Please enter your business email address.")
                              return 0;
                        }
                        else if(regemail.test(epmail.value) == false){
                              epmail.style.border = "1px solid #ff0000"
                              document.getElementsByClassName("enterpriseform_error")[1].innerHTML = pgettext("Email-Validation","Please enter a valid email address.")
                              return 0;
                        }else{
                              var local_domain = epmail.value.split('@');
                              if (local_domain.length == 2 && allowedemails.indexOf(local_domain[1].toLowerCase()) != -1){
                                  epmail.style.border = "1px solid #ff0000";
                                  document.getElementsByClassName("enterpriseform_error")[1].innerHTML = pgettext("Email-Validation","Please enter your business email address.")
                                  return 0;
                              }else{
                                  epmail.style.border = "1px solid #e2dee4";
                                  document.getElementsByClassName("enterpriseform_error")[1].innerHTML = "";
                              }
                          }
                  }
                  function epmobnoValidate(){
                        if(epmobno.value.trim() == ""){
                              epmobno.style.border = "1px solid #ff0000"
                              document.getElementsByClassName("enterpriseform_error")[7].innerHTML = pgettext("Mobileno-Validation","Please enter Phone no.")
                              return 0;
                        }
                        else if(epmobno.value.trim().length < 8 ){
                              epmobno.style.border = "1px solid #ff0000"
                              document.getElementsByClassName("enterpriseform_error")[7].innerHTML = pgettext("Mobileno-Validation","Phone number should be atleast 8 digits.")
                              return 0;
                        }
                  }

                  function epcountryValidate(epcountry){
                        if(epcountry.value.trim() == ""){
                            epcountry.style.border = "1px solid #ff0000"
                            document.getElementsByClassName("enterpriseform_error")[5].innerHTML = pgettext("Countryname-Validation","Please enter your country.")
                            return 0;
                        }
                        else{
                            epcountry.style.border = "1px solid #e2dee4";
                            document.getElementsByClassName("enterpriseform_error")[5].innerHTML = "";
                        }
                  }
                function epcityValidate(epcity){
                        if(epcity.value.trim() == ""){
                            epcity.style.border = "1px solid #ff0000"
                            document.getElementsByClassName("enterpriseform_error")[6].innerHTML = pgettext("Cityname-Validation","Please enter your city.")
                            return 0;
                        }
                        else{
                            epcity.style.border = "1px solid #e2dee4";
                            document.getElementsByClassName("enterpriseform_error")[6].innerHTML = "";
                        }
                }

                function eplicenseValidate(){

                  if(eplicense.value.trim() == "Select number of Licenses"){ 
                      epcity.style.border = "1px solid #ff0000"
                      document.getElementsByClassName("enterpriseform_error")[8].innerHTML = pgettext("Cityname-Validation","Please select number of licenses")
                      return 0;
                  }
                  else{
                      epcity.style.border = "1px solid #e2dee4";
                      document.getElementsByClassName("enterpriseform_error")[8].innerHTML = "";
                  }
          
              }


            }
      }
      else{

            if(plan != "free" ){
                  proration = true
            }
            else{
                  proration=false
            }

            document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
            listPricingPayment(teamId,selectedplan,proration, source,plan).then(function(result) {
                  resolve(result)
            }, function(error) {

                  reject(error)
            })

      }

  })
}


function seeDetailedPlanSpecifications(e,pricingtype){
    if(pricingtype =='voice'){
        url_name = redirecturlserver+"/voice/pricing"
    }
    else if(pricingtype =='deck'){
        url_name = redirecturlserver+"/deck/pricing"
    }
    else{
        url_name = redirecturlserver+"/pricing"
    }
    if( params_src ){
        url_name = url_name + '?src='+ params_src
    }
    window.open(url_name, '_blank')
}

function listPricingPayment(teamId,selectedplan,proration,source,plan){

      return new Promise(function(resolve, reject) {
            webPaymentUpgradeHandler = function() {
                  upgradecounter += 1
                  // console.log(paymentmode,teamId,selectedplan,cycle,source,trial);
                  console.log("inside listenr")
                  // console.log(this,teamId,selPlan,cycle,source,trial)
                  // console.log("event called", this.target)
                  // paymentmode = this.target.getAttribute("data-payment");
                  // console.log(paymentmode);
                  if(upgradecounter < 2){
                        if(paymentmode != 'paypal'){
                              // cardPaymentListener(teamId,selPlan,cycle,source,trial);
                              document.getElementsByClassName("upgrade-now-btn")[0].disabled = true;
                  
                              url = redirecturlserver +'/p/pcs'
                              idVal = document.getElementsByClassName("selected-plan")[0].getAttribute("id")
                              if(idVal == "SelectedMonthlyPricingPlan"){
                                    cycle = "monthly"
                              }
                              else if(idVal == "SelectedYearlyPricingPlan"){
                                    cycle = "yearly"
                              }
                              else if(idVal == "SelectedHalfYearlyPricingPlan"){
                                    cycle = "half-yearly"
                              }
                  
                              var cardNo = document.getElementById("cardNumberPlanUpgrade").value
                              var expiry = document.getElementById("expiryDatePlanUpgrade").value
                              var cvv = document.getElementById("cardCvvPlanUpgrade").value
                              var zipcode = document.getElementById("zip-code-val").value
                  
                              if( document.getElementsByClassName("change_credit_card")[0] == undefined || document.getElementsByClassName("change_credit_card")[0].innerHTML == "Cancel" ){
                                    if(cardNo.trim() == "" || expiry.trim() == "" || cvv.trim() == "" || zipcode.trim() == ""){
                  
                                          document.getElementById("displaycarderrors").innerHTML = pgettext("Validation-Error","Card details cannot be empty");
                                          document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                    }
                                    else{
                  
                                          data='h='+btoa(teamId)+'&a='+btoa(selectedplan)+"&b="+btoa(cycle)+'&c='+btoa(cardNo)+'&d='+btoa(expiry)+"&e="+btoa(cvv)+"&f="+btoa(zipcode)+"&g="+btoa(source)
                  
                                          document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                                          fbajaxcall(url,data,null).then(function(result) {
                                                document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                                document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                  
                                                res = JSON.parse(result);
                  
                                                if(!res["error"]){
                                                      if(res['redirect_url']){
                                                            window.location = res['redirect_url'];
                                                      }
                                                      resolve(result)
                                                      closeUpgradeOverlayListeners()
                                                      
                                                      
                  
                                                }
                                                else{
                                                      document.getElementById("displaycarderrors").innerHTML = res["msg"];
                                                      document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                                      upgradecounter = 0; //resetting counter
                                                }
                  
                                          }, function(error) {
                                                upgradecounter = 0; //resetting counter
                                                reject(error)
                                                closeUpgradeOverlayListeners()
                  
                                          })
                                    }
                              }
                              else{
                                    data='h='+btoa(teamId)+'&a='+btoa(selectedplan)+"&b="+btoa(cycle)+"&g="+btoa(source)
                  
                                    document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                                    fbajaxcall(url,data,null).then(function(result) {
                                          document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                          document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                                          res = JSON.parse(result);
                                          if(!res["error"]){
                                                if(res['redirect_url']){
                                                      window.location = res['redirect_url'];
                                                }
                                                resolve(result);
                                                closeUpgradeOverlayListeners()
                                          }
                                          else {
                                                document.getElementById("displaycarderrors").innerHTML = res["msg"];
                                                document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                                upgradecounter = 0; //resetting counter
                                          }

                                          
                                    }, function(error) {
                                          upgradecounter = 0; //resetting counter
                                          reject(error)
                                          closeUpgradeOverlayListeners()
                  
                                    })
                              }
                              return true;
                        }else if (paymentmode == 'paypal'){
                              // paypalPaymentListener(teamId,selPlan,cycle,source,trial);
                              // console.log(teamId,selPlan,cycle,source,trial);
                              document.getElementsByClassName("upgrade-now-btn")[0].disabled = true;
                  
                              url = redirecturlserver +'/payments/p/paypal/subscription/'
                              idVal = document.getElementsByClassName("selected-plan")[0].getAttribute("id")
                              if(idVal == "SelectedMonthlyPricingPlan"){
                                    cycle = "monthly"
                              }
                              else if(idVal == "SelectedYearlyPricingPlan"){
                                    cycle = "yearly"
                              }
                              else if(idVal == "SelectedHalfYearlyPricingPlan"){
                                    cycle = "half-yearly"
                              }
                  
                  
                              data='h='+btoa(teamId)+'&a='+btoa(selectedplan)+"&b="+btoa(cycle)+"&g="+btoa(source)
                  
                              document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                              fbajaxcall(url,data,null).then(function(result) {
                                    document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                    document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                                    res = JSON.parse(result);
                                    if(!res["error"]){
                                          if(res['redirect_url']){
                                                window.location = res['redirect_url'];
                                          }
                                          resolve(result);
                                          closeUpgradeOverlayListeners()
                                    }
                                    else {
                                          document.getElementById("displaycarderrors").innerHTML = res["msg"];
                                          document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                          upgradecounter = 0; //resetting counter 
                                    }
                                          
                                    
                              }, function(error) {
                                    upgradecounter = 0;
                                    reject(error)
                                    closeUpgradeOverlayListeners()
                  
                              })
                              
                        }
                  }
            }
      
            webPaymentDowngradeHandler = function(){
                  downgradecounter += 1;
                  if (downgradecounter < 2 ) {

                        if(paymentmode != "paypal") {
                              document.getElementsByClassName("upgrade-now-btn")[0].disabled = true;
                              url = redirecturlserver +'/payments/p/bt/cbts/'
                              idVal = document.getElementsByClassName("selected-plan")[0].getAttribute("id")
                              if(idVal == "SelectedMonthlyPricingPlan"){
                                    cycle = "monthly"
                              }
                              else if(idVal == "SelectedYearlyPricingPlan"){
                                    cycle = "yearly"
                              }
                              else if(idVal == "SelectedHalfYearlyPricingPlan"){
                                    cycle = "half-yearly"
                              }
                              nouncetk = ""
                              ce = 1
                              cc = ''
                  
                              data='h='+btoa(teamId)+'&a='+btoa(selectedplan)+"&b="+btoa(cycle)+"&g="+btoa(source)+"&n=" +btoa(nouncetk)+"&ce="+btoa(ce)+"&cc="+btoa(cc)
                              // data += (ext2 != undefined) ? ('&cc=' +btoa(ext2)) : "";
                              document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                              fbajaxcall(url,data,null).then(function(result) {
                                    document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                                    document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                    res = JSON.parse(result);
                                    if(!res["error"]) {
                                          if(res['redirect_url']){
                                                window.location = res['redirect_url'];
                                          }
                                          resolve(result);
                                          closeUpgradeOverlayListeners()
                                    }
                                    else {
                                          document.getElementById("displaycarderrors").innerHTML = res["message"];
                                          document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                          downgradecounter = 0; //resetting counter 
                                    }
                                    
                              }, function(error) {
                                    downgradecounter = 0; //resetting counter 
                                    reject(error)
                                    closeUpgradeOverlayListeners()
                              })
                        }
                  
                        else {
                              document.getElementsByClassName("upgrade-now-btn")[0].disabled = true;
                              url = redirecturlserver +'/payments/p/paypal/subscription/'
                              idVal = document.getElementsByClassName("selected-plan")[0].getAttribute("id")
                              if(idVal == "SelectedMonthlyPricingPlan"){
                                    cycle = "monthly"
                              }
                              else if(idVal == "SelectedYearlyPricingPlan"){
                                    cycle = "yearly"
                              }
                              else if(idVal == "SelectedHalfYearlyPricingPlan"){
                                    cycle = "half-yearly"
                              }
                  
                              data='h='+btoa(teamId)+'&a='+btoa(selectedplan)+"&b="+btoa(cycle)+"&g="+btoa(source)+"&cc="+btoa(ext2)
                              document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                              fbajaxcall(url,data,null).then(function(result) {
                                    document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                                    document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                    res = JSON.parse(result);
                                    if(!res["error"]){
                                          if(res['redirect_url']){
                                                window.location = res['redirect_url'];
                                          }
                                          resolve(result);
                                          closeUpgradeOverlayListeners()
                                    }
                                    else {
                                          document.getElementById("displaycarderrors").innerHTML = res["msg"];
                                          document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                          downgradecounter = 0; //resetting counter 
                                    }
                              }, function(error) {
                                    downgradecounter = 0; //resetting counter
                                    reject(error)
                                    closeUpgradeOverlayListeners()
                              })
                        }
                  }
            };

            url = redirecturlserver +'/p/pcc'
            data='a='+btoa(teamId)+'&c='+btoa(proration)+'&d='+btoa(selectedplan)+'&cycleval='+btoa("yearly")+'&pname='+btoa(selectedplan)

            fbajaxcall(url,data,null).then(function(result) {

                  result = JSON.parse(result)
                  if (!result["error"]) {
                  teamSize = atob(result['c'])
                  splitUpCost = atob(result['f'])  //year cost
                  monthCost = parseInt(splitUpCost*teamSize*100)/100
                  paymentmode = atob(result["paymentmode"]);
                  removepaymentlisteners();
                  downgradecounter = 0;
                  upgradecounter = 0;

                  if(selectedplan == "starter"){
                        document.getElementById("upgradePaymentPlanHeader").innerHTML = pgettext('paymentsUpgradePlans',"Upgrade to Starter Plan")
                        document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$35</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                        document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$19</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $228 yearly')+")</sub></span></p>"

                        if(!proration){
                              document.getElementById("total_membersCost_splitUp").innerHTML="$228 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                              monthCost=228*teamSize
                        }
                        document.getElementsByClassName("yearly_offer_details")[0].childNodes[1].innerHTML = pgettext('paymentsUpgradePlans','Save')+" 45.7%"

                        if(atob(result['h']) > 35){
                              document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                              document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                        }
                  }
                  else if(selectedplan == "voice pro"){
                        document.getElementById("upgradePaymentPlanHeader").innerHTML = pgettext('paymentsUpgradePlans',"Upgrade to Voice pro Plan")
                        document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$35</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                        document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$19</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $228 yearly')+")</sub></span></p>"

                        if(!proration){
                              document.getElementById("total_membersCost_splitUp").innerHTML="$228 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                              monthCost=228*teamSize
                        }
                        document.getElementsByClassName("yearly_offer_details")[0].childNodes[1].innerHTML = pgettext('paymentsUpgradePlans','Save')+" 45.7%"

                        if(atob(result['h']) > 35){
                              document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                              document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                        }
                  }
                  else if(selectedplan == "slides pro"){
                        document.getElementById("upgradePaymentPlanHeader").innerHTML = pgettext('paymentsUpgradePlans',"Upgrade to Slides pro Plan")
                        document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$20</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                        document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$10</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $120 yearly')+")</sub></span></p>"

                        if(!proration){
                              document.getElementById("total_membersCost_splitUp").innerHTML="$120 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                              monthCost=120*teamSize
                        }
                        document.getElementsByClassName("yearly_offer_details")[0].childNodes[1].innerHTML = pgettext('paymentsUpgradePlans','Save')+" 50%"

                        if(atob(result['h']) > 20){
                              document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                              document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                        }
                  }
                  else if(selectedplan == "basic"){
                        document.getElementById("upgradePaymentPlanHeader").innerHTML = pgettext('paymentsUpgradePlans',"Upgrade to Basic Plan")
                        document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$20</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                        document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$10</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $120 yearly')+")</sub></span></p>"

                        if(!proration){
                              document.getElementById("total_membersCost_splitUp").innerHTML="$120 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                              monthCost=120*teamSize
                        }
                        document.getElementsByClassName("yearly_offer_details")[0].childNodes[1].innerHTML = pgettext('paymentsUpgradePlans','Save')+" 50%"

                  }
                  else{
                        document.getElementById("upgradePaymentPlanHeader").innerHTML = pgettext('paymentsUpgradePlans',"Upgrade to Pro Plan")
                        document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$79</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                        document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$" + PRO_Y_M  + "</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay') + " $" + PRO_Y_Y + " " + pgettext('paymentsUpgradePlans','yearly')+")</sub></span></p>"

                        if(!proration){
                              document.getElementById("total_membersCost_splitUp").innerHTML="$"+PRO_Y_Y+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                              monthCost = PRO_Y_Y*teamSize
                        }
                        document.getElementsByClassName("yearly_offer_details")[0].childNodes[1].innerHTML = pgettext('paymentsUpgradePlans','Save')+ " " +  calculate_saved_percent(PRO_M_Y, PRO_Y_Y)+" %"

                        if(atob(result['h']) > 79){
                              document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                              document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                        }

                  }

                  if(proration){
                        document.getElementById("total_membersCost_splitUp").innerHTML= "$"+splitUpCost+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                        document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""

                        teamDetails = {'teamSize':teamSize,'proration':true,'plan':selectedplan,'monthCost':atob(result['e']),'yearCost': splitUpCost,'teamId':teamId,"discountType":result['l'],"discountAmount":atob(result['i']),"monthlyamount":result['m']}
                  }
                  else{
                        document.getElementById("totalCostAmountPay").innerHTML="$"+monthCost+""
                        teamDetails = {'teamSize':teamSize,'proration':false,'plan':selectedplan,'teamId':teamId,"discountType":result['l'],"discountAmount":atob(result['i']),"monthlyamount":result['m']}
                  }

                  document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                  if(atob(result["paymentmode"]) != "paypal"){
                        //  If brand is none display card inputs else fetch card details.
                        if(atob(result['b']) != "none"){
                              document.getElementsByClassName("card-contents")[0].style.display = "none"
                              document.getElementsByClassName("note_payment_card_details")[0].innerHTML="<span> "+pgettext('paymentsUpgradePlans','Pay with')+" "+atob(result['b'])+" **** "+atob(result['a'])+". </span>"+"<span class='change_credit_card change' onclick=changeUserCardDetails(" +"this"+ ',' +'"' +atob(result['b'])+ '"'+ ',' +atob(result['a'])+ ")>"+pgettext('paymentsUpgradePlans','Change')+"</span>"
                        }
                        else{
                              document.getElementsByClassName("card-contents")[0].style.display = "block"
                        }
                  }
                  else {
                        document.getElementsByClassName("card-contents")[0].style.display = "none" 
                        }

                  // Show discount offer
                  if(plan == "free" && ( atob(result['i']) != 0 || result['m'] != 0) ){

                        teamDetails["downgrade"] = false
                        showdiscount(result,selPlan=selectedplan,discountAmount = atob(result['i']),teamSize = atob(result['c']),plan,teamId,source).then(function(result){
                              resolve(result)
                        })

                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                        document.getElementById("upgrade_model").style.display = "block";
                  }
                  else{
                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                        document.getElementById("upgrade_model").style.display = "block";
                        
                        document.getElementById("updradePlanNow").addEventListener("click",webPaymentUpgradeHandler, false)

                  }

                }
                else{
                  closeUpgradeOverlayListeners()
                  document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none";
                  document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                  document.getElementById("upgrade_model").innerHTML = result["errormsg"]
                  document.getElementsByClassName("success_div")[0].style.padding = "15px 25px"
                  document.getElementsByClassName("Notification_popupbar")[0].style.display = "block";
                  result = JSON.stringify(result)
                  resolve(result)
                  //successfade();
              }    


            }, function(error) {
                  reject(error)
            })


            inAppPaymentUpgrade = function(){
                  
                  if(paymentmode != "paypal") {
                        document.getElementsByClassName("upgrade-now-btn")[0].disabled = true;

                        url = redirecturlserver +'/p/pcs'
                        idVal = document.getElementsByClassName("selected-plan")[0].getAttribute("id")
                        if(idVal == "SelectedMonthlyPricingPlan"){
                              cycle = "monthly"
                        }
                        else if(idVal == "SelectedYearlyPricingPlan"){
                              cycle = "yearly"
                        }

                        var cardNo = document.getElementById("cardNumberPlanUpgrade").value
                        var expiry = document.getElementById("expiryDatePlanUpgrade").value
                        var cvv = document.getElementById("cardCvvPlanUpgrade").value
                        var zipcode = document.getElementById("zip-code-val").value

                        if( document.getElementsByClassName("change_credit_card")[0] == undefined || document.getElementsByClassName("change_credit_card")[0].innerHTML == "Cancel" ){
                              if(cardNo.trim() == "" || expiry.trim() == "" || cvv.trim() == ""  || zipcode.trim() == ""){

                                    document.getElementById("displaycarderrors").innerHTML = pgettext("Validation-Error","Card details cannot be empty");
                                    document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                              }
                              else{

                                    data='h='+btoa(teamId)+'&a='+btoa(selectedplan)+"&b="+btoa(cycle)+'&c='+btoa(cardNo)+'&d='+btoa(expiry)+"&e="+btoa(cvv)+"&f="+btoa(zipcode)+"&g="+btoa(source)

                                    document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                                    fbajaxcall(url,data,null).then(function(result) {
                                          document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                          document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";

                                          res = JSON.parse(result);

                                          if(!res["error"]){
                                                if(res['redirect_url']){
                                                      window.location = res['redirect_url'];
                                                }
                                                resolve(result)
                                                closeUpgradeOverlayListeners()
                                          }
                                          else{
                                                document.getElementById("displaycarderrors").innerHTML = res["msg"];
                                                document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                          }

                                    }, function(error) {

                                          reject(error)
                                          closeUpgradeOverlayListeners()

                                    })
                              }
                        }
                        else{
                              data='h='+btoa(teamId)+'&a='+btoa(selectedplan)+"&b="+btoa(cycle)+"&g="+btoa(source)

                              document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                              fbajaxcall(url,data,null).then(function(result) {
                                    document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                                    document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                                    res = JSON.parse(result);
                                    if(res['redirect_url']){
                                          window.location = res['redirect_url'];
                                    }
                                    resolve(result)
                                    closeUpgradeOverlayListeners()
                              }, function(error) {

                                    reject(error)
                                    closeUpgradeOverlayListeners()

                              })
                        }
                  }
                  else {
                        document.getElementsByClassName("upgrade-now-btn")[0].disabled = true;
            
                        url = redirecturlserver +'/payments/p/paypal/subscription/'
                        idVal = document.getElementsByClassName("selected-plan")[0].getAttribute("id")
                        if(idVal == "SelectedMonthlyPricingPlan"){
                              cycle = "monthly"
                        }
                        else if(idVal == "SelectedYearlyPricingPlan"){
                              cycle = "yearly"
                        }
                        else if(idVal == "SelectedHalfYearlyPricingPlan"){
                              cycle = "half-yearly"
                        }
            
            
                        data='h='+btoa(teamId)+'&a='+btoa(selectedplan)+"&b="+btoa(cycle)+"&g="+btoa(source)
            
                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                        fbajaxcall(url,data,null).then(function(result) {
                              document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                              document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                              res = JSON.parse(result);
                              if(!res["error"]) {
                                    if(res['redirect_url']){
                                          window.location = res['redirect_url'];
                                    }
                  
                                    resolve(result);
                                    closeUpgradeOverlayListeners()
                              }
                              else {
                                    document.getElementById("displaycarderrors").innerHTML = res["msg"];
                                    document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                              }
                              
                        }, function(error) {
            
                              reject(error)
                              closeUpgradeOverlayListeners()
            
                        })
                  }
            }

      })

}


function capitalizeFirstLetter(string) {
      return string.charAt(0).toUpperCase() + string.slice(1);
}

function showdiscount(result,selPlan,discountAmount,teamSize,plan,teamId,source){
      return new Promise(function(resolve, reject) {

            var cycle="yearly"
            // Percentage off logic
            if(result['l'] == "percentage"){
                  var headerPlanName = selPlan
                  document.getElementById("upgradePaymentPlanHeader").innerHTML= pgettext('paymentsUpgradePlans','Upgrade to ')+capitalizeFirstLetter (transplansdata['plans_'+language_code][headerPlanName] )+" Plan"

                  if(selPlan == "basic"){

                        document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$20</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                        document.getElementsByClassName("yearly_plan")[0].innerHTML="<p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$10</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $120 yearly')+")</sub></span></p>"

                        document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                        if(cycle == "monthly" ){
                              document.getElementById("total_membersCost_splitUp").innerHTML="$20 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+parseFloat((20/100)*discountAmount).toFixed(2)+" x "+teamSize+" from coupon )</span>"
                              orginalcost = 20*teamSize
                              monthCost=(20*teamSize) - ((20*teamSize/100)*discountAmount)
                              document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                              document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

                              document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");
                              document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");
                        }
                        else if(cycle == "yearly" ){
                              document.getElementById("total_membersCost_splitUp").innerHTML="$120 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+parseFloat((120/100)*discountAmount).toFixed(2)+" x "+teamSize+" from coupon )</span>"
                              orginalcost = 120*teamSize
                              monthCost=(120*teamSize) - ((120*teamSize/100)*discountAmount)
                              document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                              document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
                        }
                        else{
                              document.getElementById("total_membersCost_splitUp").innerHTML="$120 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'></span>"
                              orginalcost = 120*teamSize
                              monthCost=orginalcost
                              document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                              document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
                        }

                        if(atob(result['h']) > 20){
                              document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                              document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                        }

                  }
                  else if(selPlan == "starter"){

                        document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$35</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                        document.getElementsByClassName("yearly_plan")[0].innerHTML="<p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$19</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $228 yearly')+")</sub></span></p>"

                        document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                        if(cycle == "monthly" ){
                              document.getElementById("total_membersCost_splitUp").innerHTML= "$35 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+parseFloat((35/100)*discountAmount).toFixed(2)+" x "+teamSize+" from coupon )</span>"
                              orginalcost = 35*teamSize
                              monthCost=(35*teamSize) - ((35*teamSize/100)*discountAmount)
                              document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                              document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

                              document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");
                              document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");

                        }
                        else if(cycle == "yearly" ){
                              document.getElementById("total_membersCost_splitUp").innerHTML="$228 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+parseFloat((228/100)*discountAmount).toFixed(2)+" x "+teamSize+" from coupon )</span>"
                              orginalcost = 228*teamSize
                              monthCost=(228*teamSize) - ((228*teamSize/100)*discountAmount)
                              document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                              document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                        }
                        else{
                              document.getElementById("total_membersCost_splitUp").innerHTML="$228 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'></span>"
                              orginalcost = 228*teamSize
                              monthCost=orginalcost
                              document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                              document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
                        }


                        if(atob(result['h']) > 35){
                              document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                              document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                        }

                  }
                  else{

                        document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$79</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                        document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$" + PRO_Y_M  + "</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay') + " $" + PRO_Y_Y + " " + pgettext('paymentsUpgradePlans','yearly')+")</sub></span></p>"

                        document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                        if(cycle != "half-yearly"){
                              if(cycle == "yearly" ){
                                    document.getElementById("total_membersCost_splitUp").innerHTML="$"+PRO_Y_Y+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+parseFloat((PRO_Y_Y/100)*discountAmount).toFixed(2)+" x "+teamSize+" from coupon )</span>"
                                    orginalcost = PRO_Y_Y*teamSize
                                    monthCost=(PRO_Y_Y*teamSize)- ((PRO_Y_Y*teamSize/100)*discountAmount)
                                    document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                    document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
                              }
                              else{
                                    document.getElementById("total_membersCost_splitUp").innerHTML="$79 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+parseFloat((79/100)*discountAmount).toFixed(2)+" x "+teamSize+" from coupon )</span>"
                                    orginalcost = 79*teamSize
                                    monthCost=(79*teamSize) - ((79*teamSize/100)*discountAmount)
                                    document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                    document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

                                    document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");
                                    document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");
                              }
                        }
                        else{
                              document.getElementsByClassName("monthly-details")[0].style.display = "none";
                              document.getElementsByClassName("yearly-details")[0].setAttribute("id","SelectedHalfYearlyPricingPlan")
                              document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Half Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$" + PRO_Y_M  + "</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay') +" $"+ PRO_Y_HY + " " +  pgettext('paymentsUpgradePlans','half yearly')+")</sub></span></p>"

                              document.getElementById("total_membersCost_splitUp").innerHTML="$"+ PRO_Y_HY  + " x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+parseFloat((PRO_Y_HY/100)*discountAmount).toFixed(2)+" x "+teamSize+" from coupon )</span>"
                              orginalcost = PRO_Y_HY*teamSize
                              monthCost=(PRO_Y_HY*teamSize) - ((PRO_Y_HY*teamSize/100)*discountAmount)
                              document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                              document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every 6 months. You can unsubscribe anytime via My Plan.")

                        }

                        if(atob(result['h']) > 79){
                              document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                              document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                        }

                  }

                  document.getElementById("total_membersCost_splitUp").style.fontWeight = "unset"
                  document.getElementById("totalCostAmountPay").style.fontSize = "16px"


                  if(atob(result["paymentmode"]) != "paypal"){
                        //  If brand is none display card inputs else fetch card details.
                        if(atob(result['b']) != "none"){
                              document.getElementsByClassName("card-contents")[0].style.display = "none"
                              document.getElementsByClassName("note_payment_card_details")[0].innerHTML="<span> "+pgettext('paymentsUpgradePlans','Pay with')+" "+atob(result['b'])+" **** "+atob(result['a'])+". </span>"+"<span class='change_credit_card change' onclick=changeUserCardDetails(" +"this"+ ',' +'"' +atob(result['b'])+ '"'+ ',' +atob(result['a'])+ ")>"+pgettext('paymentsUpgradePlans','Change')+"</span>"
                        }
                        else{
                              document.getElementsByClassName("card-contents")[0].style.display = "block"
                        }
                  }
                  else {
                        document.getElementsByClassName("card-contents")[0].style.display = "none" 
                  }

                  // webPaymentUpgradeHandler = function(){
                  //       document.getElementsByClassName("upgrade-now-btn")[0].disabled = true;

                  //       url = redirecturlserver +'/p/pcs'
                  //       idVal = document.getElementsByClassName("selected-plan")[0].getAttribute("id")
                  //       if(idVal == "SelectedMonthlyPricingPlan"){
                  //             cycle = "monthly"
                  //       }
                  //       else if(idVal == "SelectedYearlyPricingPlan"){
                  //             cycle = "yearly"
                  //       }
                  //       else if(idVal == "SelectedHalfYearlyPricingPlan"){
                  //             cycle = "half-yearly"
                  //       }


                  //       if(document.getElementsByClassName("discount_coupen_show")[0].style.display == "none"){
                  //             result["k"]=""
                  //       }

                  //       var cardNo = document.getElementById("cardNumberPlanUpgrade").value
                  //       var expiry = document.getElementById("expiryDatePlanUpgrade").value
                  //       var cvv = document.getElementById("cardCvvPlanUpgrade").value
                  //       var zipcode = document.getElementById("zip-code-val").value

                  //       var gspkCheck = new URLSearchParams(window.location.search);

                  //       if( document.getElementsByClassName("change_credit_card")[0] == undefined || document.getElementsByClassName("change_credit_card")[0].innerHTML == "Cancel" ){
                  //             if(cardNo.trim() == "" || expiry.trim() == "" || cvv.trim() == "" || zipcode.trim() == ""){

                  //                   document.getElementById("displaycarderrors").innerHTML = pgettext("Validation-Error","Card details cannot be empty");
                  //                   document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                  //             }
                  //             else{

                  //                   data='h='+btoa(teamId)+'&a='+btoa(selPlan)+"&b="+btoa(cycle)+'&c='+btoa(cardNo)+'&d='+btoa(expiry)+"&e="+btoa(cvv)+"&f="+btoa(zipcode)+"&g="+btoa(source)+"&cc="+result["k"]+"&type="+result['l']
                  //                   if(gspkCheck.get("gspk") != null){
                  //                         data  += "&partnerc="+gspkCheck.get("gspk")
                  //                   }
                  //                   document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                  //                   fbajaxcall(url,data,null).then(function(result) {
                  //                         document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                  //                         document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";

                  //                         res = JSON.parse(result);

                  //                         if(!res["error"]){
                  //                               if(res['redirect_url']){
                  //                                     window.location = res['redirect_url'];
                  //                               }
                  //                               resolve(result)
                  //                               closeUpgradeOverlayListeners()

                  //                         }
                  //                         else{
                  //                               document.getElementById("displaycarderrors").innerHTML = res["msg"];
                  //                               document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                  //                         }

                  //                   }, function(error) {

                  //                         reject(error)
                  //                         closeUpgradeOverlayListeners()

                  //                   })
                  //             }
                  //       }
                  //       else{
                  //             data='h='+btoa(teamId)+'&a='+btoa(selPlan)+"&b="+btoa(cycle)+"&g="+btoa(source)
                  //             if(gspkCheck.get("gspk") != null){
                  //                   data  += "&partnerc="+gspkCheck.get("gspk")
                  //             }
                  //             document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                  //             fbajaxcall(url,data,null).then(function(result) {
                  //                   document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                  //                   document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                  //                   res = JSON.parse(result);
                  //                   if(res['redirect_url']){
                  //                         window.location = res['redirect_url'];
                  //                   }
                  //                   resolve(result)
                  //                   closeUpgradeOverlayListeners()
                  //             }, function(error) {

                  //                   reject(error)
                  //                   closeUpgradeOverlayListeners()

                  //             })
                  //       }
                  // }

                  if(plan != "free"){
                        if(cycle == "monthly" ){
                              splitUpCost = atob(result['e']) //Month cost
                              orginalcost = splitUpCost*teamSize
                        }
                        else if(cycle == "half-yearly" && selPlan == "pro"){
                              splitUpCost = atob(result['j']) //Half Year cost
                              orginalcost = splitUpCost*teamSize
                        }
                        else{
                              splitUpCost = atob(result['f']) //Year cost
                              orginalcost = splitUpCost*teamSize
                        }

                        document.getElementById("total_membersCost_splitUp").innerHTML= "$"+splitUpCost+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+0+" from coupon )</span>"
                        // totalCost = orginalcost - ((orginalcost/100)*discountAmount)
                        totalCost = orginalcost
                        document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(totalCost).toFixed(2)+""
                  }
                  
                  document.getElementById("updradePlanNow").addEventListener("click",webPaymentUpgradeHandler, false)
            }
            // Amount off logic
            else{
                  var headerPlanName = selPlan
                  document.getElementById("upgradePaymentPlanHeader").innerHTML= pgettext('paymentsUpgradePlans','Upgrade to ')+capitalizeFirstLetter (transplansdata['plans_'+language_code][headerPlanName] )+" Plan"

                  if(selPlan == "basic"){

                        document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$20</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                        document.getElementsByClassName("yearly_plan")[0].innerHTML="<p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$10</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $120 yearly')+")</sub></span></p>"

                        document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                        if(cycle == "monthly" ){
                              document.getElementById("total_membersCost_splitUp").innerHTML="$20 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+discountAmount+" from coupon )</span>"
                              orginalcost = 20*teamSize
                              monthCost=(20*teamSize) - discountAmount
                              document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                              document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

                              document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");
                              document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");
                        }
                        else if(cycle == "yearly" ){
                              document.getElementById("total_membersCost_splitUp").innerHTML="$120 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+discountAmount+" from coupon )</span>"
                              orginalcost = 120*teamSize
                              monthCost=(120*teamSize) - discountAmount
                              document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                              document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                        }
                        else{
                              document.getElementById("total_membersCost_splitUp").innerHTML="$120 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'></span>"
                              orginalcost = 120*teamSize
                              monthCost=orginalcost
                              document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                              document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
                        }


                        if(atob(result['h']) > 20){
                              document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                              document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                        }

                  }
                  else if(selPlan == "starter"){

                        document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$35</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                        document.getElementsByClassName("yearly_plan")[0].innerHTML="<p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$19</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay $228 yearly')+")</sub></span></p>"

                        document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                        if(cycle == "monthly" ){
                              document.getElementById("total_membersCost_splitUp").innerHTML= "$35 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+discountAmount+" from coupon )</span>"
                              orginalcost = 35*teamSize
                              monthCost=(35*teamSize) - discountAmount
                              document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                              document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

                              document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");
                              document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");

                        }
                        else if(cycle == "yearly" ){
                              document.getElementById("total_membersCost_splitUp").innerHTML="$228 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+discountAmount+" from coupon )</span>"
                              orginalcost = 228*teamSize
                              monthCost=(228*teamSize) - discountAmount
                              document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                              document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                        }
                        else{
                              document.getElementById("total_membersCost_splitUp").innerHTML="$228 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'></span>"
                              orginalcost = 228*teamSize
                              monthCost=orginalcost
                              document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                              document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
                        }

                        if(atob(result['h']) > 35){
                              document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                              document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                        }

                  }
                  else{

                        document.getElementsByClassName("monthly_plan")[0].innerHTML="<p>"+pgettext('paymentsUpgradePlans','Monthly')+" - <span class='monthly_cost' id='plan-monthly-cost'>$79</span><span class='cost_per_month'><sub>/ mo</sub></span></p>"
                        document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$" + PRO_Y_M  + "</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay') + " $" + PRO_Y_Y + " " + pgettext('paymentsUpgradePlans','yearly')+")</sub></span></p>"

                        document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")

                        if(cycle != "half-yearly"){
                              if(cycle == "yearly" ){
                                    document.getElementById("total_membersCost_splitUp").innerHTML="$"+PRO_Y_Y+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+discountAmount+" from coupon )</span>"
                                    orginalcost = PRO_Y_Y*teamSize
                                    monthCost=(PRO_Y_Y*teamSize)- discountAmount
                                    document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                    document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every year. You can unsubscribe anytime via My Plan.")
                              }
                              else{
                                    document.getElementById("total_membersCost_splitUp").innerHTML="$79 x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+discountAmount+" from coupon )</span>"
                                    orginalcost = 79*teamSize
                                    monthCost=(79*teamSize) - discountAmount
                                    document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                                    document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every month. You can unsubscribe anytime via My Plan.")

                                    document.getElementsByClassName("onselecting-plan")[0].classList.add("selected-plan");
                                    document.getElementsByClassName("onselecting-plan")[1].classList.remove("selected-plan");
                              }
                        }
                        else{
                              document.getElementsByClassName("monthly-details")[0].style.display = "none";
                              document.getElementsByClassName("yearly-details")[0].setAttribute("id","SelectedHalfYearlyPricingPlan")
                              document.getElementsByClassName("yearly_plan")[0].innerHTML=" <p>Half Yearly - <span class='yearly_cost' id='plan-yearly-cost'>$" + PRO_Y_M  + "</span><span class='cost_per_year'><sub id='monthly-sub'>/ mo ("+pgettext('paymentsUpgradePlans','you pay') +" $"+ PRO_Y_HY + " " +  pgettext('paymentsUpgradePlans','half yearly')+")</sub></span></p>"

                              document.getElementById("total_membersCost_splitUp").innerHTML="$"+ PRO_Y_HY  + " x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+discountAmount+" from coupon )</span>"
                              orginalcost = PRO_Y_HY*teamSize
                              monthCost=(PRO_Y_HY*teamSize) - discountAmount
                              document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(monthCost).toFixed(2)+""
                              document.getElementsByClassName("note-description")[0].innerHTML = pgettext('paymentsUpgradePlans',"Your subscription will auto renew every 6 months. You can unsubscribe anytime via My Plan.")
                        }

                        if(atob(result['h']) > 79){
                              document.getElementsByClassName("onselecting-plan")[0].classList.add("maskedMonthly");
                              document.getElementsByClassName("onselecting-plan")[1].classList.add("maskedMonthly");
                        }

                  }

                  document.getElementById("total_membersCost_splitUp").style.fontWeight = "unset"
                  document.getElementById("totalCostAmountPay").style.fontSize = "16px"


                  if(atob(result["paymentmode"]) != "paypal"){
                        //  If brand is none display card inputs else fetch card details.
                        if(atob(result['b']) != "none"){
                              document.getElementsByClassName("card-contents")[0].style.display = "none"
                              document.getElementsByClassName("note_payment_card_details")[0].innerHTML="<span> "+pgettext('paymentsUpgradePlans','Pay with')+" "+atob(result['b'])+" **** "+atob(result['a'])+". </span>"+"<span class='change_credit_card change' onclick=changeUserCardDetails(" +"this"+ ',' +'"' +atob(result['b'])+ '"'+ ',' +atob(result['a'])+ ")>"+pgettext('paymentsUpgradePlans','Change')+"</span>"
                        }
                        else{
                              document.getElementsByClassName("card-contents")[0].style.display = "block"
                        }
                  }
                  else {
                        document.getElementsByClassName("card-contents")[0].style.display = "none" 
                  }

                  // webPaymentUpgradeHandler = function(){
                  //       document.getElementsByClassName("upgrade-now-btn")[0].disabled = true;

                  //       url = redirecturlserver +'/p/pcs'
                  //       idVal = document.getElementsByClassName("selected-plan")[0].getAttribute("id")
                  //       if(idVal == "SelectedMonthlyPricingPlan"){
                  //             cycle = "monthly"
                  //       }
                  //       else if(idVal == "SelectedYearlyPricingPlan"){
                  //             cycle = "yearly"
                  //       }
                  //       else if(idVal == "SelectedHalfYearlyPricingPlan"){
                  //             cycle = "half-yearly"
                  //       }


                  //       if(document.getElementsByClassName("discount_coupen_show")[0].style.display == "none"){
                  //             result["k"]=""
                  //       }

                  //       var cardNo = document.getElementById("cardNumberPlanUpgrade").value
                  //       var expiry = document.getElementById("expiryDatePlanUpgrade").value
                  //       var cvv = document.getElementById("cardCvvPlanUpgrade").value
                  //       var zipcode = document.getElementById("zip-code-val").value

                  //       var gspkCheck = new URLSearchParams(window.location.search);

                  //       if( document.getElementsByClassName("change_credit_card")[0] == undefined || document.getElementsByClassName("change_credit_card")[0].innerHTML == "Cancel" ){
                  //             if(cardNo.trim() == "" || expiry.trim() == "" || cvv.trim() == "" || zipcode.trim() == ""){

                  //                   document.getElementById("displaycarderrors").innerHTML = pgettext("Validation-Error","Card details cannot be empty");
                  //                   document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                  //             }
                  //             else{

                  //                   data='h='+btoa(teamId)+'&a='+btoa(selPlan)+"&b="+btoa(cycle)+'&c='+btoa(cardNo)+'&d='+btoa(expiry)+"&e="+btoa(cvv)+"&f="+btoa(zipcode)+"&g="+btoa(source)+"&cc="+result["k"]+"&type="+result['l']

                  //                   if(gspkCheck.get("gspk") != null){
                  //                         data  += "&partnerc="+gspkCheck.get("gspk")
                  //                   }

                  //                   document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                  //                   fbajaxcall(url,data,null).then(function(result) {
                  //                         document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                  //                         document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";

                  //                         res = JSON.parse(result);

                  //                         if(!res["error"]){
                  //                               if(res['redirect_url']){
                  //                                     window.location = res['redirect_url'];
                  //                               }
                  //                               resolve(result)
                  //                               closeUpgradeOverlayListeners()

                  //                         }
                  //                         else{
                  //                               document.getElementById("displaycarderrors").innerHTML = res["msg"];
                  //                               document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                  //                         }

                  //                   }, function(error) {

                  //                         reject(error)
                  //                         closeUpgradeOverlayListeners()

                  //                   })
                  //             }
                  //       }
                  //       else{
                  //             data='h='+btoa(teamId)+'&a='+btoa(selPlan)+"&b="+btoa(cycle)+"&g="+btoa(source)

                  //             if(gspkCheck.get("gspk") != null){
                  //                   data  += "&partnerc="+gspkCheck.get("gspk")
                  //             }

                  //             document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
                  //             fbajaxcall(url,data,null).then(function(result) {
                  //                   document.getElementsByClassName("upgrade-now-btn")[0].disabled = false;
                  //                   document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                  //                   res = JSON.parse(result);
                  //                   if(res['redirect_url']){
                  //                         window.location = res['redirect_url'];
                  //                   }
                  //                   resolve(result)
                  //                   closeUpgradeOverlayListeners()
                  //             }, function(error) {

                  //                   reject(error)
                  //                   closeUpgradeOverlayListeners()

                  //             })
                  //       }
                  // }

                  if(plan != "free"){
                        if(cycle == "monthly" ){
                              splitUpCost = atob(result['e']) //Month cost
                              orginalcost = splitUpCost*teamSize
                        }
                        else if(cycle == "half-yearly" && selPlan == "pro"){
                              splitUpCost = atob(result['j']) //Half Year cost
                              orginalcost = splitUpCost*teamSize
                        }
                        else{
                              splitUpCost = atob(result['f']) //Year cost
                              orginalcost = splitUpCost*teamSize
                        }

                        document.getElementById("total_membersCost_splitUp").innerHTML= "$"+splitUpCost+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')+"<span style='color:#e02929'>( -$"+0+" from coupon )</span>"
                        // totalCost = orginalcost - ((orginalcost/100)*discountAmount)
                        totalCost = orginalcost
                        document.getElementById("totalCostAmountPay").innerHTML="$"+parseFloat(totalCost).toFixed(2)+""
                  }
            
                  document.getElementById("updradePlanNow").addEventListener("click",webPaymentUpgradeHandler, false)
            }

            if(discountAmount != 0){

                  document.getElementsByClassName("discount_coupen_show")[0].style.display = "block"
                  document.getElementsByClassName("coupen_code_val_input")[0].innerHTML = result["k"]+"<span style='color:#BF4711;margin-left: auto;cursor:pointer;position:absolute;right:10px;' onclick='removediscount(this,"+parseFloat(orginalcost).toFixed(2)+","+'"'+result['h']+'"'+")'>Remove</span>"
            }
            else if(result['m'] != 0){

                  document.getElementsByClassName("discount_coupen_show")[0].style.display = "none"
                  document.getElementsByClassName("coupen_code_val_input")[0].innerHTML = result["k"]+"<span style='color:#BF4711;margin-left: auto;cursor:pointer;position:absolute;right:10px;' onclick='removediscount(this,"+parseFloat(orginalcost).toFixed(2)+","+'"'+result['m']+'"'+")'>Remove</span>"
            }
      })
}


function closeUpgradePaymentPopups(e,event){
    // event.stopPropagation();
    e.parentNode.parentNode.style.display = "none";
    document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none";
    try {
    document.getElementById("upgrade_model").style.display ="none"
    } catch(error) {
        /* closing trial popup */
        var trialpopup = document.getElementById("trialpopup");
        trialpopup.style.opacity = 0;
        trialpopup.style.visibility = "hidden";
    }

    if(document.getElementsByClassName("payment-popup-bg")){
      document.getElementsByClassName("payment-popup-bg")[0].style.display = "none";
    }


    document.getElementById("enterprise_modal").style.display ="none"

    try {
      Array.from(document.getElementsByClassName("demoform_error")).map((key,val)=>{ key.innerHTML=""; })
      document.getElementById("book_country_dropdown").style.display ="none"
      document.getElementById("book_city_dropdown").style.display ="none"
      document.getElementById("enterpriselicencedropdown").style.border ="transparent"
      document.getElementById("demoPurpose").setAttribute("value",'Select your purpose')
      document.getElementById("demoPurpose").setAttribute("data-val",'');
      document.getElementById("book_a_demo_modal").style.display ="none"
    }
    catch(error) {

    }

    document.getElementById("detaileddowngradeMenu").style.display ="none"
    document.getElementById("cancelSubscriptionBlock").style.display ="none"
    document.getElementById("cancelSubscriptionBlockDowngrade").style.display ="none"

    document.getElementById("Upgradevoiceapppro").style.display ="none"
    document.getElementById("Upgradevoiceappenterprise").style.display ="none"

    document.getElementById("cardNumberPlanUpgrade").value = ""
    document.getElementById("expiryDatePlanUpgrade").value =""
    document.getElementById("cardCvvPlanUpgrade").value = ""
    document.getElementById("zip-code-val").value = ""


    document.getElementsByClassName("onselecting-plan")[1].classList.add("selected-plan");
    document.getElementsByClassName("onselecting-plan")[0].classList.remove("selected-plan");

    // enabling pointer events again on Monthly and yearly boxes
    document.getElementsByClassName("onselecting-plan")[0].classList.remove("maskedMonthly");
    document.getElementsByClassName("onselecting-plan")[1].classList.remove("maskedMonthly");

    // Promise.reject(new Error('fail')).then(resolved, upgradePlan);
    // ...dispatch on elem!
    let closeevent = new Event("POPUPCLOSE", {bubbles: true});
    e.dispatchEvent(closeevent)


    document.getElementById("downgradePlaninMyPlans").innerHTML ="";

    document.getElementById("updradePlanNow").removeEventListener("click", webPaymentDowngradeHandler, true)

    document.getElementById("displaycarderrors").innerHTML = ""

    document.getElementById("updradePlanNow").removeEventListener("click", webPaymentUpgradeHandler, false )
    document.getElementById("updradePlanNow").removeEventListener("click", inAppPaymentUpgrade, false )

    document.getElementsByClassName("monthly-details")[0].style.display = "block";
    document.getElementsByClassName("yearly-details")[0].setAttribute("id","SelectedYearlyPricingPlan")


      document.getElementById("enterpriceUsername").value= ""
      document.getElementById("enterpriceCompanyEmail").value =""
      document.getElementById("enterpricePhoneNo").value =""

      document.getElementById("enterpriselicence_dropdown_block").style.display = "none"


      Array.from(document.getElementsByClassName("supportinput")).map((key,val)=>{ key.style=""; })

      Array.from(document.getElementsByClassName("enterpriseform_error")).map((key,val)=>{ key.innerHTML=""; })

      document.getElementsByClassName("discount_coupen_show")[0].removeAttribute("style")

}

document.addEventListener("POPUPCLOSE", function(event) {

})



function closeUpgradePaymentOverlay(e){
    let closeevent = new Event("POPUPCLOSE", {bubbles: true});
    e.dispatchEvent(closeevent)
    closeUpgradeOverlayListeners()
    closeteamenterprisepopup()
    closePastDuepaynowPopups()
    closePastDuePopupsListeners()
    closezoomPopups()
}

function closeteamenterprisepopup(){
    try{
          document.getElementById("upgradInappTeamenterprise").style.display = "none";
    }
    catch{
    }
}

function closeUpgradeOverlayListeners(){
    try {

    document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none";
    try {
    document.getElementById("upgrade_model").style.display ="none"
    } catch(error){
        /* closing trial popup */
        var trialpopup = document.getElementById("trialpopup");
        trialpopup.style.opacity = 0;
        trialpopup.style.visibility = "hidden";
    }
//     document.getElementById("UpgradequalityFullHD").style.display ="none"
//     document.getElementById("Upgradequality2k").style.display ="none"
//     document.getElementById("Upgradequality4k").style.display ="none"
//     document.getElementById("Upgradestockfree").style.display ="none"
//     document.getElementById("Upgradestockstarter").style.display ="none"
//     document.getElementById("Upgradestockpro").style.display ="none"
//     document.getElementById("Upgradeccbfree").style.display ="none"
//     document.getElementById("Upgradeccbstarter").style.display ="none"
//     document.getElementById("Upgradeccbpro").style.display ="none"
//     document.getElementById("detailedUpgradePricingMenu").style.display ="none"
    document.getElementById("enterprise_modal").style.display ="none"

    try {
      Array.from(document.getElementsByClassName("demoform_error")).map((key,val)=>{ key.innerHTML=""; })
      document.getElementById("book_country_dropdown").style.display ="none"
      document.getElementById("book_city_dropdown").style.display ="none"
      document.getElementById("enterpriselicencedropdown").style.border ="transparent"
      document.getElementById("demoPurpose").setAttribute("value",'Select your purpose')
      document.getElementById("demoPurpose").setAttribute("data-val",'');
      document.getElementById("book_a_demo_modal").style.display ="none"
    }
    catch(error) {

    }

    document.getElementById("detaileddowngradeMenu").style.display ="none"
    document.getElementById("cancelSubscriptionBlock").style.display ="none"
    document.getElementById("cancelSubscriptionBlockDowngrade").style.display ="none"

    document.getElementById("Upgradevoiceapppro").style.display ="none"
    document.getElementById("Upgradevoiceappenterprise").style.display ="none"


    // Reseting Fields
    document.getElementById("cardNumberPlanUpgrade").value = ""
    document.getElementById("expiryDatePlanUpgrade").value =""
    document.getElementById("cardCvvPlanUpgrade").value = ""
    document.getElementById("zip-code-val").value = ""


    document.getElementsByClassName("onselecting-plan")[1].classList.add("selected-plan");
    document.getElementsByClassName("onselecting-plan")[0].classList.remove("selected-plan");

    document.getElementById("downgradePlaninMyPlans").innerHTML ="";

    // enabling pointer events again on Monthly and yearly boxes
    document.getElementsByClassName("onselecting-plan")[0].classList.remove("maskedMonthly");
    document.getElementsByClassName("onselecting-plan")[1].classList.remove("maskedMonthly");

    document.getElementById("updradePlanNow").removeEventListener("click", webPaymentDowngradeHandler, true)

    document.getElementById("displaycarderrors").innerHTML = ""

    document.getElementById("updradePlanNow").removeEventListener("click", webPaymentUpgradeHandler, false )
    document.getElementById("updradePlanNow").removeEventListener("click", inAppPaymentUpgrade, false )

    document.getElementsByClassName("monthly-details")[0].style.display = "block";
    document.getElementsByClassName("yearly-details")[0].setAttribute("id","SelectedYearlyPricingPlan")

     document.getElementById("enterpriceUsername").value= ""
     document.getElementById("enterpriceCompanyEmail").value =""
     document.getElementById("enterpricePhoneNo").value =""

     document.getElementById("enterpriselicence_dropdown_block").style.display = "none"


      Array.from(document.getElementsByClassName("supportinput")).map((key,val)=>{ key.style=""; })

      Array.from(document.getElementsByClassName("enterpriseform_error")).map((key,val)=>{ key.innerHTML=""; })

      Array.from(document.getElementsByClassName("upgradePayment_free_popup")).map((key,val)=>{ key.style.display="none"; })
      Array.from(document.getElementsByClassName("upgradePayment_starter_popup")).map((key,val)=>{ key.style.display="none"; })
      Array.from(document.getElementsByClassName("upgradePayment_pro_popup")).map((key,val)=>{ key.style.display="none"; })

      document.getElementsByClassName("discount_coupen_show")[0].removeAttribute("style")
}
catch(error){
      
}
}


function changeCardDetails(data){

    return new Promise(function(resolve, reject) {
          url = redirecturlserver+'/p/pc/';
          data='e='+btoa(data.teamId)+'&a='+btoa(data.cardNo)+'&b='+btoa(data.cardExpiry)+'&c='+btoa(data.cardCvv)+'&d='+btoa(data.zipCode)

          fbajaxcall(url,data,null).then(function(result) {
                resolve(result)

          }, function(error) {

                reject(error)
          })
    });
}

function checkExportCount(userid,teamId,projectId){

    return new Promise(function(resolve, reject) {

          url = redirecturlserver+'/exp/vc/';

          data='userId='+userid+'&teamId='+teamId+'&projectId='+projectId

          // data=JSON.stringify({'userId':userid,'teamId':teamId,'projectId':projectId})

          fbajaxcall(url,data,null).then(function(result) {

                resolve(result)
          }, function(error) {

                reject(error)
          })
    });

}

function subCheckExportCount(userid,teamId,projectId){

      return new Promise(function(resolve, reject) {
  
            url = redirecturlserver+'/sub/vc/';
  
            data='userId='+userid+'&teamId='+teamId+'&projectId='+projectId
  
            // data=JSON.stringify({'userId':userid,'teamId':teamId,'projectId':projectId})
  
            fbajaxcall(url,data,null).then(function(result) {
  
                  resolve(result)
            }, function(error) {
  
                  reject(error)
            })
      });
  
  }


function exportVideo(data){
    return new Promise(async function(resolve, reject) {

          var respData
          var nounceurl = siteurl+"/payments/p/bt/gct/"
          if(data.exportType == 'youtube'){

            respData='underReview='+data.underReview+'&ppe='+data.ppe+'&isWatermark='+data.isWatermark+'&plan='+data.plan+'&exportType='+data.exportType+'&userId='+data.userId+'&teamId='+data.teamId+'&projectId='+data.projectId+'&dimensions='+data.presetId+'&format='+data.format+'&refreshToken='+data.refreshToken+'&socialId='+data.socialId+'&title='+data.title+'&description='+data.description+'&tags='+data.tag+'&renderType='+data.renderType+'&reviewScenes='+data.reviewScenes+'&appMode='+data.appMode+'&needGPU='+data.needGPU+'&privacyStatus='+data.privacyStatus

          }
          else if(data.exportType == 'facebook'){

            respData='underReview='+data.underReview+'&ppe='+data.ppe+'&isWatermark='+data.isWatermark+'&plan='+data.plan+'&exportType='+data.exportType+'&userId='+data.userId+'&teamId='+data.teamId+'&projectId='+data.projectId+'&dimensions='+data.presetId+'&format='+data.format+'&accessToken='+data.accessToken+'&socialId='+data.socialId+'&id='+data.id+'&title='+data.title+'&description='+data.description+'&renderType='+data.renderType+'&reviewScenes='+data.reviewScenes+'&appMode='+data.appMode+'&needGPU='+data.needGPU+'&privacyStatus='+data.privacyStatus

          }
          else if(data.exportType == 'show') {
            respData = 'underReview='+data.underReview+'&ppe='+data.ppe+'&isWatermark='+data.isWatermark+'&plan='+data.plan+'&exportType='+data.exportType+'&userId='+data.userId+'&teamId='+data.teamId+'&projectId='+data.projectId+'&dimensions='+data.presetId+'&format='+data.format+'&title='+data.title+'&renderType='+data.renderType+'&reviewScenes='+data.reviewScenes+'&appMode='+data.appMode+'&needGPU='+data.needGPU+'&description='+data.description+'&ownerId='+data.ownerId+'&tags='+data.tag+'&accessToken='+data.accessToken+'&socialId='+data.socialId+'&privacyStatus='+data.privacyStatus
          }
      
            else if(data.exportType == 'SVdownload') {
                  respData = 'underReview='+data.underReview+'&ppe='+data.ppe+'&isWatermark='+data.isWatermark+'&plan='+data.plan+'&exportType='+data.exportType+'&userId='+data.userId+'&teamId='+data.teamId+'&projectId='+data.projectId+'&dimensions='+data.presetId+'&format='+data.format+'&title='+data.title+'&renderType='+data.renderType+'&reviewScenes='+data.reviewScenes+'&appMode='+data.appMode+'&needGPU='+data.needGPU+'&description='+data.description+'&ownerId='+data.ownerId+'&tags='+data.tag+'&accessToken='+data.accessToken+'&socialId='+data.socialId
            }

           else if(data.exportType == 'twitter'){

             respData='ppe='+data.ppe+'&isWatermark='+data.isWatermark+'&plan='+data.plan+'&exportType='+data.exportType+'&userId='+data.userId+'&teamId='+data.teamId+'&projectId='+data.projectId+'&dimensions='+data.presetId+'&format='+data.format+'&accessToken='+data.accessToken+'&socialId='+data.socialId+'&accessTokenSecret='+data.accessTokenSecret+'&description='+data.description+'&title='+data.title+'&appMode='+data.appMode+'&needGPU='+data.needGPU+'&privacyStatus='+data.privacyStatus

           }
      //     else if(data.exportType == 'linkedin'){

      //       respData='ppe='+data.ppe+'&isWatermark='+data.isWatermark+'&plan='+data.plan+'&exportType='+data.exportType+'&userId='+data.userId+'&teamId='+data.teamId+'&projectId='+data.projectId+'&dimensions='+data.presetId+'&format='+data.format+'&accessToken='+data.accessToken+'&socialId='+data.socialId+'&refreshToken='+data.refreshToken+'&description='+data.description+'&title='+data.title

      //     }
          else {

            respData='underReview='+data.underReview+'&ppe='+data.ppe+'&isWatermark='+data.isWatermark+'&plan='+data.plan+'&exportType='+data.exportType+'&userId='+data.userId+'&teamId='+data.teamId+'&projectId='+data.projectId+'&dimensions='+data.presetId+'&format='+data.format+'&title='+data.title+'&renderType='+data.renderType+'&reviewScenes='+data.reviewScenes+'&appMode='+data.appMode+'&needGPU='+data.needGPU+'&aiProject='+data.aiProject+'&isTransparent='+data.isTransparent+'&privacyStatus='+data.privacyStatus

          }


            if(data.payWithCard == true){

                  respData += '&a='+btoa(data.cardNumber)+'&b='+btoa(data.expDate)+'&c='+btoa(data.cvv)+'&d='+btoa(data.zipCode)
                  var routeurl = redirecturlserver+'/paydownload';
            }
            else{
                if(data.videoTool == true){
                  respData='underReview='+data.underReview+'&ppe='+data.ppe+'&isWatermark='+data.isWatermark+'&plan='+data.plan+'&exportType=VTdownload'+'&userId='+data.userId+'&teamId='+data.teamId+'&projectId='+data.projectId+'&dimensions='+data.presetId+'&format='+data.format+'&title='+data.title+'&renderType='+data.renderType+'&reviewScenes='+data.reviewScenes+'&appMode='+data.appMode+'&needGPU='+data.needGPU+'&tool='+data.tool+'&privacyStatus='+data.privacyStatus
                  var routeurl = redirecturlserver+'/exportVideo';

                }
                  else{
                        var routeurl = redirecturlserver+'/exportVideo';
                  }
            }
            if (data.exportType == 'SVdownload'){
                  var routeurl = redirecturlserver+'/sub/exportVideo';
            }
              if (data.pm == '0' && parseInt(data.totalAmount) > '0' && data.isWatermark=='0'){
                    btcreate()
                  
                  }
              else{
            exportvideocall(routeurl,respData,null).then(function(result) {

                  resolve(result)

                  result1 = JSON.parse(result)
                  result2 = result
                  if (data.pm == '2' && parseInt(data.totalAmount) > '0' && data.isWatermark == '0'){
                    var options = {
                          "name": "Animaker Inc.",
                          "image": "https://static.animaker.com/icons/animaker-logo-new1.png",
                          "key": result1["key_id"],
                          "amount": result1["totalamount"],
                          "currency": "INR",
                          "order_id": result1["order_id"],
                          "callback_url": result1["callback_url"],
                          "prefill": {
                                "email": result1["email"]
                          },
                          config: {
                                display: {
                                  hide: [
                                    {
                                      method: 'netbanking'
                                    },
                                    {
                                      method: 'wallet'
                                    },
                                    {
                                      method: 'paylater'
                                    }
                                  ],
                                },
                          },
                    }
                    var rzp = new Razorpay(options);
                    rzp.open();
                }

                  if(result1['result'] == true && result1['type'] == "VT"){
                        var resizedata = 'tool='+data.tool+'&exportId='+result1['exportId']

                        var resize = uploadApiUrl+"/upload/resizevideo/";

                        exportvideocall(resize,resizedata ,null).then(function(result) {

                              resolve(result2)
                        })
                  }

                  if(result["error"] && result['data'] && result['data']['pastdue'] == true && ext1 != 'brand'){
                        pastduepopup(teamId, "download").then(function(result){
                              resolve(result)

                        }, function(error) {
                              reject(error)
                        })
                  }
            }, function(error) {

                  reject(error)
            })
      }
              async function btcreate(){
                    result = await getajaxCall(nounceurl, null);
                    var res =  JSON.parse(result)      
                    console.log("gettoken",result)
                    
                    if(!result['error']){  
                          appgetnewnonce()
                          authorizationtoken = res['client_token']
                          braintreeCreate(authorizationtoken)
                    }
  
              }
              async function gnewtoken(){
                    console.log("getnewtoken")
                    nounceurl = siteurl+"/payments/p/bt/gctrn/"
                    result =  await getajaxCall(nounceurl, null)
                    console.log('result',result)
                    var res =  JSON.parse(result)
                    if(!result['error']){
                    console.log("inside callback")  
                    authorizationtoken = res['client_token']
                    appgetnewnonce()
                    braintreeCreate(authorizationtoken)
                    ////console.log('authorizationtoken',authorizationtoken)
                    
        
                    }
              }
              
              function braintreeCreate(authorizationtoken){
                    console.log("braintreecreate")
                    braintree.client.create({
                          authorization: authorizationtoken
                    }, function (clientErr, clientInstance) {
                          //console.log('clientInstance',clientInstance)
                          if (clientErr) {
                          console.log("clientErr",clientErr);
                          gnewtoken()
                         
                          return;
                          }
                          braintree.threeDSecure.create({
                                version: 2, // Will use 3DS2 whenever possible
                                client: clientInstance,
                                
                                }, function (threeDSecureErr,appthreeDSecureInstance){
                                appthreeDSecureInstance.on('customer-canceled', function () {
                                      console.log(appthreeDS)
                                appgetnewnonce()

                                });   
                                if (threeDSecureErr){
                                        console.log('3d',threeDSecureErr)
                                        usererrMsg = pgettext("NetworkError-NoticationMessage","Something went wrong. Please contact support.")
                                        reject(usererrMsg)}
                                appthreeDS = appthreeDSecureInstance;
                                console.log(appthreeDS)
                                document.getElementById("app-overlay").style.display = "block";
                                document.getElementById("app-overlay").style.zIndex = "2000";
                                document.getElementById("app-overlay").style.backgroundColor = "rgba(0,0,0,0.5)";
                                document.getElementById("app-overlay").style.backgroundImage = "url(https://static.animaker.com/animapp-static/images/chr-loading.gif)";
                                document.getElementById("app-overlay").style.backgroundPosition = "center";
                                document.getElementById("app-overlay").style.backgroundRepeat = "no-repeat";
                                setTimeout(function() {
                                    appthreeDS.verifyCard({
                                          onLookupComplete: function (data) {
                                                appthreeDS.initializeChallengeWithLookupResponse(data).then(function (payload) {
                                                      var verifyStatus = payload. threeDSecureInfo.status;
                                                      var enrolled = payload. threeDSecureInfo. enrolled;
                                                      console.log('3DS',verifyStatus,enrolled)
                                                      nouncetk = payload.nonce;
                                                      console.log('payload.liabilityShifted',payload.liabilityShifted)
                                                      if (enrolled == 'Y'){
                                                      if (payload.liabilityShifted){
                                                            console.log('through3ds')
                                                            // brainTreePaymentListener(e);
                                                            exportscacall()
                                                      } else {
                                                            var e={'details':{'originalError':{'details':{'originalError':{'error':{'message':"1050"}}}}}}
                                                            verifyErr(e);
                                                            appthreeDS.cancelVerifyCard(function (err, verifyPayload) {
                                                                  if (err) {
                                                                  console. log(err.message); // No verification payload available
                                                                  return;}
                                                                  });
                                                      }
                                                      } else{
                                                      console.log('throughnormal')
                                                      //   brainTreePaymentListener(e);
                                                      exportscacall()
                                                      }
                                                      });
                                                },
                                                
                                                amount:data.totalAmount,
                                                nonce:appThreeDSnonce,
                                                bin:appThreeDSbin,
                                                challengeRequested:true
                                          },function(e,res){verifyErr(e,res)});
                                    }, 3000);
                                
                                
                                 });
                                 
                    })
                    
                    }
                    function verifyErr(e, res){
                          errorMsg = 'Something went wrong.'
                          console.log(e,res)
                          try {
                                errorMsg = e.details.originalError.details.originalError.error.message;
                          } catch {
                                errorMsg = e.details.originalError.code;
                                errorMsg += ': ' + e.details.originalError.description;
                          }
                          if (errorMsg.includes('1050')) {
                                errorMsg = 'Card authentication failed. Please try with different card or payment mode. '
                          } else if (errorMsg.includes('Unsupported card type')) {
                              errorMsg = 'Your card is not supported. Please try again with different payment mode.'
                          }
                          try {
                              usererrMsg = pgettext("NetworkError-NoticationMessage","Something went wrong. Please contact support.")
                              reject(usererrMsg)
                               
                          } catch { }
                         
                      }
                    
                    
                
  
                          
              function appgetnewnonce(){
                    $.ajax({
                    url: siteurl+"/payments/p/bt/gnn/",
                    mode: 'cors',
                    withCredentials: false, 
                    headers: { 'Access-Control-Allow-Origin': '*', "X-CSRFToken": csrftoken},
                    xsrfHeaderName: "X-CSRFToken",
                    type: 'get',
                    data: {'teamid':teamid},
                    success: function(result){
                          if(!result['error']){          
  
                                appThreeDSnonce = result['nonce']
                                appThreeDSbin=result['bin']
                                console.log('newnoncebin',appThreeDSnonce,appThreeDSbin)
                                // braintreeCreate(authorizationtoken)
              
                          }
              
              
              
                    }
                    
                    })
              }   
  
              function exportscacall(){
                  respData=respData+'&nonce='+nouncetk
                    exportvideocall(routeurl,respData,null).then(function(result) {
        
                          resolve(result)
                          document.getElementById("app-overlay").style.display = "none";
                          result1 = JSON.parse(result)
                          result2 = result
                          if(result1['result'] == true && result1['type'] == "VT"){
                                var resizedata = 'tool='+data.tool+'&exportId='+result1['exportId']
        
                                var resize = uploadApiUrl+"/upload/resizevideo/";
        
                                exportvideocall(resize,resizedata ,null).then(function(result) {
        
                                      resolve(result2)
                                })
                          }
        
                          if(result["error"] && result['data'] && result['data']['pastdue'] == true && ext1 != 'brand'){
                                pastduepopup(teamId, "download").then(function(result){
                                      resolve(result)
        
                                }, function(error) {
                                      reject(error)
                                })
                          }
                    }, function(error) {
        
                          reject(error)
                    })}
              
  
    });

}

function  fbajaxcall(url,data,uid,callbackchannelsget){

    return new Promise(function(resolve, reject) {
          var xhttp;
          xhttp = new XMLHttpRequest();
          xhttp.open("POST", url, true);
          xhttp.setRequestHeader( "Access-Control-Allow-Origin", '*' );
          xhttp.setRequestHeader( "Access-Control-Allow-Credentials", "true" );
          xhttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
          xhttp.setRequestHeader("X-CSRFToken", csrftoken );
          xhttp.send(data);
          xhttp.onreadystatechange = function() {
          if (this.readyState == 4 ){

                if(this.status == 200) {

                      if(uid == null){
                            resolve(xhttp.responseText);
                      }else{
                            callbackchannelsget(uid).then(function(result) {
                                  resolve(result);
                            })
                      }

                  }else if (this.status == 512){
                        
                        resultjson = JSON.parse(xhttp.responseText)
                        if (resultjson.message ==  "Oauth Authentication Required"){
                              sessionExpired();
                        }
                  }else if(this.status == 513){
                        // OLD LOGOUT FLOW
                        window.location.href = siteurl+"/logout"; 
                  }else{
                      var usererrMsg
                      if(this.status == 0 ){
                          usererrMsg = pgettext("NetworkError-NoticationMessage","Please check your internet connection and retry.")
                      }
                      else if(this.status == 500){
                          usererrMsg = pgettext("NetworkError-NoticationMessage","Internal server error. Please try again later.")
                      }
                      else if(this.status == 400 || this.status == 408){
                          usererrMsg = pgettext("NetworkError-NoticationMessage","Something went wrong. Please try again")
                      }
                      else if(this.status == 403){
                          usererrMsg = pgettext("NetworkError-NoticationMessage","Something went wrong. Try logging in again.")
                      }

                      reject(usererrMsg)
                }
          }

          };

    });

}


function  exportvideocall(routeurl,data,uid,callbackchannelsget){

    return new Promise(function(resolve, reject) {

        var allowedOrigins = ["https://dev-progrz.animaker.com", "https://snbx.animaker.com","https://app.animaker.com"]
      origin = routeurl.split(".com")[0]+".com"

        var xhttp;
        xhttp = new XMLHttpRequest();
        xhttp.open("POST", routeurl, true);

        if (allowedOrigins.includes(origin)) {
            xhttp.setRequestHeader( "Access-Control-Allow-Origin", '*' );
            xhttp.setRequestHeader( "Access-Control-Allow-Credentials", "false" );
            xhttp.setRequestHeader("X-CSRFToken", csrftoken );
        }

        xhttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

        xhttp.send(data);
        xhttp.onreadystatechange = function() {
        if (this.readyState == 4 ){

                if(this.status == 200) {

                      if(uid == null){
                            resolve(xhttp.responseText);
                      }else{
                            callbackchannelsget(uid).then(function(result) {
                                  resolve(result);
                            })
                      }

                  }else if (this.status == 512){
                        resultjson = JSON.parse(xhttp.responseText)
                        if (resultjson.message ==  "Oauth Authentication Required"){
                              sessionExpired();
                        }
                  }else if(this.status == 513){
                        // OLD LOGOUT FLOW
                        window.location.href = siteurl+"/logout"; 
                  }else{
                      var usererrMsg
                      if(this.status == 0 ){
                          usererrMsg = pgettext("NetworkError-NoticationMessage","Please check your internet connection and retry.")
                      }
                      else if(this.status == 500){
                          usererrMsg = pgettext("NetworkError-NoticationMessage","Internal server error. Please try again later.")
                      }
                      else if(this.status == 400 || this.status == 408){
                          usererrMsg = pgettext("NetworkError-NoticationMessage","Something went wrong. Please try again")
                      }
                      else if(this.status == 403){
                          usererrMsg = pgettext("NetworkError-NoticationMessage","Something went wrong. Try logging in again.")
                      }

                      reject(usererrMsg)
                }
          }

          };

    });

}


function  postuploadcall(routeurl,data,uid,callbackchannelsget){

      return new Promise(function(resolve, reject) {

            // origin = routeurl.split(".com")[0]+".com"

            var xhttp;
            xhttp = new XMLHttpRequest();
            xhttp.withCredentials = true;

            xhttp.open("POST", routeurl, true);

            xhttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

            xhttp.send(data);
            xhttp.onreadystatechange = function() {
            if (this.readyState == 4 ){

                        if(this.status == 200) {

                              if(uid == null){
                                    resolve(xhttp.responseText);
                              }else{
                                    callbackchannelsget(uid).then(function(result) {
                                          resolve(result);
                                    })
                              }

                  }else if (this.status == 512){
                        resultjson = JSON.parse(xhttp.responseText)
                        if (resultjson.message ==  "Oauth Authentication Required"){
                              sessionExpired();
                        }
                  }else if(this.status == 513){
                        // OLD LOGOUT FLOW
                        window.location.href = siteurl+"/logout"; 
                  }else{
                              var usererrMsg
                              if(this.status == 0 ){
                              usererrMsg = pgettext("NetworkError-NoticationMessage","Please check your internet connection and retry.")
                              }
                              else if(this.status == 500){
                              usererrMsg = pgettext("NetworkError-NoticationMessage","Internal server error. Please try again later.")
                              }
                              else if(this.status == 400 || this.status == 408){
                              usererrMsg = pgettext("NetworkError-NoticationMessage","Something went wrong. Please try again")
                              }
                              else if(this.status == 403){
                              usererrMsg = pgettext("NetworkError-NoticationMessage","Something went wrong. Try logging in again.")
                              }

                              reject(usererrMsg)
                        }
                  }

                  };

      });

  }


function fb_login(userid){

  return new Promise(function(resolve, reject) {

          url = redirecturlserver+'/fb/pc';
          data = 'userid='+userid

          fbajaxcall(url,data,null,null).then(function(result) {

                if(result == 0){
                      FB.login(function(response) {
                            if (response.authResponse) {

                                  FB.api('/me/permissions', function(res) {
                                        var declined = [];
                                        for (i = 0; i < res.data.length; i++) {
                                          if (res.data[i].status == 'declined') {
                                            declined.push(res.data[i].permission)
                                          }
                                        }

                                        if( declined.length == 0 ){
                                              access_token = response.authResponse.accessToken; //get access token
                                              user_id = response.authResponse.userID; //get FB UID

                                              url = redirecturlserver+'/fb/aap/';
                                              data='accessToken='+response.authResponse['accessToken']+'&userId='+response.authResponse['userID']+'&userid='+userid

                                              fbajaxcall(url,data,userid,facebook_pagelist).then(function(result) {

                                                    resolve(result)

                                              }, function(error) {

                                                    reject(error)
                                              })

                                        }
                                        else{
                                              result = JSON.stringify({'error':true ,'errorMsg': pgettext("youtubeExport-NoticationMessage","You have declined permissions for")+declined.toString()+pgettext("youtubeExport-NoticationMessage",",Please try again by accepting the permissions.") })

                                              resolve(result)
                                        }
                                  });

                                  // FB.api('/me', function(response) {
                                  //
                                  //       user_email = response.email;
                                  // });

                            } else {
                                  //user hit cancel button

                                  reject("User cancelled authentication")

                            }
                      }  ,
                      {
                      //   scope: 'publish_stream,email'
                      scope: 'email,public_profile,manage_pages,publish_pages'
                      });
                }
                else{
                      facebook_pagelist(userid).then(function(result) {

                            resolve(result)

                      }, function(error) {

                            reject(error)
                      })

                }

          }, function(error) {

                reject(error)
          })


    })


}
// End of fblogin fun

// (function() {
//   var e = document.createElement('script');
//   e.src = document.location.protocol + '//connect.facebook.net/en_US/sdk.js';
//   e.async = true;
//   document.getElementById('fb-root').appendChild(e);
// }());



// Add more pages button click event fun

function fbaddmorepagesbtn(userid){

return new Promise(function(resolve, reject) {

    FB.login(function(response) {
          if (response.authResponse) {

                FB.api('/me/permissions', function(res) {
                      var declined = [];
                      for (i = 0; i < res.data.length; i++) {
                        if (res.data[i].status == 'declined') {
                          declined.push(res.data[i].permission)
                        }
                      }

                      if( declined.length == 0 ){
                            access_token = response.authResponse.accessToken; //get access token
                            user_id = response.authResponse.userID; //get FB UID

                            url = redirecturlserver+'/fb/aap/';
                            data='accessToken='+response.authResponse['accessToken']+'&userId='+response.authResponse['userID']+'&userid='+userid

                            fbajaxcall(url,data,userid,facebook_pagelist).then(function(result) {

                                  resolve(result)

                            }, function(error) {

                                  reject(error)
                            })

                            }
                      else{
                            result = JSON.stringify({'error':true ,'errorMsg': declined })

                            resolve(result)
                      }
                });


                // FB.api('/me', function(response) {
                //
                //        user_email = response.email;
                // });

          } else {
                //user hit cancel button

                reject("User cancelled authentication")
          }
    }  ,
    {

    scope: 'email,public_profile,manage_pages,publish_pages'
    });

})

}


function facebook_pagelist(userid){
return new Promise(function(resolve, reject) {

    url = redirecturlserver+'/fb/gal/';
    data = 'userid='+userid
    fbajaxcall(url,data,null,null).then(function(result) {
          resolve(result)
    }, function(error) {

          reject(error)
    })

})


}

function deletefacebookpage(userid,pageid){

    return new Promise(function(resolve, reject) {
          var msg = confirm("Are you sure. You want to remove this facebook page? ");

          if(msg == true)
          {

                url = redirecturlserver+'/fb/pdel/';
                data = 'userid='+userid+'&fbpageid='+pageid
                fbajaxcall(url,data,userid,facebook_pagelist).then(function(result) {

                      resolve(result)
                }, function(error) {

                      reject(error)
                })


          }

    })
}



//  End of FB export

// Youtube Export Here

function googleauthenticate(userid){

    return new Promise(function(resolve, reject) {

            url = redirecturlserver+'/yt/cc';
            data = 'userid='+userid

            fbajaxcall(url,data,null,null).then(function(result) {

                  if(result == 0){

                              _url = redirecturlserver+'/yt/authenticate';
                              var win = window.open(_url , "Youtube",'width=500, height=600');
                              REDIRECT = redirecturlserver+'/yt/ac';

                               var pollTimer   =   window.setInterval(function() {

                                    if (win.document.URL.indexOf(REDIRECT) != -1){

                                        win.close();

                                        if (win.closed)
                                              {
                                                    window.clearInterval(pollTimer);
                                                    channelurl = redirecturlserver+"/yt/vc"
                                                    fbajaxcall(channelurl,null,null,null) .then(function(result) {

                                                          res = JSON.parse(result);

                                                          if(res == "ChannelExists"){

                                                                youtubechannels(userid).then(function(result) {
                                                                      resolve(result)
                                                                })
                                                          }
                                                          else if(res == "ChannelNotExists"){
                                                                  result = JSON.stringify({"error":true ,"errorMsg": pgettext("youtubeExport-NoticationMessage","No Channel Exists") })
                                                                  resolve(result)
                                                           }
                                                           else{
                                                                  result = JSON.stringify({"error":true ,"errorMsg": res })
                                                                  resolve(result)
                                                            }
                                                    }, function(error) {

                                                          reject(error)
                                                    })

                                              }


                                    }
                                    else if (win.document.URL.indexOf(redirecturlserver+"/oauth2callback/?error=access_denied") != -1){
                                          window.clearInterval(pollTimer);
                                          win.close();

                                          // var fullUrl = new URL(window.location.href);
                                          // var params = new URLSearchParams(fullUrl.search.slice(1));
                                          result = JSON.stringify({"error":true ,"errorMsg": pgettext("youtubeExport-NoticationMessage","Access denied") })
                                          resolve(result)

                                    }

                              });

                  }
                  else{

                        youtubechannels(userid).then(function(result) {
                              resolve(result)
                        }, function(error) {

                              reject(error)
                        })

                  }

             }, function(error) {

                  reject(error)
            })

    })

}

function googleauthenticatebtn(userid, yt_retry=false){

return new Promise(function(resolve, reject) {

    _url = redirecturlserver+'/yt/authenticate';
    var win = window.open(_url , "Youtube",'width=500, height=600');
    REDIRECT = redirecturlserver+'/yt/ac';

    var pollTimer   =   window.setInterval(function() {

          if (win.document.URL.indexOf(REDIRECT) != -1){

                win.close();

                if (win.closed)
                      {
                            window.clearInterval(pollTimer);

                            channelurl = redirecturlserver+"/yt/vc"

                            fbajaxcall(channelurl,null,null,null) .then(function(result) {

                                  res = JSON.parse(result);
                                  if(res == "ChannelExists"){
                                        youtubechannels(userid).then(function(result) {
                                                resolve(result)
                                                if(yt_retry == 'true'){
                                                    json_resp = JSON.parse(result);
                                                    for (var i=0; i<json_resp["result"].length; i++) {
                                                        if (sId == json_resp["result"][i]["socialId"]){
                                                        exportajaxcalls(siteurl+'/retryExportDownload?exportId='+exportId ).then(function(result){
                                                            if(!result["error"]){
                                                                location.reload();
                                                            }
                                                            else{
                                                                $("#NotificationbarMessage").html(result["errorMsg"])
                                                                $('.Notification_popupbar').fadeIn();
                                                                successfade();
                                                            }
                                                            }, function(error) {

                                                            })
                                                        }
                                                    }
                                                }

                                        })
                                  }
                                  else{
                                        result = JSON.stringify({"error":true ,"errorMsg": pgettext("youtubeExport-NoticationMessage","No Channel Exists") })
                                        resolve(result)
                                  }
                            }, function(error) {

                                  reject(error)
                            })

                      }


          }
          else if (win.document.URL.indexOf(redirecturlserver+"/oauth2callback/?error=access_denied") != -1){
                window.clearInterval(pollTimer);
                win.close();

                // var fullUrl = new URL(window.location.href);
                // var params = new URLSearchParams(fullUrl.search.slice(1));
                result = JSON.stringify({"error":true ,"errorMsg": pgettext("youtubeExport-NoticationMessage","Access denied") })
                resolve(result)

          }

    });

})

}


function youtubechannels(userid){

    return new Promise(function(resolve, reject) {

          url = redirecturlserver+'/yt/gcl/';
          data = 'userid='+userid
          fbajaxcall(url,data,null,null) .then(function(result) {

                resolve(result)

          }, function(error) {

                reject(error)
          })

    })

}

function deleteyoutube(userid,channelid){

    return new Promise(function(resolve, reject) {
          var msg = confirm("Are you sure. You want to delete Youtube Channel? ");
          if(msg == true)
          {

                url = redirecturlserver+'/yt/cdel/';
                data = 'userid='+userid+'&channelid='+channelid
                fbajaxcall(url,data,userid,youtubechannels).then(function(result) {

                      resolve(result)

                }, function(error) {

                      reject(error)
                })


              }

    })

}

// show

function show_login(userid){

      return new Promise(function(resolve, reject) {
    
            url = redirecturlserver+'/show/ac/';
            data = 'userid='+userid
            var responseData = {}
              fbajaxcall(url,data,null,null).then(function(result) {
                        if(result == 0){
                              var random=(Math.random() + 1).toString(36).substring(7);
                              _url = redirecturlserver+'/show/authenticate?random='+random;
                              window.open(_url , "Show",'width=500, height=600');
                              var eventList  = function(e) {
                                    responseData = e.data
                                    if(responseData['error'] != "false"){
                                        if(responseData['message']['random']==random)
                                          {
                                                random=0;
                                                addshow(responseData['message']['accesstoken'],responseData['message']['userid'],responseData['message']['showid'],responseData['message']['firstname'],userid).then(function(result) {
                                                resolve(result)
                                                })
                                          }
                                    }
                                    else {
                                          result = JSON.stringify({"error":true ,"errorMsg": "No Channel Exists" })
                                          resolve(result)
                                    }
                                    window.removeEventListener('message',eventList,false); 
                              } 
                              if(listenr_status)
                              {
                                    window.removeEventListener('message',eventList,false);
                                    console.log("listenr status"+listenr_status);
                              }
                              listenr_status=1;
                              window.addEventListener('message', eventList, false);
                    }
                    else{
                        showaccountslist(userid).then(function(result) {
    
                                resolve(result)
    
                          }, function(error) {
    
                                reject(error)
                          })
    
                    }
    
              }, function(error) {
    
                    reject(error)
              })
    
    
        })
    
    
    }
function addshow(accesstoken,userid,showid,firstname,userid){
      return new Promise(function(resolve, reject) {
            url = redirecturlserver+'/show/aap/';
            data = 'accesstoken='+accesstoken+'&userid='+userid+'&showid='+showid+'&username='+firstname
            fbajaxcall(url,data,userid,showaccountslist).then(function(result) {
                  resolve(result)  
            }, function(error) {

                  reject(error)
            })
      })
  }

function show_loginbtn(userid){
      var responseData = {}
      return new Promise(function(resolve, reject) {
            var random=(Math.random() + 1).toString(36).substring(7);
            _url = redirecturlserver+'/show/authenticate?random='+random;
            window.open(_url , "Show",'width=500, height=600');
            var eventList  = function(e) {
                  responseData = e.data
                  if(responseData['error'] != "false"){
                    if(responseData['message']['random']==random)
                    {
                            random=0;
                            addshow(responseData['message']['accesstoken'],responseData['message']['userid'],responseData['message']['showid'],responseData['message']['firstname'],userid).then(function(result) {
                            resolve(result)
                        })
                    }
                  }
                  else {
                        result = JSON.stringify({"error":true ,"errorMsg": "No Channel Exists" })
                        resolve(result)
                  }
                  window.removeEventListener('message',eventList,false); 
            } 
            if(listenr_status)
            {
                  window.removeEventListener('message',eventList,false);
                  console.log("listenr status"+listenr_status);
            }
            listenr_status=1;
            window.addEventListener('message', eventList, false);
      })
}

function deleteshow(userid,showuserid){

      return new Promise(function(resolve, reject) {
            var msg = confirm("Are you sure. You want to delete show Account? ");
            if(msg == true)
            {
  
                  url = redirecturlserver+'/show/adel/';
                  data = 'userid='+userid+'&showuserid='+showuserid
                  fbajaxcall(url,data,userid,showaccountslist).then(function(result) {
  
                        resolve(result)
  
                  }, function(error) {
  
                        reject(error)
                  })
  
  
                }
  
      })
  
  }

  function showaccountslist(userid){

      return new Promise(function(resolve, reject) {
  
            url = redirecturlserver+'/show/gal/';
            data = 'userid='+userid
            fbajaxcall(url,data,null,null) .then(function(result) {
  
                  resolve(result)
  
            }, function(error) {
  
                  reject(error)
            })
  
      })
  
  }


// vmaker account integration 
function vmaker_login(userid){

      return new Promise(function(resolve, reject) {
    
            url = redirecturlserver+'/vmaker/ac/';
            data = 'userid='+userid
            var responseData = {}
              fbajaxcall(url,data,null,null).then(function(result) {
                        if(result == 0){
                              var random=(Math.random() + 1).toString(36).substring(7);
                              _url = redirecturlserver+'/vmaker/authenticate?random='+random;
                              window.open(_url , "Vmaker",'width=500, height=600');
                              var eventList  = function(e) {
                                    responseData = e.data
                                    console.log(responseData)
                                    if(responseData['error'] != "false"){
                                        if(responseData['message']['random']==random)
                                          {
                                                random=0;
                                                console.log(userid,responseData['message']['vmakerusername'],responseData['message']['vmakeruserid']);
                                                addvmaker(userid,responseData['message']['vmakerusername'],responseData['message']['vmakeruserid']).then(function(result) {
                                                resolve(result)
                                                })
                                          }
                                    }
                                    else {
                                          result = JSON.stringify({"error":true ,"errorMsg": "No Channel Exists" })
                                          resolve(result)
                                    }
                                    window.removeEventListener('message',eventList,false); 
                              } 
                              if(listenr_status)
                              {
                                    window.removeEventListener('message',eventList,false);
                                    console.log("listenr status"+listenr_status);
                              }
                              listenr_status=1;
                              window.addEventListener('message', eventList, false);
                    }
                    else{
                        vmakeraccountslist(userid).then(function(result) {
    
                                resolve(result)
    
                          }, function(error) {
    
                                reject(error)
                          })
    
                    }
    
              }, function(error) {
    
                    reject(error)
              })
    
    
        })
    
    
    }

function addvmaker(userid,firstname,vmakeruserid){
      return new Promise(function(resolve, reject) {
            url = redirecturlserver+'/vmaker/aap/';
            data = 'userid='+userid+'&vmakeruserid='+vmakeruserid+'&username='+firstname;
            fbajaxcall(url, data, null).then(
                  async function (result) {
                  let res = JSON.parse(result);
                  if (res["exists"] != true) {
                        let results = await vmakeraccountslist(userid);
                        resolve(results);
                  }
                  resolve(result);
                  },
                  function (error) {
                  reject(error);
                  }
            );
      });
  }

function vmaker_loginbtn(userid){
      var responseData = {}
      return new Promise(function(resolve, reject) {
            var random=(Math.random() + 1).toString(36).substring(7);
            _url = redirecturlserver+'/vmaker/authenticate?random='+random;
            window.open(_url , "Vmaker",'width=500, height=600');
            var eventList  = function(e) {
                  responseData = e.data
                  if(responseData['error'] != "false"){
                    if(responseData['message']['random']==random)
                    {
                        random=0;
                        console.log(userid,responseData['message']['vmakerusername'],responseData['message']['vmakeruserid']);
                        addvmaker(userid,responseData['message']['vmakerusername'],responseData['message']['vmakeruserid']).then(function(result) {
                        resolve(result)
                        })
                    }
                  }
                  else {
                        result = JSON.stringify({"error":true ,"errorMsg": "No Channel Exists" })
                        resolve(result)
                  }
                  window.removeEventListener('message',eventList,false); 
            } 
            if(listenr_status)
            {
                  window.removeEventListener('message',eventList,false);
                  console.log("listenr status"+listenr_status);
            }
            listenr_status=1;
            window.addEventListener('message', eventList, false);
      })
}

function deletevmaker(userid,vmakeruserid){

      return new Promise(function(resolve, reject) {
            var msg = confirm("Are you sure. You want to delete vmaker Account? ");
            if(msg == true)
            {
  
                  url = redirecturlserver+'/vmaker/adel/';
                  data = 'userid='+userid+'&vmuserid='+vmakeruserid
                  fbajaxcall(url,data,userid,vmakeraccountslist).then(function(result) {
  
                        resolve(result)
  
                  }, function(error) {
  
                        reject(error)
                  })
  
  
                }
  
      })
  
  }

  function vmakeraccountslist(userid){

      return new Promise(function(resolve, reject) {
  
            url = redirecturlserver+'/vmaker/gal/';
            data = 'userid='+userid
            fbajaxcall(url,data,null,null) .then(function(result) {
  
                  resolve(result)
  
            }, function(error) {
  
                  reject(error)
            })
  
      })
  
  } 

// Twitter Export here

function twitterauthenticate(userid){

    return new Promise(function(resolve, reject) {

          url = redirecturlserver+'/twt/ac';
          data = 'userid='+userid

          fbajaxcall(url,data,null,null).then(function(result) {

                if(result == 0){

                      _url = redirecturlserver+'/twt/authenticate';
                      var win = window.open(_url , "Twitter",'width=500, height=600');
                      REDIRECT = redirecturlserver+'/twittercallback';

                      var pollTimer   =   window.setInterval(function() {
                            if (win.document.URL.indexOf(REDIRECT) != -1){

                                  win.close();

                                  if (win.closed){
                                              window.clearInterval(pollTimer);

                                              twitterlist(userid).then(function(result) {

                                                    resolve(result)

                                              }, function(error) {

                                                    reject(error)
                                              })

                                        }

                            }
                      });

                }

                else{

                      twitterlist(userid).then(function(result) {

                            resolve(result)

                      }, function(error) {

                            reject(error)
                      })

                }

          }, function(error) {

                reject(error)
          })

    });

}


function twitterauthenticatebtn(userid){
    return new Promise(function(resolve, reject) {
          _url = redirecturlserver+'/twt/authenticate';
          var win = window.open(_url , "Twitter",'width=500, height=600');
          REDIRECT = redirecturlserver+'/twittercallback';

          var pollTimer   =   window.setInterval(function() {
                if (win.document.URL.indexOf(REDIRECT) != -1){

                      win.close();

                      if (win.closed)
                            {
                                  window.clearInterval(pollTimer);

                                  twitterlist(userid).then(function(result) {

                                        resolve(result)

                                  }, function(error) {

                                        reject(error)
                                  })
                            }

                }
          })

    })

}


function twitterlist(userid){

    return new Promise(function(resolve, reject) {

          url = redirecturlserver+'/twt/gal/';
          data = 'userid='+userid
          fbajaxcall(url,data,null,null) .then(function(result) {
                resolve(result)
          }, function(error) {

                reject(error)
          })

    })

}


function deletetwitter(userid,twitter_id){

    return new Promise(function(resolve, reject) {

          var msg = confirm("Are you sure. You want to remove this Twitter Account? ");
          if(msg == true)
          {
                url = redirecturlserver+'/twt/adel/';
                data = 'userid='+userid+'&twitter_id='+twitter_id
                fbajaxcall(url,data,userid,twitterlist).then(function(result) {
                      resolve(result)
                }, function(error) {

                      reject(error)
                })

          }
    })
}

// Linkedin Export

function linkedinauthenticate(userid){

    return new Promise(function(resolve, reject) {

          url = redirecturlserver+'/acntcountlinkedin';
          data = 'userid='+userid

          fbajaxcall(url,data,null,null).then(function(result) {

                if(result == 0){

                            _url = redirecturlserver+"/linked_in";
                            var win = window.open(_url , "Linkedin",'width=500, height=600');
                            REDIRECT = redirecturlserver+"/linkedinauthorization";

                            var pollTimer   =   window.setInterval(function() {
                                  if (win.document.URL.indexOf(REDIRECT) != -1){
                                        win.close();

                                        if (win.closed){
                                              window.clearInterval(pollTimer);

                                              linkedinlist(userid).then(function(result) {
                                                    resolve(result)
                                              }, function(error) {
                                                    reject(error)
                                              })

                                        }

                                  }
                            });

                }
                else{

                      linkedinlist(userid).then(function(result) {
                            resolve(result)
                      }, function(error) {
                            reject(error)
                      })

                }
          }, function(error) {
                reject(error)
          })
    });
}


function linkedinauthenticateaddmore(userid){
 return new Promise(function(resolve, reject) {
    _url = redirecturlserver+"/linked_in";
    var win = window.open(_url , "Linkedin",'width=500, height=600');
    REDIRECT = redirecturlserver+"/linkedinauthorization";

    var pollTimer   =   window.setInterval(function() {
          if (win.document.URL.indexOf(REDIRECT) != -1){

                if (win.closed){
                      window.clearInterval(pollTimer);

                      linkedinlist(userid).then(function(result) {
                            resolve(result)
                      }, function(error) {
                            reject(error)
                      })

                }
                win.close();

          }
    })
});

}


function linkedinlist(userid){

    return new Promise(function(resolve, reject) {

          url = redirecturlserver+'/linkedinlist/';
          data = 'userid='+userid
          fbajaxcall(url,data,null,null) .then(function(result) {
                resolve(result)
          }, function(error) {
                reject(error)
          })

    })

}


function deletelinkedin(userid,linkedin_id){

    return new Promise(function(resolve, reject) {

          var msg = confirm("Are you sure. You want to remove this linkedin account? ");
          if(msg == true)
          {
                url = redirecturlserver+'/deletelinkedin/';
                data = 'userid='+userid+'&twitter_id='+linkedin_id
                fbajaxcall(url,data,userid,twitterlist).then(function(result) {
                      resolve(result)
                }, function(error) {
                      reject(error)
                })
          }

    })

}



/**  For credit card mask **/

function creditcardMask(){

      var $this = document.getElementById("cardNumberPlanUpgrade").value;

      var input = $this;

      input = input.replace(/[\W\s\._\-]+/g, '');
      var split = 4;
      var chunk = [];

      for (var i = 0, len = input.length; i < len; i += split) {
          chunk.push( input.substr( i, split ) );
      }

          //     $this.value(function() {
          //         return chunk.join("-");
          //     });
          // var finalval =  chunk.join("-");

          document.getElementById("cardNumberPlanUpgrade").value = chunk.join("-");
}


function isNumber(evt) {

    evt = (evt) ? evt : window.event;
    var charCode = (evt.which) ? evt.which : evt.keyCode;
    if (charCode > 31 && (charCode < 48 || charCode > 57)) {
        return false;
    }
    return true;
}


// function dateMask(){
//

//       var inputChar = String.fromCharCode(event.keyCode);
//       var code = event.keyCode;
//       var allowedKeys = [8];
//       if (allowedKeys.indexOf(code) !== -1) {
//       return;
//       }

//       event.target.value = event.target.value.replace(
//       /^([1-9]\/|[2-9])$/g, '0$1/' // 3 > 03/
//       ).replace(
//       /^(0[1-9]|1[0-2])$/g, '$1/' // 11 > 11/
//       ).replace(
//       /^([0-1])([3-9])$/g, '0$1/$2' // 13 > 01/3
//       ).replace(
//       /^(0?[1-9]|1[0-2])([0-9]{2})$/g, '$1/$2' // 141 > 01/41
//       ).replace(
//       /^([0]+)\/|[0]+$/g, '0' // 0/ > 0 and 00 > 0
//       ).replace(
//       /[^\d\/]|^[\/]*$/g, '' // To allow only digits and `/`
//       ).replace(
//       /\/\//g, '/' // Prevent entering more than 1 `/`
//       );
// }

function dateMask(event){

    // var inputChar = String.fromCharCode(event.keyCode);
    var code = event.keyCode;
    var allowedKeys = [8];
    if (allowedKeys.indexOf(code) !== -1) {
    return;
    }

    event.target.value = event.target.value.replace(
    /^([1-9]\/|[2-9])$/g, '0$1/' // 3 > 03/
    ).replace(
    /^(0[1-9]|1[0-2])$/g, '$1/' // 11 > 11/
    ).replace(
    /^([0-1])([3-9])$/g, '0$1/$2' // 13 > 01/3
    ).replace(
    /^(0?[1-9]|1[0-2])([0-9]{2})$/g, '$1/$2' // 141 > 01/41
    ).replace(
    /^([0]+)\/|[0]+$/g, '0' // 0/ > 0 and 00 > 0
    ).replace(
    /[^\d\/]|^[\/]*$/g, '' // To allow only digits and `/`
    ).replace(
    /\/\//g, '/' // Prevent entering more than 1 `/`
    );
}





function getCardType(value){

    if(value.length == 4){

    }
}

function cc_brand_id(cur_val) {
    // the regular expressions check for possible matches as you type, hence the OR operators based on the number of chars
    // regexp string length {0} provided for soonest detection of beginning of the card numbers this way it could be used for BIN CODE detection also

    //JCB
    jcb_regex = new RegExp('^(?:2131|1800|35)[0-9]{0,}$'); //2131, 1800, 35 (3528-3589)
    // American Express
    amex_regex = new RegExp('^3[47][0-9]{0,}$'); //34, 37
    // Diners Club
    diners_regex = new RegExp('^3(?:0[0-59]{1}|[689])[0-9]{0,}$'); //300-305, 309, 36, 38-39
    // Visa
    visa_regex = new RegExp('^4[0-9]{0,}$'); //4
    // MasterCard
    mastercard_regex = new RegExp('^(5[1-5]|222[1-9]|22[3-9]|2[3-6]|27[01]|2720)[0-9]{0,}$'); //2221-2720, 51-55
    maestro_regex = new RegExp('^(5[06789]|6)[0-9]{0,}$'); //always growing in the range: 60-69, started with / not something else, but starting 5 must be encoded as mastercard anyway
    //Discover
    discover_regex = new RegExp('^(6011|65|64[4-9]|62212[6-9]|6221[3-9]|622[2-8]|6229[01]|62292[0-5])[0-9]{0,}$');
    ////6011, 622126-622925, 644-649, 65


    // get rid of anything but numbers
    cur_val = cur_val.replace(/\D/g, '');

    // checks per each, as their could be multiple hits
    //fix: ordering matter in detection, otherwise can give false results in rare cases
    var sel_brand = "unknown";
    if (cur_val.match(jcb_regex)) {
      sel_brand = "jcb";
    } else if (cur_val.match(amex_regex)) {
      sel_brand = "amex";
    } else if (cur_val.match(diners_regex)) {
      sel_brand = "dinersClub";
    } else if (cur_val.match(visa_regex)) {
      sel_brand = "visa";
    } else if (cur_val.match(mastercard_regex)) {
      sel_brand = "masterCard";
    } else if (cur_val.match(discover_regex)) {
      sel_brand = "discover";
    } else if (cur_val.match(maestro_regex)) {
      if (cur_val[0] == '5') { //started 5 must be mastercard
        sel_brand = "masterCard";
      } else {
        sel_brand = "maestro"; //maestro is all 60-69 which is not something else, thats why this condition in the end
      }
    }

    return sel_brand;
  }

/*** code for disable copy and paste feature in input field */

// window.onload = function() {
//
//       const cardInput = document.getElementById('cardNumberPlanUpgrade');
//       const dateInput = document.getElementById('expiryDatePlanUpgrade');
//       const cvvInput = document.getElementById('cardCvvPlanUpgrade');
//       cardInput.onpaste = function(e) {
//           e.preventDefault();
//       }
//       dateInput.onpaste = function(e) {
//           e.preventDefault();
//       }
//       cvvInput.onpaste = function(e) {
//           e.preventDefault();
//       }
//   }


// function enterCardnumber(e){
//
//       document.getElementById("cardNumberPlanUpgrade").value = event.target.value;
// }
// function enterMonth(e){
//
//       document.getElementById("expiryDatePlanUpgrade").value = event.target.value;
// }
// function enterCvv(e){
//       document.getElementById("cardCvvPlanUpgrade").value = event.target.value;
// }




// function enterprisePlanChange(e){
//       this.focus()
// }


function ccvalidation(e,event,type, pastdue=false) {

    document.getElementById("displaycarderrors").innerHTML = ""
    if(pastdue){
      document.querySelectorAll("#pastdue_pay_model #displaycarderrors")[0].innerHTML = "";
    }

    if (event.keyCode === 13) {
        event.preventDefault();
        if(pastdue){
            document.getElementById("payPastDueNow").click();
        }else{
            document.getElementById("updradePlanNow").click();
        }

    }

    if(type == "expiry")
           dateMask(event)

    if(type == "cn"){
          if(e.value.length > 3){

                var input = e.value;
                input = input.replace(/[\W\s\._\-]+/g, '');
                var split = 4;
                var chunk = [];

                for (var i = 0, len = input.length; i < len; i += split) {
                chunk.push( input.substr( i, split ) );
                }

                e.value = chunk.join("-");

                brand = cc_brand_id(e.value)
                if(brand != "amex"){
                      e.setAttribute("maxLength",19)
                }
                else{
                      e.setAttribute("maxLength",18)
                }

          }
    }
    if(type == "zc"){
            if(e.value.match(/^[a-zA-Z0-9][a-zA-Z0-9\- ]{0,20}[a-zA-Z0-9]$/g)){
                  if(pastdue){
                        document.querySelectorAll("#pastdue_pay_model #displaycarderrors")[0].innerHTML = "";
                  }else{
                        document.getElementById("displaycarderrors").innerHTML = ""
                  }

            }
            else{
                  if(pastdue){
                        document.querySelectorAll("#pastdue_pay_model #displaycarderrors")[0].innerHTML = "";
                  }else{
                        document.getElementById("displaycarderrors").innerHTML = pgettext("paymentsUpgradePlans","Invalid Zip code")
                  }
            }
    }
    if(type == "zcc"){

          if(e.value.match(/^[a-zA-Z0-9][a-zA-Z0-9\- ]{0,20}[a-zA-Z0-9]$/g)){
                document.getElementById("cardErrormsg").innerHTML = ""
                document.getElementById("card-error-msg").style.display = "block";
          }
          else{
                document.getElementById("cardErrormsg").innerHTML = pgettext("paymentsUpgradePlans","Invalid Zip code")
                document.getElementById("card-error-msg").style.display = "block";
          }
    }

}


function focusepusername(e){

      if(e.style.borderTopColor == "rgb(255, 0, 0)"){
            e.removeAttribute("style")
            e.nextElementSibling.innerHTML = ""
            document.querySelector("#enterpriseDataSubmit").disabled = false
      }

}

function focusepemail(e){

      if(e.style.borderTopColor == "rgb(255, 0, 0)"){
            e.removeAttribute("style")
            e.nextElementSibling.innerHTML = ""
            document.querySelector("#enterpriseDataSubmit").disabled = false
      }

}

function focusepphneno(e){

      if(e.style.borderTopColor == "rgb(255, 0, 0)"){
            e.removeAttribute("style")
            e.nextElementSibling.innerHTML = ""
            document.querySelector("#enterpriseDataSubmit").disabled = false
      }
}

function focusepnooflicences(e){

      if(e.style.borderTopColor == "rgb(255, 0, 0)"){
            e.removeAttribute("style")
            e.nextElementSibling.innerHTML = ""
            document.querySelector("#enterpriseDataSubmit").disabled = false
      }
}

function enterpriseinputfieldkeyup(){
      if (event.keyCode === 13) {
            document.getElementById("enterpriseDataSubmit").click();
      }
}

function focusepcountry(e){

    if(e.style.borderTopColor == "rgb(255, 0, 0)"){
          e.removeAttribute("style")
          e.nextElementSibling.innerHTML = ""
          document.querySelector("#enterpriseDataSubmit").disabled = false
    }
}

function focusepcity(e){

    if(e.style.borderTopColor == "rgb(255, 0, 0)"){
          e.removeAttribute("style")
          e.nextElementSibling.innerHTML = ""
          document.querySelector("#enterpriseDataSubmit").disabled = false
    }
}



function savebrandtemplate(userid, teamid , projectid){

      return new Promise(function(resolve, reject) {

            url = redirecturlserver+'/brand/stemp/';
            data = 'userId='+userid+'&teamId='+teamid+'&projectId='+projectid
            fbajaxcall(url,data,null,null) .then(function(result) {
                  resolve(result)
            }, function(error) {
                  reject(error)
            })

      })
}



// Zoom Integration Flow
var zoomtokensdetails = {"next_page_token":""}
function zoomauthenticate(userid,teamid){

      return new Promise(function(resolve, reject) {

                  url = redirecturlserver+'/zoom/cc';
                  data = 'userid='+userid

                  fbajaxcall(url,data,null,null).then(function(result) {

                        if(result == 0){

                              _url = "https://zoom.us/oauth/authorize?client_id=QdVENOViQkq7xzlzXfmRCQ&response_type=code&redirect_uri="+redirecturlserver+"/zoom/auth";
                                    var win = window.open(_url , "ZOOM",'width=500, height=600');
                                    REDIRECT = redirecturlserver+'/zoom/auth';


                                    var pollTimer   =   window.setInterval(function() {

                                          if (win.document.URL.indexOf(REDIRECT) != -1){

                                                var fullUrl = new URL(win.location.href);
                                                authorizationcode_url = new URLSearchParams(fullUrl.search.slice(1));
                                                authorizationcode = authorizationcode_url.get("code");

                                                win.close();

                                                if (win.closed)
                                                {
                                                      window.clearInterval(pollTimer);
                                                      channelurl = redirecturlserver+"/zoom/savedata"
                                                      data = 'code='+authorizationcode+'&userid='+userid
                                                      fbajaxcall(channelurl,data,null,null) .then(function(result) {

                                                            res = JSON.parse(result);

                                                            if(res["success"]){
                                                                  fetchzoomvideorecordingslist(userid,teamid).then(function(result) {
                                                                        resolve(result)
                                                                  })
                                                            }
                                                            else{
                                                                  resolve( {"success":false} )
                                                            }

                                                      }, function(error) {

                                                            reject(error)
                                                      })

                                                }

                                          }

                                    });

                        }
                        else{

                              resolve({"success":true})

                        }

                  }, function(error) {

                        reject(error)
                  })

      })

  }


function fetchzoomvideorecordingslist(userid,teamid){

      return new Promise(function(resolve, reject) {

            channelurl = redirecturlserver+"/zoom/videorecordings"
            data = 'userid='+userid
            fbajaxcall(channelurl,data,null,null) .then(function(result) {
                  res = JSON.parse(result);
                  if(!res['error']){
                        displayzoomvideorecording(res['result'],userid,teamid,res['nextpagetoken'],res['months'],res['years'],res['crntmnth']).then(function(result) {

                              resolve(result)
                        }, function(error) {

                              reject(error)
                        })
                  }
                  else{
                        resolve(res)
                  }



            }, function(error) {

                  reject(error)
            })

      })

}
// scroll Logic in Zoom
var windowScroll = true

function runzoomrecordingsScroll(){
      if(zoomtokensdetails["next_page_token"] != "" && windowScroll == true){

            var h = document.getElementById("zoom-recodinglist"),
            b = document.body,
            st = 'scrollTop',
            sh = 'scrollHeight';
            scrlpercentage = (h[st]||b[st]) / ((h[sh]||b[sh]) - h.clientHeight) * 100
            if(scrlpercentage > 80){
                  windowScroll = false

                  channelurl = redirecturlserver+"/zoom/nextpagerecordings"
                  postdata = 'next_page_token='+zoomtokensdetails["next_page_token"]+'&userid='+zoomtokensdetails["userid"]
                  fbajaxcall(channelurl,postdata,null,null) .then(function(result) {
                        res = JSON.parse(result);
                        if(!res['error']){
                              document.getElementsByClassName("zoomerror_desciption")[0].style.display = "none"

                              zoomtokensdetails["next_page_token"] = res['nextpagetoken']
                              data = res['result']
                              videodata = ""
                              for(key in data){

                                    videodata +=      `<div class='manage7'> <input type='checkbox' name='zoomrecordings_checkbox' id='zoomrecordings_checkbox' value=`+data[key]["id"]+`> <input type="hidden" id="`+data[key]["id"]+`source" value=`+data[key]["source"]+`> <input type="hidden" id="`+data[key]["id"]+`accountid" value=`+data[key]["account_id"]+`> </div>`+
                                                      `<div class='manage8'> <img src='https://dev-static.animaker.com/icons/projectDefaultHorizontal.svg' width="123"> </div>`+
                                                      `<div class='manage9' id="`+data[key]["id"]+`meetid"> `+data[key]["meetid"]+` </div>`+
                                                      `<div class='manage10' id="`+data[key]["id"]+`topic"> `+data[key]["topic"]+` </div>`+
                                                      `<div class='manage11' id="`+data[key]["id"]+`filesize"> `+data[key]["filesize"]+` </div>`+
                                                      `<div class='manage12'> `+data[key]["start_time"]+` </div>`

                              }

                              element = document.getElementById("zoom-recodinglist")
                              element.innerHTML += videodata

                              windowScroll = true

                        }
                        else{
                              document.getElementsByClassName("zoomerror_desciption")[0].style.display = "block"
                              document.getElementsByClassName("zoomerror_desciption")[0].innerText = res['msg']
                        }


                  }, function(error) {

                        document.getElementsByClassName("zoomerror_desciption")[0].style.display = "block"
                        document.getElementsByClassName("zoomerror_desciption")[0].innerText = pgettext("Zoom-flow","Something went wrong.")
                  })


            }
      }
}

var importedzoomvideocount = 0;
var zoomuploadedvideocount = 0;
var zoommonthscycles
var zoomyearcycles

function displayzoomvideorecording(data,userid,teamid,nextpagetoken,monthcycle,yearlycycle,crntmnth){
      return new Promise(function(resolve, reject) {
            zoomtokensdetails = {"next_page_token":nextpagetoken,"userid":userid }

            // document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
            document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "block";
            document.getElementById("zoomvideorecordingdetails").style.display="block"
            videodata = `<div class="manage1"></div><div class="manage2"> `+pgettext("Zoom-flow","Recordings")+`  </div><div class="manage3"> `+pgettext("Zoom-flow","Meeting Id")+`  </div> <div class="manage4"> `+pgettext("Zoom-flow","Topic")+`  </div><div class="manage5"> `+pgettext("Zoom-flow","File Size (MB)")+`  </div><div class="manage6"> `+pgettext("Zoom-flow","Start time")+`  </div>`

            for(key in data){

                  videodata +=      `<div class='manage7'> <input type='checkbox' name='zoomrecordings_checkbox' id='zoomrecordings_checkbox' value=`+data[key]["id"]+`> <input type="hidden" id="`+data[key]["id"]+`source" value=`+data[key]["source"]+`> <input type="hidden" id="`+data[key]["id"]+`accountid" value=`+data[key]["account_id"]+`> </div>`+
                                    `<div class='manage8'> <img src='https://dev-static.animaker.com/icons/projectDefaultHorizontal.svg' width="123"> </div>`+
                                    `<div class='manage9' id="`+data[key]["id"]+`meetid"> `+data[key]["meetid"]+` </div>`+
                                    `<div class='manage10' id="`+data[key]["id"]+`topic"> `+data[key]["topic"]+` </div>`+
                                    `<div class='manage11' id="`+data[key]["id"]+`filesize"> `+data[key]["filesize"]+` </div>`+
                                    `<div class='manage12'> `+data[key]["start_time"]+` </div>`

            }
            if(data.length == 0){
                  document.getElementsByClassName("zoomerror_desciption")[0].style.display = "block"
                  document.getElementsByClassName("zoomerror_desciption")[0].innerText = pgettext("Zoom-flow","No Zoom recordings found in the following Month.")
            }
            else{
                  document.getElementsByClassName("zoomerror_desciption")[0].style.display = "none"
            }

            document.getElementById("zoom-recodinglist").innerHTML = videodata

            document.getElementsByClassName("zoomcurrent_month_selected")[0].innerHTML = crntmnth
            document.getElementsByClassName("zoomcurrent_year_selected")[0].value = yearlycycle[0]

            zoommonthscycles = monthcycle
            zoomyearcycles = yearlycycle

            // monthdata = ``
            // for(m in monthcycle){
            //       if(monthcycle[m] == crntmnth){
            //             monthdata += `<div class="zoommonthly_dropdown_list selected_zoommonthly"> <div class="drop_inner"> <span class="select_checkmark_zoom"></span><span>`+monthcycle[m]+`</span></div></div>`
            //       }
            //       else{
            //             monthdata += `<div class="zoommonthly_dropdown_list"> <div class="drop_inner"> <span class="select_checkmark_zoom"></span><span>`+monthcycle[m]+`</span></div></div>`
            //       }
            // }

            // yeardata = ``
            // for(y in yearlycycle){
            //       yeardata += `<div class="zoomyearly_dropdown_list"><div class="drop_inner"><span class="select_checkmark_zoom"></span><span>`+yearlycycle[y]+`</span> </div></div>`
            // }

            // document.getElementById("zoommonthly_dropdown_block").innerHTML = monthdata
            // document.getElementById("zoomyearly_dropdown_block").innerHTML = yeardata

            // document.getElementsByClassName("zoomyearly_dropdown_list")[0].classList.add("selected_zoomyearly")

            // document.getElementsByClassName("select_zoom_month")[0].value = document.getElementsByClassName("selected_zoommonthly")[0].childNodes[1].childNodes[2].textContent
            // document.getElementsByClassName("select_zoom_yearly")[0].value = document.getElementsByClassName("selected_zoomyearly")[0].childNodes[0].childNodes[1].textContent

            importzoomvideoslistener = function(){

                  var form = document.getElementById('zoomvideorecordingdetails');
                  var chks = form.querySelectorAll('input[type="checkbox"]:checked');
                  var checked = [];
                  if(chks.length == 0 ){
                        document.getElementsByClassName("zoomerror_desciption")[0].style.display = "block"
                        document.getElementsByClassName("zoomerror_desciption")[0].innerText = pgettext("Zoom-flow","Please select atleast one video.")
                  }
                  else{
                        for(var i = 0; i < chks.length; i++){
                              if(chks[i].checked){
                                    refzoomdata = {"userid":userid,"id":chks[i].value,"accountid":document.getElementById(chks[i].value+"accountid").value ,"meetid":document.getElementById(chks[i].value+"meetid").innerText ,"topic":document.getElementById(chks[i].value+"topic").innerText ,"source":document.getElementById(chks[i].value+"source").value}
                                    checked.push(refzoomdata)
                              }
                        }

                        url = redirecturlserver+'/zoom/importvideos';
                        data = 'data='+JSON.stringify(checked)+'&userid='+userid

                        fbajaxcall(url,data,null,null).then(function(result) {
                              res = JSON.parse(result);
                              if(!res['error']){
                                    z_details = res['data']
                                    counterInc = 0
                                    videostatusdata = `<div class="statusprogressHead0"> `+pgettext("Zoom-flow","Topic")+` </div><div class="statusprogressHead1"> `+pgettext("Zoom-flow","Meeting Id")+`  </div><div class="statusprogressHead2"> `+pgettext("Zoom-flow","Status of upload")+`  </div>`
                                    for(data in z_details){

                                          videostatusdata += `<div class="statusprogress0"> `+z_details[data]['topic']+` </div>`+
                                                            `<div class="statusprogress1"> `+z_details[data]['meetid']+` </div>`+
                                                            `<div class="statusprogress2"> <div class="zoomvideouploadstatusprogressbar" id="zoomvideouploadstatus`+z_details[data]['id']+`" style="width: 10px;"></div> </div>`
                                          // var downloadstatusTimeInterval = "downloadstatus"+counterInc
                                          // var uploadstatusTimeInterval = "uploadstatus"+counterInc
                                          // counterInc = counterInc+1
                                          importedzoomvideocount += 1
                                          setzoomvideostatusdelay1(z_details[data],userid,teamid)

                                    }

                                    document.getElementById("zoomvideorecordingdetails").style.display="none"
                                    document.getElementById("zoomvideorecordinguploadstatus").style.display="block"
                                    document.getElementById("zoom-videouploadstatus").innerHTML = videostatusdata

                                    document.addEventListener("UPLOADSTATUSCOMPLETED", function(event) {
                                          resolve({"success":true})
                                    })

                              }
                              else{
                                    resolve({"success":false})
                              }

                        }, function(error) {

                              reject(error)
                        })

                  }

            }

            document.getElementById("importzoomvideoslist").addEventListener("click",importzoomvideoslistener, false )

            document.getElementsByClassName("zoomsearch_icon")[0].addEventListener("click",function zoomsearchclicklistener (e){

                  e.target.style.right = "200px"
                  e.target.parentNode.style.borderBottom = "2px solid #f1f1f1"
                  e.target.parentNode.innerHTML += "<input type='text' name='search-projects' class='search_zoomrecordings_more' value='' id='quick_zoom_recodings_search' placeholder="+pgettext("dashboardMainContent","Search by Meeting ID")+" onkeyup='zoomrecordingssearchrecordings(this,event,"+'"'+userid+'"'+")' style='opacity:1' autofocus>"

                  document.getElementsByClassName("zoomsearch_icon")[0].removeEventListener("click", zoomsearchclicklistener, false )

            },false)
      })
}

function previousmonthzoomclick(e,event){
      if(document.getElementsByClassName("zoomcurrent_month_selected")[0].innerHTML == "Jan"){
            currentyear = zoomyearcycles[zoomyearcycles.indexOf(parseInt(document.getElementsByClassName("zoomcurrent_year_selected")[0].value))+1]
            currentmonth = "Dec"
      }
      else{
            currentyear = document.getElementsByClassName("zoomcurrent_year_selected")[0].value
            currentmonth = zoommonthscycles[zoommonthscycles.indexOf(document.getElementsByClassName("zoomcurrent_month_selected")[0].innerHTML)-1]
      }

      channelurl = redirecturlserver+"/zoom/prevnextrecordings"
      postdata = 'userid='+zoomtokensdetails['userid']+'&month='+currentmonth+'&year='+currentyear
      fbajaxcall(channelurl,postdata,null,null) .then(function(result) {
            res = JSON.parse(result);


            if(!res['error']){
                  data = res['result']
                  videodata = `<div class="manage1"></div><div class="manage2"> `+pgettext("Zoom-flow","Recordings")+`  </div><div class="manage3"> `+pgettext("Zoom-flow","Meeting Id")+`  </div> <div class="manage4"> `+pgettext("Zoom-flow","Topic")+`  </div><div class="manage5"> `+pgettext("Zoom-flow","File Size (MB)")+`  </div><div class="manage6"> `+pgettext("Zoom-flow","Start time")+`  </div>`

                  for(key in data){

                        videodata +=      `<div class='manage7'> <input type='checkbox' name='zoomrecordings_checkbox' id='zoomrecordings_checkbox' value=`+data[key]["id"]+`> <input type="hidden" id="`+data[key]["id"]+`source" value=`+data[key]["source"]+`> <input type="hidden" id="`+data[key]["id"]+`accountid" value=`+data[key]["account_id"]+`> </div>`+
                                          `<div class='manage8'> <img src='https://dev-static.animaker.com/icons/projectDefaultHorizontal.svg' width="123"> </div>`+
                                          `<div class='manage9' id="`+data[key]["id"]+`meetid"> `+data[key]["meetid"]+` </div>`+
                                          `<div class='manage10' id="`+data[key]["id"]+`topic"> `+data[key]["topic"]+` </div>`+
                                          `<div class='manage11' id="`+data[key]["id"]+`filesize"> `+data[key]["filesize"]+` </div>`+
                                          `<div class='manage12'> `+data[key]["start_time"]+` </div>`

                  }
                  if(data.length == 0){
                        document.getElementsByClassName("zoomerror_desciption")[0].style.display = "block"
                        document.getElementsByClassName("zoomerror_desciption")[0].innerText = pgettext("Zoom-flow","No Zoom recordings found in the following Month.")
                  }
                  else{
                        document.getElementsByClassName("zoomerror_desciption")[0].style.display = "none"
                  }

                  document.getElementById("zoom-recodinglist").innerHTML = videodata

                  document.getElementsByClassName("zoomcurrent_month_selected")[0].innerHTML = currentmonth
                  document.getElementsByClassName("zoomcurrent_year_selected")[0].value = currentyear

                  document.getElementsByClassName("right-arrow-nextzoommonth")[0].style.display = "block"
            }
            else{
                  resolve(res)
            }



      }, function(error) {

            reject(error)
      })


}

function nextmonthzoomclick(e,event){

      if(document.getElementsByClassName("zoomcurrent_month_selected")[0].innerHTML == "Dec"){
            currentyear = zoomyearcycles[zoomyearcycles.indexOf(parseInt(document.getElementsByClassName("zoomcurrent_year_selected")[0].value))-1]
            currentmonth = "Jan"
      }
      else{
            currentyear = document.getElementsByClassName("zoomcurrent_year_selected")[0].value
            currentmonth = zoommonthscycles[zoommonthscycles.indexOf(document.getElementsByClassName("zoomcurrent_month_selected")[0].innerHTML)+1]
      }

      channelurl = redirecturlserver+"/zoom/prevnextrecordings"
      postdata = 'userid='+zoomtokensdetails['userid']+'&month='+currentmonth+'&year='+currentyear
      fbajaxcall(channelurl,postdata,null,null) .then(function(result) {
            res = JSON.parse(result);
            if(!res['error']){
                  data = res['result']
                  videodata = `<div class="manage1"></div><div class="manage2"> `+pgettext("Zoom-flow","Recordings")+`  </div><div class="manage3"> `+pgettext("Zoom-flow","Meeting Id")+`  </div> <div class="manage4"> `+pgettext("Zoom-flow","Topic")+`  </div><div class="manage5"> `+pgettext("Zoom-flow","File Size (MB)")+`  </div><div class="manage6"> `+pgettext("Zoom-flow","Start time")+`  </div>`

                  for(key in data){

                        videodata +=      `<div class='manage7'> <input type='checkbox' name='zoomrecordings_checkbox' id='zoomrecordings_checkbox' value=`+data[key]["id"]+`> <input type="hidden" id="`+data[key]["id"]+`source" value=`+data[key]["source"]+`> <input type="hidden" id="`+data[key]["id"]+`accountid" value=`+data[key]["account_id"]+`> </div>`+
                                          `<div class='manage8'> <img src='https://dev-static.animaker.com/icons/projectDefaultHorizontal.svg' width="123"> </div>`+
                                          `<div class='manage9' id="`+data[key]["id"]+`meetid"> `+data[key]["meetid"]+` </div>`+
                                          `<div class='manage10' id="`+data[key]["id"]+`topic"> `+data[key]["topic"]+` </div>`+
                                          `<div class='manage11' id="`+data[key]["id"]+`filesize"> `+data[key]["filesize"]+` </div>`+
                                          `<div class='manage12'> `+data[key]["start_time"]+` </div>`

                  }
                  if(data.length == 0){
                        document.getElementsByClassName("zoomerror_desciption")[0].style.display = "block"
                        document.getElementsByClassName("zoomerror_desciption")[0].innerText = pgettext("Zoom-flow","No Zoom recordings found in the following Month.")
                  }
                  else{
                        document.getElementsByClassName("zoomerror_desciption")[0].style.display = "none"
                  }

                  document.getElementById("zoom-recodinglist").innerHTML = videodata

                  document.getElementsByClassName("zoomcurrent_month_selected")[0].innerHTML = currentmonth
                  document.getElementsByClassName("zoomcurrent_year_selected")[0].value = currentyear

                  document.getElementsByClassName("right-arrow-nextzoommonth")[0].style.display = "block"
            }
            else{
                  resolve(res)
            }



      }, function(error) {

            reject(error)
      })

}

function setzoomvideostatusdelay1(z_details,userid,teamid){
      setTimeout(function getuploadstatus(){
            url = redirecturlserver+'/zoom/upload/status';
            postdata = 'id='+z_details['id']

            fbajaxcall(url,postdata,null,null).then(function(result) {
                  res = JSON.parse(result);
                  if(!res['error']){

                        document.getElementById("zoomvideouploadstatus"+z_details['id']).style.width = parseInt(res['percentage']*(50/100))+"px"
                        if(res['percentage'] != 100){
                              setzoomvideostatusdelay1(z_details,userid,teamid)
                        }
                        else{
                              url = uploadApiUrl+'/upload/postUpload/'
                              postdata = 'userId='+userid+'&fileType=video/mp4&filename='+z_details['id']+'.mp4&key=a/u/'+userid+'/video/zoom/'+z_details['id']+'.mp4&parent='+0+'&subtype=UPVIDEO&id='+z_details['id']+'&teamid='+teamid+'&type=zoom'
                              postuploadcall(url,postdata,null,null).then(function(result) {
                                    result = JSON.parse(result)
                                    setzoomvideostatusdelay2(result,z_details)
                              })

                        }
                  }
                  else{
                        // resolve({"success":false})
                  }

            }, function(error) {

                  // reject(error)
            })
      }, 5000);
}


function setzoomvideostatusdelay2(resultjson,z_details){
      setTimeout(function getpostuploadstatus(){

            url = uploadApiUrl+'/upload/postuploadstatus/';
            postdata = 'jd='+resultjson['jd']+'&type=zoom&oapps='+1+'&accountid='+z_details['accountid']+'&uuid='+z_details['uuid']+'&filename='+z_details['topic']

            postuploadcall(url,postdata,null,null).then(function(result) {
                  res = JSON.parse(result);
                  if(res['code'] == "900"){
                        if(res['status'] == 'PROGRESSING'){
                              document.getElementById("zoomvideouploadstatus"+z_details['id']).style.width = "65px"
                              setzoomvideostatusdelay2(resultjson,z_details)
                        }
                        else if(res['status'] == 'STITCHING'){
                              document.getElementById("zoomvideouploadstatus"+z_details['id']).style.width = "85px"
                              setzoomvideostatusdelay2(resultjson,z_details)
                        }
                        else{
                              zoomuploadedvideocount += 1
                              document.getElementById("zoomvideouploadstatus"+z_details['id']).style.width = "100px"

                              if(zoomuploadedvideocount == importedzoomvideocount){

                                    importedzoomvideocount = 0
                                    zoomuploadedvideocount = 0

                                    closezoomPopups()

                                    let statusevent = new Event("UPLOADSTATUSCOMPLETED", {bubbles: true});
                                    elem = document.getElementById("zoomvideouploadstatus"+z_details['id'])
                                    elem.dispatchEvent(statusevent)
                                    // resolve({"success":true})


                              }
                        }
                  }
                  else{
                        // Failure case need to handled other than code 900


                        // resolve({"success":false})
                  }

            }, function(error) {
                  closezoomPopups()
                  // reject(error)
            })
      }, 5000);
}

function zoomrecordingssearchrecordings(e,event,userid){

      if(event.keyCode === 13 ){

            if(e.value.length == 0 ){
                  document.getElementsByClassName("zoomerror_desciption")[0].style.display = "block"
                  document.getElementsByClassName("zoomerror_desciption")[0].innerText = pgettext("Zoom-flow","Please enter Meeting Id in order to search.")
            }
            else{
                  url = redirecturlserver+'/zoom/searchrecordings';
                  data = 'userid='+userid+'&meetingid='+e.value

                  fbajaxcall(url,data,null,null).then(function(result) {
                        zoomtokensdetails["next_page_token"] = ""
                        res = JSON.parse(result);
                        if(!res['error']){
                              searchdata = res['result']
                              videodata =      `<div class="manage1"></div><div class="manage2"> `+pgettext("Zoom-flow","Recordings")+`  </div><div class="manage3"> `+pgettext("Zoom-flow","Meeting Id")+`  </div> <div class="manage4"> `+pgettext("Zoom-flow","Topic")+`  </div><div class="manage5"> `+pgettext("Zoom-flow","File Size (MB)")+`  </div><div class="manage6"> `+pgettext("Zoom-flow","Start time")+`  </div>` +
                                                `<div class='manage7'> <input type='checkbox' name='zoomrecordings_checkbox' id='zoomrecordings_checkbox' value=`+searchdata["id"]+`> <input type="hidden" id="`+searchdata["id"]+`source" value=`+searchdata["source"]+`> <input type="hidden" id="`+data[key]["id"]+`accountid" value=`+data[key]["account_id"]+`> </div>`+
                                                `<div class='manage8'> <img src='https://dev-static.animaker.com/icons/projectDefaultHorizontal.svg' width="123"> </div>`+
                                                `<div class='manage9' id="`+searchdata["id"]+`meetid"> `+searchdata["meetid"]+` </div>`+
                                                `<div class='manage10' id="`+searchdata["id"]+`topic"> `+searchdata["topic"]+` </div>`+
                                                `<div class='manage11' id="`+searchdata["id"]+`filesize"> `+searchdata["filesize"]+` </div>`+
                                                `<div class='manage12'> `+searchdata["start_time"]+` </div>`

                        }
                        else{
                              document.getElementsByClassName("zoomerror_desciption")[0].style.display = "block"
                              document.getElementsByClassName("zoomerror_desciption")[0].innerText = pgettext("Zoom-flow","No Zoom recordings found with the given Meeting Id.")
                        }

                        document.getElementById("zoom-recodinglist").innerHTML = videodata

                  }, function(error) {

                        reject(error)
                  })
            }
      }

}


function closezoomrecodingsPopups(e,event){

      let closeevent = new Event("POPUPCLOSE", {bubbles: true});
      // let closeevent = new CustomEvent("POPUPCLOSE", {"detail":{"count": importedzoomvideocount}} );
      document.dispatchEvent(closeevent)

      e.parentNode.parentNode.style.display = "none";
      document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none";
      document.getElementsByClassName("zoomerror_desciption")[0].style.display = "none"

      document.getElementById("importzoomvideoslist").removeEventListener("click", importzoomvideoslistener, false)

      document.getElementById("quick_zoom_recodings_search").value = ""
}

function closezoomPopups(){
      let closeevent = new Event("POPUPCLOSE", {bubbles: true});
      // let closeevent = new CustomEvent("POPUPCLOSE", {"detail":{"count": importedzoomvideocount}} );
      document.dispatchEvent(closeevent)

      document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none";
      document.getElementById("zoomvideorecordingdetails").style.display="none"
      document.getElementById("zoomvideorecordinguploadstatus").style.display="none"
      document.getElementsByClassName("zoomerror_desciption")[0].style.display = "none"

      document.getElementById("importzoomvideoslist").removeEventListener("click", importzoomvideoslistener, false)

      var zoomRec = document.getElementById("quick_zoom_recodings_search");
      if(zoomRec){
            document.getElementById("quick_zoom_recodings_search").value= "";
      }
}


function addmorezoomvideos(userid,teamid,authorized){
      return new Promise(function(resolve, reject) {
            checkurl = redirecturlserver+'/app/zoom/recording';
            postdata = 'userid='+userid

            fbajaxcall(checkurl,postdata,null,null).then(function(result) {
                  res = JSON.parse(result);

                  if(res['authorized'] == 0){
                        _url = "https://zoom.us/oauth/authorize?client_id=QdVENOViQkq7xzlzXfmRCQ&response_type=code&redirect_uri="+redirecturlserver+"/zoom/auth";
                        var win = window.open(_url , "ZOOM",'width=500, height=600');
                        REDIRECT = redirecturlserver+'/zoom/auth';

                        var pollTimer   =   window.setInterval(function() {

                              if (win.document.URL.indexOf(REDIRECT) != -1){

                                    var fullUrl = new URL(win.location.href);
                                    authorizationcode_url = new URLSearchParams(fullUrl.search.slice(1));
                                    authorizationcode = authorizationcode_url.get("code");

                                    win.close();

                                    if (win.closed)
                                    {
                                          window.clearInterval(pollTimer);
                                          channelurl = redirecturlserver+"/zoom/savedata"
                                          data = 'code='+authorizationcode+'&userid='+userid
                                          fbajaxcall(channelurl,data,null,null) .then(function(result) {

                                                res = JSON.parse(result);

                                                if(res["success"]){
                                                      fetchzoomvideorecordingslist(userid,teamid).then(function(result) {
                                                            resolve(result)
                                                      })
                                                }
                                                else{
                                                      resolve( {"success":false} )
                                                }

                                          }, function(error) {

                                                reject(error)
                                          })

                                    }

                              }

                        });
                  }
                  else{
                        fetchzoomvideorecordingslist(userid,teamid).then(function(result) {

                              resolve(result)

                        })

                  }
            }, function(error) {

                  reject(error)
            })


      })

}

function pastduewarningmessage(type){

      if (type == 'upgrade'){
            message =  pgettext('paymentsUpgradePlans',"Sorry, You can’t change your plan right now!");
      }else if(type == 'create'){
            message = pgettext('paymentsUpgradePlans',"Sorry, You can’t create a new project right now!");
      }else if(type == 'download'){
            message = pgettext('paymentsUpgradePlans',"Sorry, You can’t download your video right now!");
      }else if(type == 'invite'){
            message = pgettext('paymentsUpgradePlans',"Sorry, You can’t invite people to your team right now!");
      }else if(type == 'duplicate'){
            message = pgettext('paymentsUpgradePlans',"Sorry, You can’t duplicate your project right now!");
      }else if(type == 'changeplan'){
            message = pgettext('paymentsUpgradePlans',"Sorry, You can’t change your current plan right now!");
      }else if(type == 'cancel'){
            message = pgettext('paymentsUpgradePlans',"Sorry, You can’t cancel your subscription right now!");
      }else if(type == 'cchr'){
            message = pgettext('paymentsUpgradePlans',"Sorry, You can’t create a new character right now!");
      }else if(type == 'cchrdup'){
            message = pgettext('paymentsUpgradePlans',"Sorry, You can’t duplicate this character right now!");
      }else if(type == 'resize'){
            message = pgettext('paymentsUpgradePlans',"Sorry, You can’t resize your project right now!");
      }else if(type == 'dwnvoice'){
            message = pgettext('paymentsUpgradePlans',"Sorry, You can’t download your project right now!");
      }else if(type == 'crtvideo'){
            message = pgettext('paymentsUpgradePlans',"Sorry, You can’t create a new project right now!");
      }else if(type == 'crtaudio'){
            message = pgettext('paymentsUpgradePlans',"Sorry, You can’t create a new project right now!");
      }else if(type == 'pastduepaynow'){
            message = pgettext('paymentsUpgradePlans',"Hey there! <br> Your subscription has expired");
      }
      
      else{
            message ="";
      }
      message2=pgettext('paymentsUpgradePlans',"To continue using Animaker, pay for your subscription by clicking the button below.");
      return [message,message2];

}


function pastduewarningpopup(data, type){
      var msg;
      msg=pastduewarningmessage(type)
      document.querySelectorAll("#pastdue_block_model .pastdue-warning-message")[0].innerHTML = msg[0]
      document.querySelectorAll("#pastdue_block_model .pastdue-warning-description2")[0].innerHTML = msg[1]

      if(data["data"] && data["data"]['role'] == 0){
            document.querySelectorAll('#pastdue_block_model .updrade-now')[0].style.display = "none";
            if(data["data"] && data["data"]['plan'] == "growth" && data["data"]['admins']){
                  document.querySelectorAll('#pastdue_block_model .pastdue-admin-list')[0].style.display = "block";
                  document.querySelectorAll('#pastdue_block_model .pastdue-admin-list')[0].innerHTML = "<b>Admins:</b> "+data["data"]['admins'].join(', ');
            }
      }else{
            // if(data["data"] && data["data"]['plan'] == "enterprise" || data["iscustomplan"]==1){
                  try {
                        document.querySelectorAll('#pastdue_block_model .updrade-now')[0].style.display = "block";
                        document.querySelectorAll('#pastdue_block_model .updrade-now #contactus')[0].style.display = "block";
                        document.querySelectorAll('#pastdue_block_model .updrade-now #paypastdue')[0].style.display = "none";
                  }
                  catch(err){
                        console.log("paypastdue not found");
                  }
            // }
            // else{
            //       document.querySelectorAll('#pastdue_block_model .updrade-now')[0].style.display = "block";
            //       try {
            //             document.querySelectorAll('#pastdue_block_model .updrade-now #contactus')[0].style.display = "none";
            //       }
            //       catch(err){
            //             console.log("contact us not found")
            //       }
            //       try {
            //             document.querySelectorAll('#pastdue_block_model .updrade-now #paypastdue')[0].style.display = "block";
            //       }
            //       catch(err){
            //             console.log("paypstdue not found");
            //       }
            // }
      }
      document.querySelectorAll('#pastdue_block_model .pastdue-warning-description')[0].innerHTML = data.errormsg;
      

      document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "block";
      document.getElementById("pastdue_block_model").style.display = "block";

}


function pastduepay(){

      document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "block";
      document.getElementById("pastdue_pay_model").style.display = "block";

}

function closePastDuePopupsListeners(){
      try{
      document.querySelectorAll("#pastdue_pay_model #cardNumberPlanUpgrade")[0].value = ""
      document.querySelectorAll("#pastdue_pay_model #expiryDatePlanUpgrade")[0].value =""
      document.querySelectorAll("#pastdue_pay_model #cardCvvPlanUpgrade")[0].value = ""
      document.querySelectorAll("#pastdue_pay_model #zip-code-val")[0].value = ""
      document.getElementById("pastdue_pay_model").style.display ="none";
      document.querySelectorAll("#pastdue_pay_model #displaycarderrors")[0].innerHTML ="";}
      catch(err){
            console.log("element not found")
      }
      document.getElementById("pastdue_block_model").style.display ="none";
      document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none";
      document.getElementById("pastdue_paynow_model").style.display = "none" 
      try {
            document.getElementById("paypal_pastdue_paynow_model").style.display = "none" 
            document.getElementById("paypastdue").removeEventListener("click", openpastduepayListener, false )
      }
      catch(err) {
            console.log("element not found 1")
      }

      try {
            document.getElementById("payPastDueNow").removeEventListener("click", pastduepayListener, false )
      }
      catch(err) {
            console.log("element not found 2")
      }
}


function closePastDuepaynowPopups(e,event){
      document.getElementById("pastdue_paynow_model").style.display = "none";
      document.getElementById("paypal_pastdue_paynow_model").style.display = "none" 
      document.getElementById("pastdue_block_model").style.display = "none";
      try{
      document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none";
      document.getElementById("book-a-demo-overlay").style.display = "none";}
      catch{

      }
      if(e){
            let closeevent = new Event("POPUPCLOSE", {bubbles: true});
            e.dispatchEvent(closeevent)
      }
}

function closeswitchteamconfirmPopups(e,event){
      document.getElementById("switchteam-confirm").style.display = "none";
      document.getElementById("pastdue_blocker_model").style.display = "block";
      document.getElementById("enterprisepaynow").style.display = "none";
      try{entpdclearhostedfields()
            entpdthreeDS.cancelVerifyCard(function (err, verifyPayload) {
                if (err) {
                    console. log(err.message); // No verification payload available
                    return;}
                });
            pdgetnewnonce()}
      catch{}
      $("#pdcardErrormsg").html("");  
      $(".pd-card-error-msg").css('display','none');
      }

function openswitchteamconfirmPopups(to_teamid){
      toteamid=to_teamid
      document.getElementById("switchteam-confirm").style.display = "block";
      document.getElementById("pastdue_blocker_model").style.display = "none";
      document.getElementById("teamscroll").style.display = "none";
      }

function closePastDuePopups(e,event){
      // Reseting Fields
      document.querySelectorAll("#pastdue_pay_model #cardNumberPlanUpgrade")[0].value = ""
      document.querySelectorAll("#pastdue_pay_model #expiryDatePlanUpgrade")[0].value =""
      document.querySelectorAll("#pastdue_pay_model #cardCvvPlanUpgrade")[0].value = ""
      document.querySelectorAll("#pastdue_pay_model #zip-code-val")[0].value = ""


      document.getElementById("pastdue_block_model").style.display ="none";
      document.getElementById("pastdue_pay_model").style.display ="none";
      document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none";
      document.getElementById("pastdue_paynow_model").style.display = "none";
      document.getElementById("paypal_pastdue_paynow_model").style.display = "none" 
      document.querySelectorAll("#pastdue_pay_model #displaycarderrors")[0].innerHTML ="";

      document.getElementById("paypastdue").removeEventListener("click", openpastduepayListener, false )
      document.getElementById("payPastDueNow").removeEventListener("click", pastduepayListener, false )

      if(e){
            let closeevent = new Event("POPUPCLOSE", {bubbles: true});
            e.dispatchEvent(closeevent)
      }
}

function openpastduepopup_old(){

      return new Promise(function(resolve, reject) {

      document.getElementById("pastdue_block_model").style.display ="none";
      document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
      document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "block";

      url = redirecturlserver+'/p/gpd';

      data='teamId='+teamId
      fbajaxcall(url,data,null).then(function(result) {
            result = JSON.parse(result)
            splitUpCost = atob(result['b'])
            teamSize = atob(result['a'])
            planType = atob(result['c'])
            totalCost = splitUpCost ;
            proration = true;
            period = JSON.parse(atob(result['e']))

            document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
            document.getElementById("pastdue_pay_model").style.display = "block";
            if(atob(result1['f']) == "growth"){
                  document.getElementById("pastdue_contactus").style.display = "block";
            }
            if(planType == 'monthly'){

                  document.querySelectorAll("#pastdue_pay_model #upgradePaymentPlanHeader")[0].innerText = pgettext('paymentsUpgradePlans',"Due Payment of ")+ period['startmonth']+" "+  period['startyear'];
            }else{
                  document.querySelectorAll("#pastdue_pay_model #upgradePaymentPlanHeader")[0].innerText = pgettext('paymentsUpgradePlans',"Due Payment of ")+ period['startmonth']+" "+  period['startyear']+ " - " + period['endmonth']+" "+  period['endyear'];
            }

            if(proration){
                  document.querySelectorAll("#pastdue_pay_model #total_membersCost_splitUp")[0].innerText= "$"+splitUpCost/teamSize+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                  document.querySelectorAll("#pastdue_pay_model #totalCostAmountPay")[0].innerText="$"+totalCost+""

                  teamDetails = {'teamSize':"teamSize",'proration':true,'plan':"selectedplan",'teamId':teamId}
            }
            else{
                  document.querySelectorAll("#pastdue_pay_model  #totalCostAmountPay")[0].innerText="$"+totalCost+""
                  teamDetails = {'teamSize':"teamSize",'proration':false,'plan':"selectedplan",'teamId':teamId}
            }


      }).catch(function(result){

      });

      });

}

function paypastdue(teamId, pagesource="", section=""){

      return new Promise(function(resolve, reject) {

      // document.getElementById("pastdue_pay_model").style.display = "none";
      document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
      // document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "block";
      document.getElementById("payPastDueNow").disabled = true;

      url = redirecturlserver+'/p/ppd';

      var cardNo = document.querySelectorAll("#pastdue_pay_model #cardNumberPlanUpgrade")[0].value
      var expiry = document.querySelectorAll("#pastdue_pay_model #expiryDatePlanUpgrade")[0].value
      var cvv = document.querySelectorAll("#pastdue_pay_model #cardCvvPlanUpgrade")[0].value
      var zipcode = document.querySelectorAll("#pastdue_pay_model #zip-code-val")[0].value


      var changeCard = document.querySelector('#pastdue_pay_model .card-contents');

      var ChangeCardandPay =0;
      if (window.getComputedStyle(changeCard).display === "block") 
      {
            if(cardNo.trim() == "" || expiry.trim() == "" || cvv.trim() == ""  || zipcode.trim() == ""){

                  document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                  document.querySelectorAll("#pastdue_pay_model #displaycarderrors")[0].innerHTML = pgettext("Validation-Error","Card details cannot be empty");
                  document.getElementById("payPastDueNow").disabled = false;
            }else{
                  ChangeCardandPay =1;
            }
      }else{
            ChangeCardandPay = -1;
      }

      if(ChangeCardandPay != 0){
            document.getElementById("payPastDueNow").disabled = true;

            pagesource = (pagesource == null || pagesource == undefined) ? "" : pagesource;
            section = (section == null || section == undefined) ? "" : section;

            var page = pagesource + section;
            
            var data='a='+btoa(teamId)+'&g='+btoa(page)+'&b='+btoa(Math.max(0, ChangeCardandPay));

            if(ChangeCardandPay == 1){
                  data += '&c='+btoa(cardNo)+'&d='+btoa(expiry)+"&e="+btoa(cvv)+"&f="+btoa(zipcode)
            }

            document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
            fbajaxcall(url,data,null).then(function(result) {
                  document.getElementById("payPastDueNow").disabled = false;
                  document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                  res = JSON.parse(result)
                  if(res['redirect_url']){
                        window.location = res['redirect_url'];
                  }
                  resolve(result)

            }, function(error) {
                  reject(error)
            })
      }

      });

}

function pastduepopup(teamId, type, pagesource, section, inviteescount){

      successcallback=undefined
      return new Promise(function(resolve, reject) {

            document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";

            function callpastduepay(teamId, pagesource, section){
                  paypastdue(teamId, pagesource, section).then(function(result) {

                        resolve(result)

                  }).catch(function(error){

                        reject(error)

                  });
            }

            openpastduepayListener = function(e){

                  var model = e.target.getAttribute('data-val')

                  document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";

                  url = redirecturlserver+'/p/gpd';

                  data='teamId='+teamId+"&pagesource="+pagesource+'&section='+section
                  fbajaxcall(url,data,null).then(function(result) {
                        result1 = JSON.parse(result)

                        if(result1['ispastdue'] == false){
                              document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                              resolve(result)

                        }else if(result1['error']){
                              reject(result)

                        }

                        document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";

                        document.getElementById("pastdue_block_model").style.display ="none";

                        //document.getElementById("paypastdue").removeEventListener("click", openpastduepayListener, false )

                        // document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "block";

                        splitUpCost = atob(result1['b'])
                        teamSize = atob(result1['a'])
                        planType = atob(result1['c'])
                        totalCost = splitUpCost ;
                        proration = true;
                        period = JSON.parse(atob(result1['e']))

                        document.getElementById("pastdue_pay_model").style.display = "block";
                        if(atob(result1['g']) != "none"){
                              document.querySelectorAll('#pastdue_pay_model .card-contents')[0].style.display = 'none';
                              document.querySelectorAll("#pastdue_pay_model .note_payment_card_details")[0].innerHTML="<span>"+pgettext('paymentsUpgradePlans','Pay with')+" "+atob(result1['h'])+" **** "+atob(result1['g'])+". </span>"+"<span class='change_credit_card change' onclick=pastdueChangeUserCardDetails(" +"this"+','+"'" +atob(result1['h'])+ "'"+ ',' +"'"+atob(result1['g'])+"'" + ")>"+pgettext('paymentsUpgradePlans','Change')+"</span>"
                        }
                        else{
                              document.querySelectorAll('#pastdue_pay_model  .card-contents').style.display = 'block';
                        }
                        if(atob(result1['f']) == "growth"){
                              document.getElementById("pastdue_contactus").style.display = "block";
                        }
                        if(planType == 'monthly'){

                              document.querySelectorAll("#pastdue_pay_model #upgradePaymentPlanHeader")[0].innerText = pgettext('paymentsUpgradePlans',"Due Payment of ")+ period['startmonth']+" "+  period['startyear'];
                        }else{
                              document.querySelectorAll("#pastdue_pay_model #upgradePaymentPlanHeader")[0].innerText = pgettext('paymentsUpgradePlans',"Due Payment of ")+ period['startmonth']+" "+  period['startyear']+ " - " + period['endmonth']+" "+  period['endyear'];
                        }

                        if(proration){
                              document.querySelectorAll("#pastdue_pay_model #total_membersCost_splitUp")[0].innerText= "$"+splitUpCost/teamSize+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
                              document.querySelectorAll("#pastdue_pay_model #totalCostAmountPay")[0].innerText="$"+totalCost+""

                        }
                        else{
                              document.querySelectorAll("#pastdue_pay_model  #totalCostAmountPay")[0].innerText="$"+totalCost+""

                        }

                        document.getElementById("payPastDueNow").addEventListener("click",pastduepayListener, false);

                  }).catch(function(error){
                        reject(error)
                  });

            }

            pastduepayListener = function(e){

                  callpastduepay(teamId, pagesource, section)
            }


            // if(type != 'banner'){

                  if (inviteescount== "undefined"){
                        inviteescount = false
                  }


                  data='teamId='+teamId+'&action='+type+"&page="+pagesource+'&section='+section+'&inviteescount='+inviteescount
                  url = redirecturlserver+'/p/cpd'

                  fbajaxcall(url,data,null).then(function(result) {

                        result1 = JSON.parse(result)
                        if(!result1['error']){
                              document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                              resolve(result)
                        }
                        else if(result1['contact_support']){
                              document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                              $('.contact-support-popup').fadeIn();
                        
                        }else if(result['error']){
                              reject(result)

                        }
                        successcallback=(resultdata)=>{
                              resolve(resultdata)
                        }
                        // document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                        // pastduewarningpopup(result1, type)
                        // document.getElementById("paypastdue").addEventListener("click", openpastduepayListener, false)

                  }).catch(function(error){

                        reject(error)

                  });

            // }else{

            //       url = redirecturlserver+'/p/gpd';

            //       data='teamId='+teamId+"&pagesource="+pagesource+'&section='+section
            //       fbajaxcall(url,data,null).then(function(result) {
            //             result1 = JSON.parse(result)

            //             if(result1["ispastdue"] == false){
            //                   document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
            //                   resolve(result)

            //             }else{

            //                   splitUpCost = atob(result1['b'])
            //                   teamSize = atob(result1['a'])
            //                   planType = atob(result1['c'])
            //                   totalCost = splitUpCost ;
            //                   proration = true;
            //                   period = JSON.parse(atob(result1['e']))


            //                   if(atob(result1['g']) != "none"){
            //                         document.querySelectorAll('#pastdue_pay_model .card-contents')[0].style.display = 'none';
            //                         document.querySelectorAll("#pastdue_pay_model .note_payment_card_details")[0].innerHTML="<span>"+pgettext('paymentsUpgradePlans','Pay with')+" "+atob(result1['h'])+" **** "+atob(result1['g'])+". </span>"+"<span class='change_credit_card change' onclick=pastdueChangeUserCardDetails(" +"this"+','+"'" +atob(result1['h'])+ "'"+ ',' +"'"+atob(result1['g'])+"'" + ")>"+pgettext('paymentsUpgradePlans','Change')+"</span>"
            //                   }
            //                   else{
            //                         document.querySelectorAll('#pastdue_pay_model  .card-contents').style.display = 'block';
            //                   }
            //                   document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
            //                   document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "block";
            //                   document.getElementById("pastdue_pay_model").style.display = "block";
            //                   if(atob(result1['f']) == "growth"){
            //                         document.getElementById("pastdue_contactus").style.display = "block";
            //                   }
            //                   if(planType == 'monthly'){

            //                         document.querySelectorAll("#pastdue_pay_model #upgradePaymentPlanHeader")[0].innerText = pgettext('paymentsUpgradePlans',"Due Payment of ")+ period['startmonth']+" "+  period['startyear'];
            //                   }else{
            //                         document.querySelectorAll("#pastdue_pay_model #upgradePaymentPlanHeader")[0].innerText = pgettext('paymentsUpgradePlans',"Due Payment of ")+ period['startmonth']+" "+  period['startyear']+ " - " + period['endmonth']+" "+  period['endyear'];
            //                   }

            //                   if(proration){
            //                         document.querySelectorAll("#pastdue_pay_model #total_membersCost_splitUp")[0].innerText= "$"+splitUpCost/teamSize+" x "+teamSize+pgettext('paymentsUpgradePlans',' Team members')
            //                         document.querySelectorAll("#pastdue_pay_model #totalCostAmountPay")[0].innerText="$"+totalCost+""

            //                   }
            //                   else{
            //                         document.querySelectorAll("#pastdue_pay_model  #totalCostAmountPay")[0].innerText="$"+totalCost+""

            //                   }

            //                   document.getElementById("payPastDueNow").addEventListener("click",pastduepayListener, false);

            //             }


            //       }).catch(function(error){

            //             reject(error)

            //       });

            // }

      });

}

function pastdueChangeUserCardDetails(e ,brand,cc){
      if( e.classList[1] == "change"){
            document.querySelectorAll("#pastdue_pay_model .card-contents")[0].style.display = "block"
            document.querySelectorAll("#pastdue_pay_model .note_payment_card_details")[0].firstChild.innerHTML = pgettext('paymentsUpgradePlans','This will replace')+" "+ brand + " **** " + cc +". "
            
            e.innerHTML = pgettext("paymentsUpgradePlans","Cancel")
            e.classList.remove("change");
            e.classList.add("cancel");

      }
      else{
            document.getElementById("displaycarderrors").innerHTML = ""
            document.querySelectorAll("#pastdue_pay_model .card-contents")[0].style.display = "none"
            document.querySelectorAll("#pastdue_pay_model .note_payment_card_details")[0].firstChild.innerHTML = pgettext('paymentsUpgradePlans','Pay with')+" "+ brand + " **** " + cc +". "

            e.innerHTML = pgettext("paymentsUpgradePlans","Change")
            e.classList.remove("cancel");
            e.classList.add("change");
      }
}

function ajaxErrorMessage(jqXHR, exception) {
      var msg = '';
      if (jqXHR.status === 0) {
          msg = pgettext("NetworkError-NoticationMessage","Please check your internet connection and retry.");
      } else if (jqXHR.status == 404) {
          msg = pgettext("NetworkError-NoticationMessage","Something went wrong. Try logging in again.");
      }else if (jqXHR.status == 400 || jqXHR.status == 408) {
          msg = pgettext("NetworkError-NoticationMessage","Something went wrong. Please try again");
      }
      else if (jqXHR.status == 403 || jqXHR.status == 401) {
          msg = pgettext("NetworkError-NoticationMessage","Something went wrong. Try logging in again.");
      } else if (jqXHR.status == 500) {
          msg = pgettext("NetworkError-NoticationMessage","Internal server error. Please try again later.");
      } else if (exception === 'parsererror') {
          msg = pgettext("NetworkError-NoticationMessage","Requested JSON parse failed.");
      } else if (exception === 'timeout') {
          msg = pgettext("NetworkError-NoticationMessage","Request timeout. Please try again later.");
      } else if (exception === 'abort') {
          msg = pgettext("NetworkError-NoticationMessage","Request aborted. Please try again later.");
      } else {
          msg = pgettext("NetworkError-NoticationMessage","Unexpected error. Please try again later.");
      }
      return msg;
  }
// function editzoommonthlyfilter(e,event){
//       event.stopPropagation();
//       // document.getElementById("profession_dropdown_block").style.display="none";

//       e.style.display = "block"

//       // Add active class to the current button (highlight it)

//       var block = document.getElementById("zoommonthly_dropdown_block");
//       var list = block.getElementsByClassName("zoommonthly_dropdown_list");
//       for (var i = 0; i < list.length; i++) {
//       list[i].addEventListener("click", function() {
//             var current = document.getElementsByClassName("selected_zoommonthly");
//             current[0].className = current[0].className.replace(" selected_zoommonthly", "");
//             this.className += " selected_zoommonthly";
//       });
//       }

//       block.onclick = function() {
//             block.style.display = "none";

//             document.getElementsByClassName("select_zoom_month")[0].value = document.getElementsByClassName("selected_zoommonthly")[0].childNodes[1].childNodes[2].textContent
//       }
// }

// function editzoomyearlyfilter(e,event){
//       event.stopPropagation();
//       // document.getElementById("profession_dropdown_block").style.display="none";

//       e.style.display = "block"

//       // Add active class to the current button (highlight it)

//       var block = document.getElementById("zoomyearly_dropdown_block");
//       var list = block.getElementsByClassName("zoomyearly_dropdown_list");
//       for (var i = 0; i < list.length; i++) {
//       list[i].addEventListener("click", function() {
//             var current = document.getElementsByClassName("selected_zoomyearly");
//             current[0].className = current[0].className.replace(" selected_zoomyearly", "");
//             this.className += " selected_zoomyearly";
//       });
//       }

//       block.onclick = function() {
//             block.style.display = "none";

//             document.getElementsByClassName("select_zoom_yearly")[0].value = document.getElementsByClassName("selected_zoomyearly")[0].childNodes[0].childNodes[1].textContent
//       }
// }


// document.getElementById("stopdeckshow").addEventListener("click", showdecktutorial('true'));


function showdecktutorial(isappload){
      var confirm = document.getElementById("stopdeckshow");
      var current_user_email = document.getElementById("getuseremail").value;

      if(confirm.checked==false)
         {
            deckpopupstatus = 0;
         }
         else{
            deckpopupstatus = 1;
         }
         if(isappload == 'true'){

               document.getElementsByClassName("slidetutorialfooter")[0].style.display = "block";
               return new Promise(function(resolve, reject) {
                  url = redirecturlserver+'/deck/decktutorial';
                  data='deckpopupstatus='+deckpopupstatus;

                  fbajaxcall(url,data,null).then(function(result) {
                        var result1 = JSON.parse(result)
                        resolve(result1)

                  }, function(error) {

                        reject(error)
                  })
            });
         }else{

              document.getElementsByClassName("slidetutorialfooter")[0].style.display = "none";
            //   document.getElementsByClassName("slidetutorialbody")[0].style.height = "100%";
            document.getElementsByClassName("slideembed")[0].setAttribute("src","https://app.getshow.io/iframe/media/zLw7wHwBKAEubyv-5-Im?sh_mail="+current_user_email)
              document.getElementById('slideplayvideopopup').style.display = "block";
         }

         //isapp = true show check





}

function addPaymentMode(paymentmode) {
      if(paymentmode == "paypal"){
            const sel = document.querySelector('#updradePlanNow');
            sel.setAttribute('data-payment', "paypal");
      }

      else {
            const sel = document.querySelector('#updradePlanNow');
            sel.setAttribute('data-payment', "card");
      }
      return true;
}
function paynow(){

      data='teamId='+teamId+'&action=pastduepaynow'+'&inviteescount=false'
      url = redirecturlserver+'/p/cpd'

      fbajaxcall(url,data,null).then(function(result) {

            result1 = JSON.parse(result)
            if(result1['ispastdue'] == false){
                  document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                  // console.log('error at paynow')

            }else if(result['error']){
                  // console.log('error at paynow')

            }
            document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
            pastduewarningpopup(result1, 'pastduepaynow')
            document.getElementById("paypastdue").addEventListener("click", openpastduepayListener, false)

      }).catch(function(error){

            // console.log('error at paynow')

      });

  }
  function entpaynow(){
      try{
      getteam(email,teamId)
      $(".anim-new-modal-block-overlay").click(function(){
      document.getElementById("enterprisepaynow").style.display = "none";
      document.getElementsByClassName("anim-new-modal-block-overlay")[0].style.display = "none";
      document.getElementById("pastdue_blocker_model").style.display = "none";}
      )}
      catch{}

  }

  function cardpaynow(){
      document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
      document.getElementById("pastdue_block_model").style.display = "none"
      document.getElementById("pastdue_paynow_model").style.display = "block"
      // document.getElementById("anim-new-modal-overlay")[0].style.display = "block"
      gettokenpd()
      getamount()
  }
  function enterprisepaynow(paymentmode){
      document.getElementById("enterprisepaynow").style.display = "block";
      document.getElementById("pastdue_block_model").style.display = "none"
      document.getElementById("pastdue_blocker_model").style.display = "none"
      $("#toggle-payment-mode-popup-bt").prop("checked", true);
      entpaymentMode=paymentmode
      if (!($("#entcard-numberpd iframe").length==1 && $("#entexpiration-datepd iframe").length==1 && $("#entcvvpd iframe").length==1 && $("#entpostal-codepd iframe").length==1 )){
            entgettokenpd()}
      
      console.log('paymentmode',paymentmode)
      data='teamId='+teamId+'&ispastdue=true&entpaymentmode='+paymentmode
      url = redirecturlserver+'/payments/p/pastdueamount/'
      fbajaxcall(url,data,null).then(function(result){
            result1 = JSON.parse(result)
            console.log('pastdueamount',result1)
            if(result1['error'] == false){
                  retrycharge1=result1['retrycharge']
                  if (paymentmode=='braintree' && result1['retrycharge']){
                        document.getElementById("paypal-block").style.display = "none"
                        document.getElementById("lastmonthdue").style.display = "none" 
                        document.getElementById("enterprisepaynow").style.height = "685px"
                        $("#toggle-payment-mode-popup-bt").prop("checked", true);
                  }
                  else if(paymentmode=='paypal' && result1['retrycharge']){
                        document.getElementById("braintree-block").style.display = "none" 
                        document.getElementById("lastmonthdue").style.display = "none" 
                        document.getElementById("enterprisepaynow").style.height = "510px"
                        $("#toggle-payment-mode-popup-ppp").prop("checked", true);
                  }
                  document.getElementById("membercount").innerHTML=result1['membercount']
                  document.getElementById("amountbreakdown").innerHTML=result1['amountbreakdown']
                  try{document.getElementById("due_amount").innerHTML='$'+result1['dueamount'].split('.')[0]}
                  catch{document.getElementById("due_amount").innerHTML='$'+result1['dueamount']}
                  if (!result1['retrycharge']){
                        retrycharge1=1
                        var duedetails="Last month due:"+result1['dates']
                        var previousdue="$"+result1['previous_due']
                        $("#lastmonthduewithdate").html(duedetails);
                        $("#last_due_amount").html(previousdue);
                  }
                  console.log(result1)
            }else if(result1['error']){
                errorMsg=result1['message']
                document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                document.getElementById("enterprisepaynow").style.display = "none";
                document.getElementById("pastdue_blocker_model").style.display = "block";
                $("#NotificationbarMessage").html(errorMsg);
                $('.Notification_popupbar').fadeIn();
                document.querySelector(".paynow-button").disabled = false;
                successfade()
                  console.log(result1)
            }
      }).catch(function(error){
            console.log(error)
      });

      }

  function capturepayment(){
      document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
      amount=document.getElementById("Paypal_Due_amount").innerHTML.trim().replace(',','.').replace("$",""),
      data='teamId='+teamId+'&ispastdue=true&amount='+amount
      url = redirecturlserver+'/payments/p/paypal/paypalcapture'

      fbajaxcall(url,data,null).then(function(result) {

            result1 = JSON.parse(result)
            document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
            document.getElementById("paypal_pastdue_paynow_model").style.display = "none";
            try{
                  document.getElementById("book-a-demo-overlay").style.display = "none";
            }
            catch{}
            if(result1['error'] == false){
                  document.getElementById("Paypal_Due_amount").innerHTML='$'+result1['dueamount']  
                  document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
                  document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none"; 
                  document.getElementsByClassName("past_due_announcement_banner")[0].style.display = "none";  
                  try{
                        document.getElementById("book-a-demo-overlay").style.display = "none";
                  }
                  catch{}

                  try{
                        document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none";
                  }
                  catch{}
                  if (successcallback){
                  successcallback(result)}
                  successcallback=undefined
                  Msg='Payment Success'
                  $("#NotificationbarMessage").html(Msg);
                  $('.Notification_popupbar').fadeIn();
                  $('.Notification_popupbar').fadeOut(5000);

            }else if(result1['error']){
                  // resolve(result)
                  document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none"; 
                  document.getElementsByClassName("anim-new-modal-overlay")[0].style.display = "none"; 
                  Msg='Payment Failure'
                  $("#NotificationbarMessage").html(Msg);
                  $('.Notification_popupbar').fadeIn();
                  $('.Notification_popupbar').fadeOut(5000);
                  console.log(result1)
            }
            

      }).catch(function(error){

            console.log(error)

      });


  }
  function paypalpaynow(){
      document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
      document.getElementById("pastdue_block_model").style.display = "none"
      document.getElementById("paypal_pastdue_paynow_model").style.display = "block";
      data='teamId='+teamId+'&ispastdue=true'
      url = redirecturlserver+'/payments/p/pastdueamount/'
      fbajaxcall(url,data,null).then(function(result) {

            result1 = JSON.parse(result)
            if(result1['error'] == false){
                  document.getElementById("Paypal_Due_amount").innerHTML='$'+result1['dueamount']  
                  document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none"; 
                  console.log(result1)

            }else if(result['error']){
                  rconsole.log(result1)
            }
            

      }).catch(function(error){

            console.log(error)

      });
      
  }



function  getamount(){
      console.log('getamount')
      data='teamId='+teamId+'&ispastdue=true'
      url = redirecturlserver+'/payments/p/pastdueamount/'
      fbajaxcall(url,data,null).then(function(result) {

            result1 = JSON.parse(result)
            if(result1['error'] == false){
                  document.getElementById("Due_amount").innerHTML='$'+result1['dueamount']
                  // console.log(result1)

            }else if(result['error']){
                  // console.log(result1)
            }
            

      }).catch(function(error){

            // console.log(error)

      });


}

function getteam(email,team_id){
        var mailformat = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,20})+$/;
        if(email.match(mailformat))
        {
            var datas={'adminEmail': btoa(email)};
            data = JSON.stringify(datas);
            $.ajax({ 
                url: siteurl+"/enterprise/p/usersteam",
                mode: 'cors',
                withCredentials: false, 
                headers: { 'Access-Control-Allow-Origin': '*', "X-CSRFToken": csrftoken},
                xsrfHeaderName: "X-CSRFToken",
                data: { a : btoa(data) },
                type: 'post',
                success: function(result)
                {
                    if(!result['error'])
                    {
                        var appendlist="";
                        var newteam=result['newteam'];
                        var flat_colors = ["#1abc9c", "#2ecc71", "#3498db","#9b59b6","#34495e","#2980b9","#bdc3c7","#f39c12"];
                        
                        for(var i=0;i<result['newteam'].length;i++)
                        {
                            var color=flat_colors[Math.floor(Math.random()*flat_colors.length)]
                            appendlist+="<div class='logotext' style='display:flex;margin:10px 10px 0 10px;border-radius:5px; padding:9px; flex-wrap:nowrap;'><div><a style=' color:white; border-radius: 5px; background-color:"+ color+"'>NT</a></div><div><a class='global_switch_team2' onclick=createteamr() value='"+result['newteam'][i].team_id+"'>"+result['newteam'][i].team_name+"</a></div></div>";
                        }
                        if(result['status'])
                        {
                            var teamlist=result['teamlist'];
                            for (var i=0; i<teamlist.length; i++){

                            if(teamlist[i].team_id!=team_id){ 
                              var color=flat_colors[Math.floor(Math.random()*flat_colors.length)]
                              var pltype=teamlist[i].plan_type;
                              appendlist+="<div class='logotext' style='display:flex; margin:0 10px;border-radius:5px; padding:9px; flex-wrap:nowrap;'><div><a style='color:white; border-radius: 5px; background-color:"+ color+"'>"+teamlist[i].initials+"</a></div><div><a class='global_switch_team1' onclick=switchteamr("+teamlist[i].team_id+") value='"+teamlist[i].team_id+"'>"+teamlist[i].team_name+"</a></div></div>";
                              
                            }}
                            $("#list-items").html(appendlist);
                            setteamlistheight()
                            document.getElementById("pastdue_blocker_model").style.display = "block";
                            document.getElementsByClassName("anim-new-modal-block-overlay")[0].style.display = "block";

                        }
                        else
                        {
                            $("#team-id").html(appendlist);
                            setteamlistheight()
                        //     $("#teamdiv").hide();
                            //new team hide team select
                        }
                    }
                    else
                    {
                        $("#team_page_success_notification").html(result["errormsg"]);
                    }
                },
                error:function(){
                  // console.log('gterror')
                  //   $("#teamdiv").hide();
                }
            });
        }
        else
        {
            $("#email_status").text("invalid");
        }
    }



function removepaymentlisteners() {
      document.getElementById("updradePlanNow").removeEventListener("click", webPaymentUpgradeHandler, true )
      document.getElementById("updradePlanNow").removeEventListener("click", webPaymentDowngradeHandler, true )
      return true;
}

function createteamr(){
      document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
      $.ajax({
          type: "POST",
          url: siteurl+"/brand/ct/",
          mode: 'cors',
          withCredentials: false, 
          headers: {'Access-Control-Allow-Origin': '*', "X-CSRFToken": csrftoken},
          xsrfHeaderName: "X-CSRFToken",
          success: function(result){
                  document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
               
                  if(result['error']){
                          if(result['type'] == 'session'){
                              window.location.href = siteurl+"/logout";
                          }
                          else{
                              displaySecurityPopup(result['errormsg']);
                          }
                  }
                  else{
                      window.location.href = result['redirectURL'];
                  }
            },
            error: function(xhr, textStatus, error) {
                  if(xhr.status == 512){
                        // SESSION EXPIRED -  When there is another user logged in with same credentials
                        resultjson = JSON.parse(xhr.responseText)
                        if (resultjson.message ==  "Oauth Authentication Required"){
                              sessionExpired();
                        }                                
                  } 
                  if(xhr.status == 513){
                        // OLD LOGOUT FLOW
                        window.location.href = siteurl+"/logout"; 
                  }
            }
      });
}

function switchteamr(value){
      console.log('switchh')
      console.log(value.id)
      var steamid=value.id
      document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "block";
      
        $.ajax({
            type: "GET",
            url: siteurl+'/brand/st?dataT='+steamid,
            mode: 'cors',
            withCredentials: false, 
            headers: { 'Access-Control-Allow-Origin': '*', "X-CSRFToken": csrftoken },
            xsrfHeaderName: "X-CSRFToken",
            success: function(result){
                    if(result['error']){
                            if(result['type'] == 'session'){
                                    window.location.href = siteurl+"/logout";
                            }
                    }
            location.reload();
      },
      error: function(xhr, textStatus, error) {
            if(xhr.status == 512){
                  sessionExpired();
            } 
            if(xhr.status == 513){
                  // OLD LOGOUT FLOW
                  window.location.href = siteurl+"/logout"; 
            }
      }
        })
    
}

// SESSION EXPIRED POPUP

function openSessionExpiredPopup(){
      var currentEmail;
      if(email){
            currentEmail = email;
            console.log('Email exits from session')
      } else{
            currentEmail = getCookie('current_user_email')
            console.log('Email exits from cookie')
      }
      if(currentEmail){
          if(document.querySelector('.session-expired-email')){
             document.querySelector('.session-expired-email').innerHTML = currentEmail;
          }
          console.log('Email exits from cookie/session')
      }else{
            console.log('Email not exits from cookie/session')
      }

      document.querySelector('.session-expired-popup-bg').style.display = 'block';
      document.querySelector('#session-expired-popup').style.display = 'block';
}

function closeSessionExpiredPopup(){
      document.querySelector('.session-expired-popup-bg').style.display = 'none';
      document.querySelector('#session-expired-popup').style.display = 'none';
      console.log('inside popup close');
}

function sessionExpired(){
      document.getElementsByClassName("lds-animaker-overlay")[0].style.display = "none";
      openSessionExpiredPopup();
      // resultjson = JSON.parse(xhttp.responseText)
      // if (resultjson.message ==  "Oauth Authentication Required"){
      //       window.location.href = siteurl + "/logout"; 
      // }                        
}

function logoutSession(){
      document.cookie = "current_user_email= ; expires = Thu, 01 Jan 1970 00:00:00 GMT";
      closeSessionExpiredPopup()
      window.location.href = siteurl + "/logout"; 
}