"use client";
import { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import Navbar from "@/components/Navbar";
import Droplet from "@/components/Droplet";
import LeftSideBar from "@/components/LeftSideBar";
import RightSideBar from "@/components/RightSideBar";
import "./globals.css";
import {
  ArrowBack,
  ConnectWithoutContactRounded,
  Diversity1,
} from "@mui/icons-material";
import OceanSpeedDial from "@/components/OceanSpeedDial";
import { DropletStore, UIStore, UserStore } from "@/store/OceanStore";
import RippleDrawer from "@/components/SwipeableRippleDrawer";
import { initializeTheme } from "@/utils/ThemeToggle";

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function Home() {
  const router = useRouter();
  const {
    isMsgsOpen,
    setIsMsgsOpen,
    isOCardOpen,
    setIsOCardOpen,
    setIsCreateDropletModalOpen,
    dropletsRefreshId,
    toggleDarkMode,
    isUILoading,
    setIsUILoading,
  } = UIStore();

  const { GetUserProfile, setProfileData } = UserStore();

  const { GetFeedDroplets } = DropletStore();

  const [dropletsData, setDropletsData] = useState([]);

  const getDropletData = async () => {
    const data = await GetFeedDroplets();
    setDropletsData(data);
    return data;
  };
  

  useEffect(() => {
    setUserProfileData();
    setIsUILoading(true);
    getDropletData();
    setIsMsgsOpen(false);
    setIsOCardOpen(false);
    setIsUILoading(false);
  }, [ , dropletsRefreshId]);

  const setUserProfileData = async () => {
    try {
      const data = await GetUserProfile();
      setProfileData(data);
    } catch (error) {}
  };

  useEffect(() => {
    const cleanup = initializeTheme(toggleDarkMode);
    setUserProfileData();
    setIsUILoading(false);
    // Initialize theme and handle cleanup of event listeners
    return cleanup; // Cleanup event listener on component unmount
  }, []);

  return (
    <div>
      <div className="w-screen flex h-screen relative overflow-x-hidden customScrollbar">
        {(isMsgsOpen || isOCardOpen) && (
          <div
            onClick={() => {
              setIsMsgsOpen(false);
              setIsOCardOpen(false);
            }}
            className="fixed top-[1px] left-[1px] z-30 bg-blue-500 dark:bg-blue-700 bg-opacity-50 backdrop-blur-sm rounded-tl-none rounded-xl p-[2px] cursor-pointer"
          >
            <ArrowBack className="size-7" />
          </div>
        )}
        <OceanSpeedDial />
        {/* NAVIGATION BAR STARTS HERE */}
        <Navbar
          navStyle={
            "fixed -bottom-2 pb-2 px-[2px] sm:me-1 lg:me-0 flex w-full sm:w-[74%] md:w-[79%] lg:w-[65.7%] xl:w-[51%] xl1:w-[51.4%] sm:rounded-t-2xl z-30 bg-primary dark:bg-d_primary border-t border-slate-700 translate-x-1/2 right-1/2 lg:right-[1%] lg:translate-x-0 xl:right-auto xl:left-[26.25%] xl1:left-[26.8%] lg:-top-[3px] lg:bottom-auto lg:rounded-b-2xl lg:pb-0 lg:rounded-t-none lg:border-b lg:border-t-0 justify-between overflow-y-hidden"
          }
        />
        {/* NAVIGATION BAR ENDS HERE */}
        {/* LEFT SIDE BAR STARTS HERE */}
        <LeftSideBar />
        {/* LEFT SIDE BAR ENDS HERE */}
        {/* MAIN CONTENT STARTS HERE */}
        <div
          className={`  ${
            isMsgsOpen || isOCardOpen ? "hidden" : ""
          } h-full w-full m-auto sm:w-3/4 md:w-[80%] xl:w-[63%] xl:pe-2 relative pe p-2 `}
        >
          {/* GREETINGS SECTIONS STARTS HERE */}
          <div className=" lg:mt-14 flex flex-col gap-2 sm:gap-3">
            {/* OCEANITES FINDER AND CONNECTOR STARTS HERE */}
            <div className="bg-ternary dark:bg-blue-950 dark:bg-opacity-70 w-full items-center  p-3 px-4  rounded-2xl flex justify-between">
              <div className="text-lg flex flex-col sm:flex-row sm:gap-2">
                <div className="flex items-center gap-2">
                  <h1 className="text-sm sm:text-lg ">Looking for New</h1>{" "}
                  <h1>Oceanites ?</h1>
                </div>
                <div className="flex items-center gap-2">
                  <Diversity1 />
                  <h1>Lets connect !</h1>
                </div>
              </div>
              <button
                onClick={() => {
                  router.push("/oceanites");
                }}
                className="bg-blue-500 text-d_text_clr px-2 w-12 rounded-full h-8"
              >
                <ConnectWithoutContactRounded className="size-7" />
              </button>
            </div>
            {/* OCEANITES FINDER AND CONNECTOR ENDS HERE */}
            {/* DROPLET DROPER GREETING STARTS HERE */}
            <div className="bg-ternary dark:bg-d_ternary w-full  p-3 px-4  items-center rounded-2xl flex justify-between">
              <div className="text-lg flex flex-col sm:flex-row sm:gap-2">
                <h1>Whats Happening ?</h1>
                <h1>Whats on your mind!</h1>
              </div>
              <button
                onClick={() => {
                  setIsCreateDropletModalOpen(true);
                }}
                className="bg-blue-500 text-d_text_clr px-2 rounded-full h-8"
              >
                Drop
              </button>
            </div>
            {/* DROPLET DROPER GREETING ENDS HERE */}
          </div>
          {/* GREETINGS SECTIONS ENDS HERE */}
          {/* DROPLETS START HERE */}
          <div>
            {dropletsData?.map((droplet) => {
              return (
                <Droplet
                  key={droplet?.id}
                  droplet_id={droplet?.id}
                  author_id={droplet?.user_id?.id}
                  avatar_url={droplet?.user_id?.avatar}
                  name={droplet?.user_id?.name}
                  username={droplet?.user_id?.username}
                  wave={droplet?.user_id?.wave}
                  platform={droplet?.platform}
                  time={"5h"}
                  content={droplet?.content}
                  images={droplet?.images}
                  videos={droplet?.videos}
                  stars={droplet?.stars}
                  ripples={droplet?.ripples}
                  redrops={droplet?.redrops}
                />
              );
            })}
          </div>
          {/* DROPLETS ENDS HERE */}
          <div className="h-1 w-full my-20"></div>
        </div>
        {/* MAIN CONTENT ENDS HERE */}
        {/* RIGHT SIDE BAR STARTS HERE */}
        <RightSideBar />
        {/* RIGHT SIDE BAR ENDS HERE */}
      </div>
    </div>
  );
}
